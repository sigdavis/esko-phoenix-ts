{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Phoenix API",
    "version" : "25.03"
  },
  "servers" : [ {
    "url" : "/phoenix"
  } ],
  "tags" : [ {
    "name" : "Jobs API",
    "description" : "Job automation (will be deprecated and replaced by Projects API in the future)"
  }, {
    "name" : "Projects API",
    "description" : "Project automation"
  }, {
    "name" : "Libraries API",
    "description" : "Library management"
  }, {
    "name" : "Presets API",
    "description" : "Presets management"
  } ],
  "paths" : {
    "/presets/import/die/ard" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all ARD Die Import Presets",
        "operationId" : "getArdDieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/cff2" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all CFF2 Die Layout Import Presets",
        "operationId" : "getCff2DieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/ddes2" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all DDES2 Die Layout Import Presets",
        "operationId" : "getDdes2DieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/ddes3" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all DDES3 Die Layout Import Presets",
        "operationId" : "getDdes3DieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/dxf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all DXF Die Layout Import Presets",
        "operationId" : "getDxfDieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/mfg" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all MFG Die Import Presets",
        "operationId" : "getMfgDieImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/die/pdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all PDF Die Layout Import Presets",
        "operationId" : "getPdfDieLayoutImportPresets_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/imposition-ai/{profile-id}" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "Get Imposition AI profile by ID",
        "operationId" : "getImpositionAiProfiles_1",
        "parameters" : [ {
          "name" : "profile-id",
          "in" : "path",
          "description" : "ID of Imposition AI profile to get",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Get imposition AI profile succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
                }
              }
            }
          },
          "404" : {
            "description" : "Profile not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Presets API" ],
        "summary" : "Edit Imposition AI profile",
        "operationId" : "editImpositionAiProfiles_1",
        "parameters" : [ {
          "name" : "profile-id",
          "in" : "path",
          "description" : "ID of Imposition AI profile to edit",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Edit imposition AI profile succeeded",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is invalid",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "404" : {
            "description" : "Profile not found",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "503" : {
            "description" : "Service is at maximum concurrency",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Presets API" ],
        "summary" : "Delete Imposition AI profile",
        "operationId" : "deleteImpositionAiProfiles_1",
        "parameters" : [ {
          "name" : "profile-id",
          "in" : "path",
          "description" : "ID of Imposition AI profile to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Delete imposition AI profile succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "404" : {
            "description" : "Profile not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          }
        }
      }
    },
    "/presets/imposition-ai" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "Get list of all Imposition AI profile",
        "operationId" : "getImpositionAiProfiles_3",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Presets API" ],
        "summary" : "Add new Imposition AI profile",
        "operationId" : "addImpositionAiProfiles_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Add imposition AI profile succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "400" : {
            "description" : "Request is invalid",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          },
          "503" : {
            "description" : "Service is at maximum concurrency",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              },
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseEntity"
                }
              }
            }
          }
        }
      }
    },
    "/presets/imposition-ai/profiles" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all Imposition AI Profiles (Deprecated)",
        "operationId" : "getImpositionAiProfiles",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/presets/marks/dynamic-ink-mappings" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all dynamic ink mapping presets",
        "operationId" : "getDynamicInkMappings",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/marks/dynamic-keyword-mappings" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all dynamic keyword mapping presets",
        "operationId" : "getDynamicKeywordMapping",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/cover-sheet" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all Cover Sheet export presets",
        "operationId" : "getCoverSheetExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/report/csv" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all CSV Report Presets",
        "operationId" : "getCsvReportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/die/cff2" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all cutting CFF2 export presets",
        "operationId" : "getCff2DieExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/die/dxf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all cutting DXF export presets",
        "operationId" : "getExportDieDxfPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/die/pdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all cutting PDF export presets",
        "operationId" : "getPdfDieExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/die/zcc" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all cutting ZCC export presets",
        "operationId" : "getExportDieZccPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/hp-jdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all HP JDF export presets",
        "operationId" : "getHpJdfExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/jdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all JDF export presets",
        "operationId" : "getImposedJdfExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/jdf-cutting" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all JDF export presets",
        "operationId" : "getCuttingJdfExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/report/json" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all JSON Project Report Presets",
        "operationId" : "getJsonReportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/jdf-kongsberg" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all Kongsberg JDF export presets",
        "operationId" : "getKongsbergJdfExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/pdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all PDF export presets",
        "operationId" : "getImposedPdfExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/report/pdf" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all PDF Project Report Presets",
        "operationId" : "getPdfReportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/pdf-vector" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all PDF Vector export presets",
        "operationId" : "getPdfVectorExportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/tiling-report" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all tiling report export presets",
        "operationId" : "getExportTilingReportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/export/report/xml" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all XML Project Report Presets",
        "operationId" : "getXmlReportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/ganging/profiles" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all Ganging Profiles (Deprecated)",
        "operationId" : "getGangingProfiles",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/presets/import/product/csv" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all Product CSV import presets",
        "operationId" : "getProductCsvImportPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/tools/step-and-repeat" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all step-and-repeat presets",
        "operationId" : "getStepAndRepeatPresets",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/import/stock-csv" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all stock CSV presets",
        "operationId" : "getStockCsv",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/presets/products/tiling" : {
      "get" : {
        "tags" : [ "Presets API" ],
        "summary" : "List all tiling presets",
        "operationId" : "getTilings_1",
        "responses" : {
          "default" : {
            "description" : "default response",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              },
              "application/xml" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PresetEntity"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "MessageEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Unique, language independent ID for this message",
            "format" : "int32"
          },
          "text" : {
            "type" : "string",
            "description" : "Localized message text"
          },
          "action" : {
            "type" : "string",
            "description" : "Action that generated this message"
          }
        },
        "description" : "Info, warning, or error message format",
        "xml" : {
          "name" : "message"
        }
      },
      "ResponseEntity" : {
        "required" : [ "success" ],
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "Overall success of operation"
          },
          "status-code" : {
            "type" : "integer",
            "description" : "HTTP response status code",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "description" : "Any errors that occurred during operation",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MessageEntity"
            }
          },
          "warnings" : {
            "type" : "array",
            "description" : "Any warnings that occurred during operation",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MessageEntity"
            }
          },
          "resources" : {
            "type" : "array",
            "description" : "URIs of newly created resources",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "URIs of newly created resources",
              "xml" : {
                "name" : "resource"
              }
            }
          }
        },
        "description" : "Standard action response including success, new resources, and error/warning messages",
        "xml" : {
          "name" : "response"
        }
      },
      "CreateJobResource" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Job ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Job name"
          },
          "contact" : {
            "type" : "string",
            "description" : "Job contact person"
          },
          "phone" : {
            "type" : "string",
            "description" : "Job phone number"
          },
          "client" : {
            "type" : "string",
            "description" : "Job client name"
          },
          "notes" : {
            "type" : "string",
            "description" : "Job notes"
          },
          "units" : {
            "type" : "string",
            "description" : "Job units"
          },
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "template-path" : {
            "type" : "string",
            "description" : "Job template path for creating a new job from a template file or reporting which template was used to create a given job"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Create job action resource",
        "xml" : {
          "name" : "create-job-resource"
        }
      },
      "boolean-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "boolean",
            "description" : "Property value"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Boolean property",
        "xml" : {
          "name" : "boolean-property"
        }
      },
      "date-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "string",
            "description" : "Property value",
            "format" : "date-time"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Date property",
        "xml" : {
          "name" : "date-property"
        }
      },
      "double-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "number",
            "description" : "Property value",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Number property",
        "xml" : {
          "name" : "double-property"
        }
      },
      "integer-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "integer",
            "description" : "Property value",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Integer property",
        "xml" : {
          "name" : "integer-property"
        }
      },
      "propertyObject" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Custom property",
        "xml" : {
          "name" : "property"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Boolean" : "#/components/schemas/boolean-property",
            "Date" : "#/components/schemas/date-property",
            "Double" : "#/components/schemas/double-property",
            "Integer" : "#/components/schemas/integer-property",
            "String" : "#/components/schemas/string-property",
            "TextList" : "#/components/schemas/text-list-property"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/boolean-property"
        }, {
          "$ref" : "#/components/schemas/string-property"
        }, {
          "$ref" : "#/components/schemas/integer-property"
        }, {
          "$ref" : "#/components/schemas/double-property"
        }, {
          "$ref" : "#/components/schemas/date-property"
        }, {
          "$ref" : "#/components/schemas/text-list-property"
        } ]
      },
      "string-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "string",
            "description" : "Property value"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          }
        },
        "description" : "Text property",
        "xml" : {
          "name" : "string-property"
        }
      },
      "text-list-property" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "String", "Integer", "Long", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "ScalarList", "List", "AssetRef", "Object", "Link" ]
          },
          "value" : {
            "type" : "array",
            "description" : "Property value",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Property value",
              "xml" : {
                "name" : "text"
              }
            }
          }
        },
        "description" : "Text list property",
        "xml" : {
          "name" : "text-list-property"
        }
      },
      "AssetRefDevice" : {
        "type" : "object",
        "properties" : {
          "frozenAsset" : {
            "$ref" : "#/components/schemas/device"
          }
        },
        "description" : "Specific devices"
      },
      "AssetRefProcess-type" : {
        "type" : "object",
        "properties" : {
          "frozenAsset" : {
            "$ref" : "#/components/schemas/process-type"
          }
        },
        "description" : "Process types"
      },
      "DctToolStats" : {
        "required" : [ "tool" ],
        "type" : "object",
        "properties" : {
          "tool" : {
            "type" : "string",
            "description" : "Tool name"
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "down-length" : {
            "type" : "number",
            "description" : "Total travel time when this tool is in the down position",
            "format" : "double"
          },
          "up-length" : {
            "type" : "number",
            "description" : "Total travel time when this tool is in the raised position",
            "format" : "double"
          },
          "beam" : {
            "type" : "string",
            "description" : "Beam name for multi-beam tables"
          }
        },
        "description" : "Tool stats",
        "xml" : {
          "name" : "dct-tool-stats"
        }
      },
      "GradeInfoEntity" : {
        "required" : [ "caliper", "name", "weight" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "caliper" : {
            "type" : "string",
            "description" : "Caliper of grade"
          },
          "weight" : {
            "type" : "string",
            "description" : "Grade weight"
          }
        },
        "description" : "Information about the grade",
        "xml" : {
          "name" : "grade-info"
        }
      },
      "InkEntity" : {
        "required" : [ "name", "separation", "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Ink name"
          },
          "separation" : {
            "type" : "boolean",
            "description" : "Whether ink is a separation color"
          },
          "type" : {
            "type" : "string",
            "description" : "Ink type",
            "enum" : [ "Bleed", "Crease", "Cut", "Foil", "Glue", "Normal", "Technical", "Varnish" ]
          }
        },
        "description" : "Ink name and type",
        "xml" : {
          "name" : "ink"
        }
      },
      "ItemStatsEntity" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "description" : "Number of component items placed in the layout",
            "format" : "int32"
          },
          "bounds" : {
            "$ref" : "#/components/schemas/RectEntity"
          }
        },
        "description" : "Statistics on all component items placed in a given layout",
        "xml" : {
          "name" : "item-stats"
        }
      },
      "LayoutPlacedEntity" : {
        "required" : [ "index", "placed" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "description" : "Index of layout",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Number of components placed in layout",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "description" : "Number of instances that a given item is placed on a layout",
        "xml" : {
          "name" : "layout-placed"
        }
      },
      "LibraryItemEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          }
        },
        "description" : "Library item",
        "xml" : {
          "name" : "library-item"
        }
      },
      "MediaDimensionsEntity" : {
        "required" : [ "height", "name", "width" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "width" : {
            "type" : "string",
            "description" : "Media width"
          },
          "height" : {
            "type" : "string",
            "description" : "Media height"
          }
        },
        "description" : "Media name and dimensions",
        "xml" : {
          "name" : "media-dimensions"
        }
      },
      "PhoenixLayoutEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Layout id"
          },
          "index" : {
            "type" : "integer",
            "description" : "Layout index",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Layout name"
          },
          "workstyle" : {
            "type" : "string",
            "description" : "Workstyle of layout",
            "enum" : [ "FlatWork", "Sheetwise", "Perfecting", "WorkAndTurn", "WorkAndTumble" ]
          },
          "trails" : {
            "type" : "array",
            "description" : "Facility job trails processing this layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/job-trail"
            }
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Required run length of layout",
            "format" : "int32"
          },
          "press-minutes" : {
            "type" : "number",
            "description" : "Estimated press time in minutes",
            "format" : "float"
          },
          "plates" : {
            "type" : "integer",
            "description" : "Number of plates needed (print inks)",
            "format" : "int32"
          },
          "plate-cost" : {
            "type" : "number",
            "description" : "Estimated plate cost in layout",
            "format" : "double"
          },
          "stock-cost" : {
            "type" : "number",
            "description" : "Estimated stock cost in layout",
            "format" : "double"
          },
          "press-cost" : {
            "type" : "number",
            "description" : "Estimated press run cost in layout",
            "format" : "double"
          },
          "die-cost" : {
            "type" : "number",
            "description" : "Estimated die creation cost in layout",
            "format" : "double"
          },
          "total-cost" : {
            "type" : "number",
            "description" : "Estimated total layout cost",
            "format" : "double"
          },
          "waste" : {
            "type" : "number",
            "description" : "Total sheet waste percentage",
            "format" : "double"
          },
          "sheet-usage" : {
            "type" : "number",
            "description" : "Sheet usage percentage per sheet",
            "format" : "double"
          },
          "underrun" : {
            "type" : "number",
            "description" : "Product underrun percentage in layout",
            "format" : "double"
          },
          "overrun" : {
            "type" : "number",
            "description" : "Product overrun percentage in layout",
            "format" : "double"
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total number of pieces placed in layout",
            "format" : "int32"
          },
          "product-count" : {
            "type" : "integer",
            "description" : "Total number of unique products in layout",
            "format" : "int32"
          },
          "random" : {
            "type" : "string",
            "description" : "Random unique layout identifier"
          },
          "templates" : {
            "type" : "array",
            "description" : "All templates being used in layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PlacedTemplateEntity"
            }
          },
          "tool-stats" : {
            "$ref" : "#/components/schemas/ToolStatsEntity"
          },
          "priority-stats" : {
            "type" : "array",
            "description" : "Product priority-based stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PriorityStatsEntity"
            }
          },
          "surfaces" : {
            "type" : "array",
            "description" : "Surfaces in layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SurfaceEntity"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "front" : {
            "$ref" : "#/components/schemas/SurfaceEntity"
          },
          "back" : {
            "$ref" : "#/components/schemas/SurfaceEntity"
          }
        },
        "description" : "Job layout",
        "xml" : {
          "name" : "layout"
        }
      },
      "PhoenixProductEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "description" : "Unique item index",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color as ARGB hex string"
          },
          "ordered" : {
            "type" : "integer",
            "description" : "Ordered amount",
            "format" : "int32"
          },
          "description" : {
            "type" : "string",
            "description" : "Product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Product notes"
          },
          "die-name" : {
            "type" : "string",
            "description" : "(Deprecated) Product die name"
          },
          "die-source" : {
            "type" : "string",
            "description" : "(Deprecated) Product die source"
          },
          "die-path" : {
            "type" : "string",
            "description" : "(Deprecated) Product die source full path"
          },
          "stock" : {
            "type" : "string",
            "description" : "(Deprecated) Product stock"
          },
          "grade" : {
            "type" : "string",
            "description" : "(Deprecated) Product grade"
          },
          "grain" : {
            "type" : "string",
            "description" : "(Deprecated) Grain direction of stock",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "width" : {
            "type" : "string",
            "description" : "(Deprecated) Width of product die"
          },
          "height" : {
            "type" : "string",
            "description" : "(Deprecated) Height of product die"
          },
          "spacing-type" : {
            "type" : "string",
            "description" : "(Deprecated) Spacing type of product",
            "enum" : [ "Margins", "Uniform", "Bleed", "Tool" ]
          },
          "group" : {
            "type" : "string",
            "description" : "Product group"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Product priority",
            "format" : "int32"
          },
          "rotation" : {
            "type" : "string",
            "description" : "Rotation type of product",
            "enum" : [ "Any", "Orthogonal", "None", "Custom" ]
          },
          "templates" : {
            "type" : "array",
            "description" : "List of templates this product can be used with",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "List of templates this product can be used with",
              "xml" : {
                "name" : "template"
              }
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total number of products placed across layouts in the job",
            "format" : "int32"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of products to be printed",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Product custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PropertyEntity"
            }
          },
          "layouts" : {
            "type" : "array",
            "description" : "Number of products placed in each layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LayoutPlacedEntity"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          }
        },
        "description" : "(Deprecated) Product in a job",
        "xml" : {
          "name" : "product"
        }
      },
      "PhoenixProject" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Job ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Job name"
          },
          "contact" : {
            "type" : "string",
            "description" : "Job contact person"
          },
          "phone" : {
            "type" : "string",
            "description" : "Job phone number"
          },
          "client" : {
            "type" : "string",
            "description" : "Job client name"
          },
          "notes" : {
            "type" : "string",
            "description" : "Job notes"
          },
          "units" : {
            "type" : "string",
            "description" : "Job units"
          },
          "template-path" : {
            "type" : "string",
            "description" : "Job template path if job created from template"
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Total required run length of all layouts in project",
            "format" : "int32"
          },
          "press-minutes" : {
            "type" : "number",
            "description" : "Total estimated press time across project",
            "format" : "float"
          },
          "plate-cost" : {
            "type" : "number",
            "description" : "Total estimated plate costs across project",
            "format" : "double"
          },
          "stock-cost" : {
            "type" : "number",
            "description" : "Total estimated stock costs across project",
            "format" : "double"
          },
          "press-cost" : {
            "type" : "number",
            "description" : "Total estimated press run costs across project",
            "format" : "double"
          },
          "die-cost" : {
            "type" : "number",
            "description" : "Total estimated die creation costs across project",
            "format" : "double"
          },
          "total-cost" : {
            "type" : "number",
            "description" : "Total project cost",
            "format" : "double"
          },
          "waste" : {
            "type" : "number",
            "description" : "Average sheet waste percentage across the project",
            "format" : "double"
          },
          "sheet-usage" : {
            "type" : "number",
            "description" : "Average sheet usage percentage across project",
            "format" : "double"
          },
          "underrun" : {
            "type" : "number",
            "description" : "Average product underrun percentage across project",
            "format" : "double"
          },
          "overrun" : {
            "type" : "number",
            "description" : "Average product overrun percentage across project",
            "format" : "double"
          },
          "layout-count" : {
            "type" : "integer",
            "description" : "Number of layouts in the job",
            "format" : "int32"
          },
          "facility" : {
            "$ref" : "#/components/schemas/facility"
          },
          "layouts" : {
            "type" : "array",
            "description" : "Layouts in the project",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PhoenixLayoutEntity"
            }
          },
          "products" : {
            "type" : "array",
            "description" : "Products in the project in v1 format",
            "deprecated" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PhoenixProductEntity"
            }
          },
          "products2" : {
            "type" : "array",
            "description" : "Products in the project in v2 format",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/product"
            }
          },
          "rolls" : {
            "type" : "array",
            "description" : "Rolls in the project",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/roll"
            }
          },
          "messages" : {
            "type" : "array",
            "description" : "List of all project-level messages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Project and associated properties, layouts and products",
        "xml" : {
          "name" : "job"
        }
      },
      "PlacedTemplateEntity" : {
        "required" : [ "items", "placed" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Template name"
          },
          "source" : {
            "type" : "string",
            "enum" : [ "Generated", "Library", "File", "Project" ]
          },
          "items" : {
            "type" : "integer",
            "description" : "Number of items or 'ups' in this template",
            "format" : "int32"
          },
          "placed" : {
            "type" : "integer",
            "description" : "Number of pieces placed into this template",
            "format" : "int32"
          }
        },
        "description" : "Information about a template placed in a layout",
        "xml" : {
          "name" : "placed-template"
        }
      },
      "PriorityStatsEntity" : {
        "required" : [ "priority", "sheet-usage" ],
        "type" : "object",
        "properties" : {
          "priority" : {
            "type" : "integer",
            "description" : "Priority level",
            "format" : "int32"
          },
          "sheet-usage" : {
            "type" : "number",
            "description" : "Sheet usage on layout for products at this priority level",
            "format" : "float"
          }
        },
        "description" : "Breakdown of layout stats for each product priority",
        "xml" : {
          "name" : "priority-stat"
        }
      },
      "PropertyEntity" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Property name"
          },
          "value" : {
            "type" : "string",
            "description" : "Property value"
          },
          "type" : {
            "type" : "string",
            "description" : "Property type, when omitted type 'Text' is assumed",
            "enum" : [ "Text", "Integer", "Number", "Boolean", "Date", "TextList" ]
          }
        },
        "description" : "Name/value property",
        "xml" : {
          "name" : "property"
        }
      },
      "RectEntity" : {
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "string",
            "description" : "Horizontal position"
          },
          "y" : {
            "type" : "string",
            "description" : "Vertical position"
          },
          "width" : {
            "type" : "string",
            "description" : "Rectangle width"
          },
          "height" : {
            "type" : "string",
            "description" : "Rectangle height"
          }
        },
        "description" : "Rectangle with position and dimensions",
        "xml" : {
          "name" : "rect"
        }
      },
      "ScalarValue" : {
        "type" : "object",
        "properties" : {
          "percentage" : {
            "type" : "boolean"
          },
          "unit" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "Feet", "Inches", "Meters", "Centimeters", "Millimeters", "Micrometers", "Thou", "Points" ]
          },
          "negated" : {
            "type" : "boolean"
          },
          "isNegated" : {
            "type" : "boolean",
            "writeOnly" : true
          },
          "precedence" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "Level1", "Level2" ]
          },
          "operator" : {
            "type" : "boolean"
          },
          "composite" : {
            "type" : "boolean"
          },
          "length" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          },
          "stringRepresentation" : {
            "type" : "string",
            "writeOnly" : true
          },
          "recursionDepth" : {
            "type" : "integer",
            "format" : "int32",
            "writeOnly" : true
          }
        },
        "description" : "Circumference"
      },
      "SurfaceEntity" : {
        "required" : [ "side" ],
        "type" : "object",
        "properties" : {
          "side" : {
            "type" : "string",
            "description" : "Side of this surface: Front or Back",
            "enum" : [ "Front", "Back" ]
          },
          "press" : {
            "$ref" : "#/components/schemas/LibraryItemEntity"
          },
          "stock" : {
            "$ref" : "#/components/schemas/LibraryItemEntity"
          },
          "grade" : {
            "$ref" : "#/components/schemas/GradeInfoEntity"
          },
          "sheet" : {
            "$ref" : "#/components/schemas/MediaDimensionsEntity"
          },
          "plate" : {
            "$ref" : "#/components/schemas/MediaDimensionsEntity"
          },
          "items" : {
            "$ref" : "#/components/schemas/ItemStatsEntity"
          },
          "inks" : {
            "type" : "array",
            "description" : "List of all inks on this surface",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/InkEntity"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          },
          "messages" : {
            "type" : "array",
            "description" : "List of all messages related to this surface",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Job layout surface",
        "xml" : {
          "name" : "surface"
        }
      },
      "ThumbnailEntity" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "string",
            "description" : "Base64 encoded binary image data"
          },
          "media-type" : {
            "type" : "string",
            "description" : "Image media type format",
            "xml" : {
              "attribute" : true
            }
          },
          "width" : {
            "type" : "integer",
            "description" : "Width of thumbnail image in pixels",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "height" : {
            "type" : "integer",
            "description" : "Height of thumbnail image in pixels",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "description" : "Binary thumbnail image data",
        "xml" : {
          "name" : "thumbnail"
        }
      },
      "ToolCategoryStatsEntity" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Tool category name"
          },
          "length" : {
            "type" : "string",
            "description" : "Linear line length total of all tool types in this category"
          }
        },
        "description" : "Breakdown of tool statistics per tool category",
        "xml" : {
          "name" : "tool-category-stats"
        }
      },
      "ToolStatsEntity" : {
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "description" : "Product category-based stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ToolCategoryStatsEntity"
            }
          }
        },
        "description" : "Breakdown of tool statistics on a given layout",
        "xml" : {
          "name" : "tool-stats"
        }
      },
      "acceleration" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "description" : "Value",
            "format" : "double"
          },
          "units" : {
            "type" : "string",
            "enum" : [ "MetersPerSecond2", "CentimetersPerSecond2", "MillimetersPerSecond2", "FeetPerSecond2", "InchesPerSecond2" ]
          }
        },
        "description" : "Acceleration",
        "xml" : {
          "name" : "acceleration"
        }
      },
      "asset-info" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Asset name"
          }
        },
        "description" : "Asset info",
        "xml" : {
          "name" : "asset-info"
        }
      },
      "blank" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "repeats" : {
            "type" : "integer",
            "description" : "Number of times this component repeats sequentially within its parent region",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Blank component item placed on the roll",
        "xml" : {
          "name" : "blank"
        }
      },
      "bleedline" : {
        "required" : [ "margin", "margins", "name", "rect", "shape", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "source" : {
            "$ref" : "#/components/schemas/dieline-source"
          },
          "shape" : {
            "$ref" : "#/components/schemas/path"
          },
          "thickness" : {
            "type" : "number",
            "description" : "Dieline thickness",
            "format" : "double"
          },
          "rect" : {
            "$ref" : "#/components/schemas/rect"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Margins", "Contour", "CAD", "None" ]
          },
          "bleed-source" : {
            "type" : "string",
            "description" : "Bleedline source"
          },
          "margin" : {
            "type" : "string",
            "description" : "Bleedline margin"
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          },
          "shape-modified" : {
            "type" : "boolean",
            "description" : "Whether or not bleedline shape has been custom modified"
          },
          "margins-adjusted" : {
            "type" : "boolean",
            "description" : "Whether or not margins have been custom adjusted"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Bleedline",
        "xml" : {
          "name" : "bleedline"
        }
      },
      "bound-part" : {
        "required" : [ "binding-edge", "binding-method", "creep", "grain", "jog-edge", "name", "page-size", "pages", "process-settings", "reading-order", "rotation", "sections", "self-cover", "trim", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "page-size" : {
            "$ref" : "#/components/schemas/size"
          },
          "sections" : {
            "type" : "array",
            "description" : "Part sections",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/bound-section"
            }
          },
          "binding-method" : {
            "type" : "string",
            "enum" : [ "PerfectBound", "SaddleStitch", "None" ]
          },
          "pages-per-section" : {
            "type" : "integer",
            "description" : "Pages per section in this part",
            "format" : "int32"
          },
          "binding-edge" : {
            "type" : "string",
            "description" : "Binding edge of this part",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "jog-edge" : {
            "type" : "string",
            "description" : "Jog edge of this part",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "reading-order" : {
            "type" : "string",
            "description" : "Reading order of this part",
            "enum" : [ "Normal", "Calendar" ]
          },
          "self-cover" : {
            "type" : "boolean",
            "description" : "Whether this part has a self cover or not"
          },
          "trim" : {
            "$ref" : "#/components/schemas/trim"
          },
          "creep" : {
            "$ref" : "#/components/schemas/creep"
          },
          "allowed-folds" : {
            "type" : "array",
            "description" : "Allowed folds in this part",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/folding-pattern"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Bound part for creating books",
        "xml" : {
          "name" : "bound-part"
        }
      },
      "bound-section" : {
        "required" : [ "binding-method" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "binding-method" : {
            "type" : "string",
            "enum" : [ "PerfectBound", "SaddleStitch", "None" ]
          },
          "signatures" : {
            "type" : "array",
            "description" : "Signatures in this section",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/bound-signature"
            }
          }
        },
        "description" : "Bound section",
        "xml" : {
          "name" : "bound-section"
        }
      },
      "bound-signature" : {
        "required" : [ "die-design", "folding-pattern", "name", "spacing", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "folding-pattern" : {
            "$ref" : "#/components/schemas/asset-info"
          },
          "layouts" : {
            "required" : [ "index", "placed" ],
            "type" : "object",
            "properties" : {
              "index" : {
                "type" : "integer",
                "description" : "Index of layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              },
              "placed" : {
                "type" : "integer",
                "description" : "Number of components placed in layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              }
            },
            "description" : "Number of instances that a given item is placed on a layout",
            "xml" : {
              "name" : "layout-placed",
              "wrapped" : true
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Bound signature component",
        "xml" : {
          "name" : "bound-signature"
        }
      },
      "connector" : {
        "required" : [ "thing" ],
        "type" : "object",
        "properties" : {
          "thing" : {
            "$ref" : "#/components/schemas/reference"
          }
        },
        "description" : "Connector to link things together",
        "xml" : {
          "name" : "connector"
        }
      },
      "corrugator" : {
        "required" : [ "capabilities", "chop-knives", "costing", "feed-type", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "slit-knives", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/corrugator-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/corrugator-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/corrugator-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/corrugator-operation"
          },
          "chop-knives" : {
            "type" : "integer",
            "description" : "Number of chop knives",
            "format" : "int32"
          },
          "slit-knives" : {
            "type" : "integer",
            "description" : "Number of slit knives",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Corrugator",
        "xml" : {
          "name" : "corrugator"
        }
      },
      "corrugator-capabilities" : {
        "required" : [ "bottom-liner", "caliper-range", "fluting", "height-range", "length-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "length-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "fluting" : {
            "$ref" : "#/components/schemas/stock-capabilities"
          },
          "bottom-liner" : {
            "$ref" : "#/components/schemas/stock-capabilities"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Corrugator capabilities",
        "xml" : {
          "name" : "corrugator-capabilities"
        }
      },
      "corrugator-costing" : {
        "required" : [ "currency", "knife-changeover-time", "rate", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup"
          },
          "knife-changeover-time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Corrugator costing",
        "xml" : {
          "name" : "corrugator-costing"
        }
      },
      "corrugator-media-rule" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "marks" : {
            "type" : "array",
            "description" : "List of marks to apply with this media rule",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/device-mark"
            }
          },
          "speed-reduction" : {
            "type" : "string",
            "description" : "Speed reduction specified as a number where 1.0 represents no change"
          },
          "content" : {
            "$ref" : "#/components/schemas/margins"
          },
          "image" : {
            "$ref" : "#/components/schemas/margins"
          },
          "regions" : {
            "type" : "array",
            "description" : "Regions",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/region"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Corrugator media rule",
        "xml" : {
          "name" : "corrugator-media-rule"
        }
      },
      "corrugator-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/corrugator-media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/corrugator-media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Corrugator media rules",
        "xml" : {
          "name" : "corrugator-media-rules"
        }
      },
      "corrugator-operation" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/corrugator-operation-mode"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/corrugator-operation-mode"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Corrugator operation",
        "xml" : {
          "name" : "corrugator-operation"
        }
      },
      "corrugator-operation-mode" : {
        "required" : [ "speed", "type" ],
        "type" : "object",
        "properties" : {
          "speed" : {
            "$ref" : "#/components/schemas/speed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Corrugator operation mode",
        "xml" : {
          "name" : "corrugator-operation-mode"
        }
      },
      "corrugator-result" : {
        "required" : [ "knife-changeovers", "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "knife-changeovers" : {
            "type" : "integer",
            "description" : "Number of knife changeovers corrugator needs to perform",
            "format" : "int32"
          },
          "knife-changeover-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Corrugator processing results",
        "xml" : {
          "name" : "corrugator-result"
        }
      },
      "cost-info" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "description" : "Cost value",
            "format" : "double"
          },
          "currency" : {
            "type" : "string",
            "description" : "Currency"
          },
          "display" : {
            "type" : "string",
            "description" : "Cost display text including currency"
          }
        },
        "description" : "Cost info",
        "xml" : {
          "name" : "cost-info"
        }
      },
      "creep" : {
        "required" : [ "calculation", "method", "transition", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "None", "Inward", "Outward", "Both", "Custom" ]
          },
          "method" : {
            "type" : "string",
            "enum" : [ "Offset", "Scale" ]
          },
          "transition" : {
            "type" : "number",
            "description" : "Creep transition",
            "format" : "double"
          },
          "calculation" : {
            "type" : "string",
            "enum" : [ "FromStock", "PerPage", "Total" ]
          },
          "amount" : {
            "type" : "string",
            "description" : "Creep amount"
          }
        },
        "description" : "Creep settings",
        "xml" : {
          "name" : "creep"
        }
      },
      "custom-tiling" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "tile" : {
            "type" : "array",
            "description" : "Custom tiles",
            "xml" : {
              "name" : "tiles",
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/tile"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Standard", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Custom tiling where each tile is explicitly defined",
        "xml" : {
          "name" : "custom-tiling"
        }
      },
      "cylinder" : {
        "required" : [ "circumference", "type" ],
        "type" : "object",
        "properties" : {
          "circumference" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Gear", "Sleeve" ]
          }
        },
        "description" : "Flexo press cylinder",
        "xml" : {
          "name" : "cylinder"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "GearCylinder" : "#/components/schemas/gear-cylinder",
            "SleeveCylinder" : "#/components/schemas/sleeve-cylinder"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/gear-cylinder"
        }, {
          "$ref" : "#/components/schemas/sleeve-cylinder"
        } ]
      },
      "dct-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Digital cutting table capabilities",
        "xml" : {
          "name" : "dct-capabilities"
        }
      },
      "dct-costing" : {
        "required" : [ "currency", "rate", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Digital cutting table costing",
        "xml" : {
          "name" : "dct-costing"
        }
      },
      "dct-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Digital cutting table media rules",
        "xml" : {
          "name" : "dct-media-rules"
        }
      },
      "dct-operation" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/dct-rule-value"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/dct-rule-value"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Digital cutting table operation",
        "xml" : {
          "name" : "dct-operation"
        }
      },
      "dct-result" : {
        "required" : [ "run-length", "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Run length",
            "format" : "int32"
          },
          "tool-stats" : {
            "type" : "array",
            "description" : "Tool stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/DctToolStats"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Digital cutting table processing results",
        "xml" : {
          "name" : "dct-result"
        }
      },
      "dct-rule-value" : {
        "required" : [ "auto-lift-angle", "auto-lift-distance", "clearing-distance", "motion-lifted", "motion-lifting", "motion-lowered", "motion-lowering", "type" ],
        "type" : "object",
        "properties" : {
          "motion-lowered" : {
            "$ref" : "#/components/schemas/motion-specs"
          },
          "motion-lifted" : {
            "$ref" : "#/components/schemas/motion-specs"
          },
          "motion-lowering" : {
            "$ref" : "#/components/schemas/motion-specs"
          },
          "motion-lifting" : {
            "$ref" : "#/components/schemas/motion-specs"
          },
          "clearing-distance" : {
            "type" : "string",
            "description" : "Clearing Distance"
          },
          "auto-lift-angle" : {
            "type" : "number",
            "description" : "Auto Lift Angle",
            "format" : "double"
          },
          "auto-lift-distance" : {
            "type" : "string",
            "description" : "Auto Lift Distance"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Digital cutting table rule value",
        "xml" : {
          "name" : "dct-rule-value"
        }
      },
      "device" : {
        "required" : [ "capabilities", "costing", "feed-type", "manufacturer", "media-rules", "name", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/device-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/device-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Device",
        "xml" : {
          "name" : "device"
        }
      },
      "device-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Device capabilities",
        "xml" : {
          "name" : "device-capabilities"
        }
      },
      "device-costing" : {
        "required" : [ "currency", "rate", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Device costing",
        "xml" : {
          "name" : "device-costing"
        }
      },
      "device-mark" : {
        "required" : [ "mark", "side" ],
        "type" : "object",
        "properties" : {
          "mark" : {
            "$ref" : "#/components/schemas/reference"
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          }
        },
        "description" : "Device mark",
        "xml" : {
          "name" : "device-mark"
        }
      },
      "die-design" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Rectangle", "Irregular", "Open" ]
          },
          "source" : {
            "type" : "string",
            "description" : "Die design source"
          },
          "file-path" : {
            "type" : "string",
            "description" : "Die design file-path"
          },
          "shape-source" : {
            "type" : "string",
            "description" : "Die design shape source"
          },
          "shape" : {
            "$ref" : "#/components/schemas/path"
          },
          "bleedline" : {
            "$ref" : "#/components/schemas/bleedline"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/dieline"
          },
          "dielines" : {
            "type" : "array",
            "description" : "Die design dielines",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/dieline"
            }
          },
          "grain" : {
            "type" : "string",
            "description" : "Grain Direction",
            "enum" : [ "GrainHorizontal", "GrainVertical", "NotSpecified" ]
          },
          "shape-id" : {
            "type" : "string",
            "description" : "Die design shape id"
          },
          "rect" : {
            "$ref" : "#/components/schemas/rect"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Die design",
        "xml" : {
          "name" : "die-design"
        }
      },
      "die-making" : {
        "required" : [ "capabilities", "costing", "die-type", "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/dm-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/dm-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "die-type" : {
            "type" : "string",
            "enum" : [ "SteelRuleDie", "SolidDie", "FlexibleDie" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Die Making",
        "xml" : {
          "name" : "die-making"
        }
      },
      "dieline" : {
        "required" : [ "name", "shape" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "source" : {
            "$ref" : "#/components/schemas/dieline-source"
          },
          "shape" : {
            "$ref" : "#/components/schemas/path"
          },
          "thickness" : {
            "type" : "number",
            "description" : "Dieline thickness",
            "format" : "double"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Dieline",
        "xml" : {
          "name" : "dieline"
        }
      },
      "dieline-source" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Unknown", "Separation", "PDFLayer", "CAD", "MediaBox", "BleedBox", "CropBox", "TrimBox", "ArtBox", "PathBounds", "ImageBounds", "ImageTracing", "CustomSize", "Offcut", "Application", "Tile", "Mark", "Strip", "Nick" ]
          },
          "name" : {
            "type" : "string",
            "description" : "Dieline source name"
          }
        },
        "description" : "Dieline source",
        "xml" : {
          "name" : "dieline-source"
        }
      },
      "digital-cutting-table" : {
        "required" : [ "capabilities", "costing", "estimating-engine", "feed-type", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/dct-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/dct-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/dct-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/dct-operation"
          },
          "estimating-engine" : {
            "type" : "string",
            "enum" : [ "TiliaLabs", "ZundCutCenter" ]
          },
          "zcc-connection-settings" : {
            "$ref" : "#/components/schemas/zcc-connection-settings"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Digital cutting table",
        "xml" : {
          "name" : "digital-cutting-table"
        }
      },
      "dm-capabilities" : {
        "required" : [ "height-range", "limit", "limit-logic", "type", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "process-types" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Process types",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AssetRefProcess-type"
            }
          },
          "specific-devices" : {
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Specific devices",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AssetRefDevice"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Die Making Capabilities",
        "xml" : {
          "name" : "dm-capabilities"
        }
      },
      "dm-costing" : {
        "required" : [ "cost", "cost-per-1up", "cost-per-area", "cost-per-area-units", "steel-rules", "type" ],
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number",
            "description" : "Cost",
            "format" : "double"
          },
          "cost-per-area" : {
            "type" : "number",
            "description" : "Cost per area",
            "format" : "double"
          },
          "cost-per-area-units" : {
            "type" : "string",
            "enum" : [ "Sheets", "Feet", "Inches", "Meters", "Centimeters", "Millimeters", "MSI", "MSF", "SquareFeet", "SquareInches", "SquareMeters", "SquareCentimeters", "SquareMillimeters" ]
          },
          "cost-per-1up" : {
            "type" : "number",
            "description" : "Cost per 1up",
            "format" : "double"
          },
          "steel-rules" : {
            "$ref" : "#/components/schemas/steel-rules"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Die Making Costing",
        "xml" : {
          "name" : "dm-costing"
        }
      },
      "dm-result" : {
        "required" : [ "die-type", "number-ups", "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "die-type" : {
            "type" : "string",
            "enum" : [ "SteelRuleDie", "SolidDie", "FlexibleDie" ]
          },
          "number-ups" : {
            "type" : "integer",
            "description" : "Number of positions or \"ups\" in die",
            "format" : "int32"
          },
          "rule-stats" : {
            "type" : "array",
            "description" : "Rule stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/dm-rule-stats"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "cost-per-ups" : {
            "type" : "string",
            "description" : "Per-die position cost"
          },
          "cost-per-area" : {
            "type" : "string",
            "description" : "Per-area cost"
          }
        },
        "description" : "Die making processing results",
        "xml" : {
          "name" : "dm-result"
        }
      },
      "dm-rule-stats" : {
        "required" : [ "cost", "length", "tool" ],
        "type" : "object",
        "properties" : {
          "tool" : {
            "type" : "string",
            "description" : "Tool name"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "length" : {
            "type" : "number",
            "description" : "Total linear tool length",
            "format" : "double"
          }
        },
        "description" : "Die making rule stats",
        "xml" : {
          "name" : "dm-rule-stats"
        }
      },
      "facility" : {
        "required" : [ "stats" ],
        "type" : "object",
        "properties" : {
          "trails" : {
            "type" : "array",
            "description" : "Job trails which contain one or more layouts and the list of things that are processing them",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/job-trail"
            }
          },
          "things" : {
            "type" : "array",
            "description" : "List of all things being actively used in one or more job trails in this facility",
            "readOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/facility-thingObjectObject"
            }
          },
          "stats" : {
            "$ref" : "#/components/schemas/facility-stats"
          }
        },
        "description" : "Project facility",
        "xml" : {
          "name" : "facility"
        }
      },
      "facility-stats" : {
        "required" : [ "cost", "time" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "process-stats" : {
            "type" : "array",
            "description" : "Per-process stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-stats"
            }
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts needed including ordered run lengths, setup layouts, and waste layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Total number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Total number of waste layouts during processing",
            "format" : "int32"
          }
        },
        "description" : "Facility-level aggregate stats",
        "readOnly" : true,
        "xml" : {
          "name" : "facility-stats"
        }
      },
      "facility-thingObjectObject" : {
        "type" : "object",
        "properties" : {
          "thing" : {
            "$ref" : "#/components/schemas/thing"
          },
          "jobs" : {
            "type" : "array",
            "description" : "List of all jobs currently queued for processing by this thing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/thing-job"
            }
          }
        },
        "description" : "Thing being utilized in the facility and its list of current jobs",
        "readOnly" : true,
        "xml" : {
          "name" : "facility-thing"
        }
      },
      "fdc-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Flatbed die cutter capabilities",
        "xml" : {
          "name" : "fdc-capabilities"
        }
      },
      "fdc-costing" : {
        "required" : [ "currency", "rate", "setup", "speed", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/fdc-setup"
          },
          "run-length-range" : {
            "$ref" : "#/components/schemas/integer-range"
          },
          "speed" : {
            "$ref" : "#/components/schemas/speed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Flatbed die cutter costing",
        "xml" : {
          "name" : "fdc-costing"
        }
      },
      "fdc-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Flatbed die cutter media rules",
        "xml" : {
          "name" : "fdc-media-rules"
        }
      },
      "fdc-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "cutting-time" : {
            "type" : "number",
            "description" : "Cutting time",
            "format" : "double"
          },
          "die-name" : {
            "type" : "string",
            "description" : "Die name"
          },
          "die-id" : {
            "type" : "string",
            "description" : "Die ID"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Flatbed die cutter processing results",
        "xml" : {
          "name" : "fdc-result"
        }
      },
      "fdc-setup" : {
        "required" : [ "layouts", "time", "type" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "layouts" : {
            "type" : "integer",
            "description" : "Setup Layouts",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Setup", "SetupLayouts", "GcSetup", "FdcSetup", "RdcSetup" ]
          }
        },
        "description" : "Flatbed die cutter setup",
        "xml" : {
          "name" : "fdc-setup"
        }
      },
      "fixed-number-rule" : {
        "required" : [ "number", "type" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "description" : "Fixed number of tiles to create in the given dimension",
            "format" : "int32"
          },
          "uniform-final-size" : {
            "type" : "boolean",
            "description" : "If enabled, tile sizes will be uniform after applying overlap or gap methods to the tile, otherwise tile sizes are uniform before overlap or gap methods are applied"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "FixedNumber", "FixedSize", "VariableSizes" ]
          }
        },
        "description" : "Fixed number of tiles rule",
        "xml" : {
          "name" : "fixed-number-rule"
        }
      },
      "fixed-size-rule" : {
        "required" : [ "size", "type" ],
        "type" : "object",
        "properties" : {
          "size" : {
            "type" : "number",
            "description" : "Fixed size used to create tiles in the given dimension",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "FixedNumber", "FixedSize", "VariableSizes" ]
          }
        },
        "description" : "Fixed size tiling rule",
        "xml" : {
          "name" : "fixed-size-rule"
        }
      },
      "flat" : {
        "required" : [ "die-design", "name", "spacing", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "bundle-size" : {
            "type" : "integer",
            "description" : "Bundle size",
            "format" : "int32"
          },
          "max-bundle-splits" : {
            "type" : "integer",
            "description" : "Max Bundle Splits",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "layouts" : {
            "required" : [ "index", "placed" ],
            "type" : "object",
            "properties" : {
              "index" : {
                "type" : "integer",
                "description" : "Index of layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              },
              "placed" : {
                "type" : "integer",
                "description" : "Number of components placed in layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              }
            },
            "description" : "Number of instances that a given item is placed on a layout",
            "xml" : {
              "name" : "layout-placed",
              "wrapped" : true
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Flat component",
        "xml" : {
          "name" : "flat"
        }
      },
      "flat-part" : {
        "required" : [ "flat", "grain", "name", "pages", "process-settings", "rotation", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "flat" : {
            "$ref" : "#/components/schemas/flat"
          },
          "templates" : {
            "type" : "array",
            "description" : "Die templates this flatmust use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Die templates this flatmust use",
              "xml" : {
                "name" : "template"
              }
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Flat part for creating flats",
        "xml" : {
          "name" : "flat-part"
        }
      },
      "flatbed-die-cutter" : {
        "required" : [ "capabilities", "costing", "feed-type", "gripper", "manufacturer", "media-rules", "name", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/fdc-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/fdc-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/fdc-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Flatbed die cutter",
        "xml" : {
          "name" : "flatbed-die-cutter"
        }
      },
      "flatbed-wide-format-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/fwfp-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "sheetTurn" : {
            "type" : "string",
            "enum" : [ "Turn", "Tumble" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Flatbed Wide Format Press",
        "xml" : {
          "name" : "flatbed-wide-format-press"
        }
      },
      "flexo-press-placement" : {
        "required" : [ "rule", "type" ],
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/rule"
          },
          "default-sheet" : {
            "$ref" : "#/components/schemas/sheet-ref"
          },
          "default-plate" : {
            "$ref" : "#/components/schemas/reference"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Placement", "PressPlacement", "OffsetPressPlacement", "FlexoPressPlacement" ]
          }
        },
        "description" : "Flexo Press Placement",
        "xml" : {
          "name" : "flexo-press-placement"
        }
      },
      "fold" : {
        "required" : [ "cells", "up", "vertical" ],
        "type" : "object",
        "properties" : {
          "up" : {
            "type" : "boolean",
            "description" : "Whether this fold is up or down"
          },
          "vertical" : {
            "type" : "boolean",
            "description" : "Whether this fold is vertical or horizontal"
          },
          "cells" : {
            "type" : "integer",
            "description" : "Cells in this fold",
            "format" : "int32"
          }
        },
        "description" : "Signature fold",
        "xml" : {
          "name" : "fold"
        }
      },
      "folded-part" : {
        "required" : [ "grain", "name", "page-size", "pages", "process-settings", "rotation", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "page-size" : {
            "$ref" : "#/components/schemas/size"
          },
          "signature" : {
            "$ref" : "#/components/schemas/folded-signature"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Folded parts for creating folded work such as brochures",
        "xml" : {
          "name" : "folded-part"
        }
      },
      "folded-signature" : {
        "required" : [ "die-design", "folding-pattern", "name", "spacing", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "folding-pattern" : {
            "$ref" : "#/components/schemas/asset-info"
          },
          "layouts" : {
            "required" : [ "index", "placed" ],
            "type" : "object",
            "properties" : {
              "index" : {
                "type" : "integer",
                "description" : "Index of layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              },
              "placed" : {
                "type" : "integer",
                "description" : "Number of components placed in layout",
                "format" : "int32",
                "xml" : {
                  "attribute" : true
                }
              }
            },
            "description" : "Number of instances that a given item is placed on a layout",
            "xml" : {
              "name" : "layout-placed",
              "wrapped" : true
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Folded signature component",
        "xml" : {
          "name" : "folded-signature"
        }
      },
      "folding-pattern" : {
        "required" : [ "columns", "folds", "name", "rows" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "columns" : {
            "type" : "integer",
            "description" : "Number of columns",
            "format" : "int32"
          },
          "rows" : {
            "type" : "integer",
            "description" : "Number of rows",
            "format" : "int32"
          },
          "folds" : {
            "type" : "array",
            "description" : "Folds in this signature",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/fold"
            }
          },
          "page-mappings" : {
            "$ref" : "#/components/schemas/page-mappings"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Folding pattern",
        "xml" : {
          "name" : "folding-pattern"
        }
      },
      "frame" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "repeats" : {
            "type" : "integer",
            "description" : "Number of times this frame repeats consecutively on the roll",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Single frame in the roll",
        "xml" : {
          "name" : "frame"
        }
      },
      "fwfp-costing" : {
        "required" : [ "currency", "rate", "running-waste", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Flatbed Wide Format Press Costing",
        "xml" : {
          "name" : "fwfp-costing"
        }
      },
      "fwfp-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Flatbed Wide Format Press Result",
        "xml" : {
          "name" : "fwfp-result"
        }
      },
      "gap-tile-edge" : {
        "required" : [ "gap", "type" ],
        "type" : "object",
        "properties" : {
          "gap" : {
            "type" : "number",
            "description" : "Gap distance to subtract from tile edge",
            "format" : "double"
          },
          "extension" : {
            "type" : "number",
            "description" : "Amount of extra artwork content beyond the tile gap boundary to extend",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "GapEdge", "OverlapEdge" ]
          }
        },
        "description" : "Gap-based tile edge defines gap amount and optional extension distance beyond gap for a given tile edge",
        "xml" : {
          "name" : "gap-tile-edge"
        }
      },
      "gap-tiling" : {
        "required" : [ "gap", "type" ],
        "type" : "object",
        "properties" : {
          "gap" : {
            "type" : "number",
            "description" : "Gap distance between tiles in the given direction",
            "format" : "double"
          },
          "extension-rule" : {
            "type" : "string",
            "enum" : [ "OppositeStart", "Both" ]
          },
          "extension" : {
            "type" : "number",
            "description" : "Amount of extra artwork content beyond the tile gap boundary to extend into the gap in the given direction",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "Gap", "Overlap" ]
          }
        },
        "description" : "Gap tiling method creates gaps between tiles",
        "xml" : {
          "name" : "gap-tiling"
        }
      },
      "gc-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Guillotine cutter capabilities",
        "xml" : {
          "name" : "gc-capabilities"
        }
      },
      "gc-costing" : {
        "required" : [ "currency", "rate", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/gc-setup"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Guillotine cutter costing",
        "xml" : {
          "name" : "gc-costing"
        }
      },
      "gc-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Guillotine cutter media rules",
        "xml" : {
          "name" : "gc-media-rules"
        }
      },
      "gc-result" : {
        "required" : [ "cut-count", "sheet-turns", "stacks", "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "sheet-turns" : {
            "type" : "integer",
            "description" : "Number of sheet turns",
            "format" : "int32"
          },
          "cut-count" : {
            "type" : "integer",
            "description" : "Total number of cuts needed for each stack",
            "format" : "int32"
          },
          "stacks" : {
            "type" : "integer",
            "description" : "Number of stacks that need to be cut",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Guillotine cutter processing results",
        "xml" : {
          "name" : "gc-result"
        }
      },
      "gc-setup" : {
        "required" : [ "time", "type" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Setup", "SetupLayouts", "GcSetup", "FdcSetup", "RdcSetup" ]
          }
        },
        "description" : "Guillotine cutter setup",
        "xml" : {
          "name" : "gc-setup"
        }
      },
      "gear-cylinder" : {
        "required" : [ "circumference", "type" ],
        "type" : "object",
        "properties" : {
          "circumference" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Gear", "Sleeve" ]
          }
        },
        "description" : "Gear Cylinder",
        "xml" : {
          "name" : "gear-cylinder"
        }
      },
      "guillotine-cutter" : {
        "required" : [ "capabilities", "costing", "feed-type", "manufacturer", "media-rules", "name", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/gc-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/gc-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/gc-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Guillotine cutter",
        "xml" : {
          "name" : "guillotine-cutter"
        }
      },
      "ink-cost" : {
        "required" : [ "type", "units" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Coverage", "Clicks" ]
          },
          "units" : {
            "type" : "string",
            "enum" : [ "Sheets", "Feet", "Inches", "Meters", "Centimeters", "Millimeters", "MSI", "MSF", "SquareFeet", "SquareInches", "SquareMeters", "SquareCentimeters", "SquareMillimeters" ]
          },
          "coverage" : {
            "type" : "string",
            "description" : "Coverage"
          },
          "cyan" : {
            "type" : "number",
            "description" : "Cyan",
            "format" : "double"
          },
          "magenta" : {
            "type" : "number",
            "description" : "Magenta",
            "format" : "double"
          },
          "yellow" : {
            "type" : "number",
            "description" : "Yellow",
            "format" : "double"
          },
          "black" : {
            "type" : "number",
            "description" : "Black",
            "format" : "double"
          },
          "spots" : {
            "type" : "number",
            "description" : "Spots",
            "format" : "double"
          },
          "coatings" : {
            "type" : "number",
            "description" : "Coatings",
            "format" : "double"
          },
          "foils" : {
            "type" : "number",
            "description" : "Foils",
            "format" : "double"
          }
        },
        "description" : "Ink Cost",
        "xml" : {
          "name" : "ink-cost"
        }
      },
      "integer-range" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "integer",
            "description" : "Start",
            "format" : "int32"
          },
          "end" : {
            "type" : "integer",
            "description" : "End",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "IntegerRange", "DoubleRange", "ScalarRange", "StockWeightRange", "DateRange" ]
          }
        },
        "description" : "Integer Range",
        "xml" : {
          "name" : "integer-range"
        }
      },
      "job-info" : {
        "type" : "object",
        "properties" : {
          "thing" : {
            "$ref" : "#/components/schemas/asset-info"
          },
          "job" : {
            "type" : "string",
            "description" : "Job ID"
          }
        },
        "description" : "Job",
        "xml" : {
          "name" : "job-info"
        }
      },
      "job-trail" : {
        "required" : [ "stats" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "layouts" : {
            "type" : "array",
            "description" : "Trail layouts",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/layout-range"
            }
          },
          "stats" : {
            "$ref" : "#/components/schemas/trail-stats"
          },
          "jobs" : {
            "type" : "array",
            "description" : "Ordered list of jobs being performed in this trail",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/job-info"
            }
          }
        },
        "description" : "Job trail",
        "xml" : {
          "name" : "job-trail"
        }
      },
      "lane" : {
        "required" : [ "height", "type", "width", "y" ],
        "type" : "object",
        "properties" : {
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "gutter" : {
            "type" : "number",
            "description" : "Gutter distance between child regions of this region",
            "format" : "double"
          },
          "template" : {
            "type" : "string",
            "description" : "Template used to define layout of this lane, e.g. repeat template used in die cutting"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Lane within a roll",
        "xml" : {
          "name" : "lane"
        }
      },
      "layout-range" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "integer",
            "description" : "Start layout index",
            "format" : "int32"
          },
          "end" : {
            "type" : "integer",
            "description" : "End layout index",
            "format" : "int32"
          }
        },
        "description" : "Layout index range",
        "xml" : {
          "name" : "layout-range"
        }
      },
      "layouts" : {
        "required" : [ "index", "placed" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "description" : "Index of layout",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "placed" : {
            "type" : "integer",
            "description" : "Number of components placed in layout",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "description" : "Number of instances that a given item is placed on a layout",
        "xml" : {
          "name" : "layout-placed"
        }
      },
      "lead-in" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Lead-in area on the roll",
        "xml" : {
          "name" : "lead-in"
        }
      },
      "lead-out" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Lead-out area on the roll",
        "xml" : {
          "name" : "lead-out"
        }
      },
      "margins" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Inside", "Outside" ]
          },
          "left" : {
            "type" : "string",
            "description" : "Left"
          },
          "top" : {
            "type" : "string",
            "description" : "Top"
          },
          "right" : {
            "type" : "string",
            "description" : "Right"
          },
          "bottom" : {
            "type" : "string",
            "description" : "Bottom"
          },
          "linked" : {
            "type" : "boolean",
            "description" : "Linked"
          }
        },
        "description" : "Margins",
        "xml" : {
          "name" : "margins"
        }
      },
      "material" : {
        "type" : "object",
        "properties" : {
          "stock" : {
            "$ref" : "#/components/schemas/asset-info"
          },
          "grade" : {
            "$ref" : "#/components/schemas/asset-info"
          }
        },
        "description" : "Material object",
        "xml" : {
          "name" : "material"
        }
      },
      "material-ref" : {
        "required" : [ "grade-id", "stock" ],
        "type" : "object",
        "properties" : {
          "stock" : {
            "$ref" : "#/components/schemas/reference"
          },
          "grade-id" : {
            "type" : "string",
            "description" : "Grade ID"
          }
        },
        "description" : "Material Reference",
        "xml" : {
          "name" : "material-ref"
        }
      },
      "media-rule" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "marks" : {
            "type" : "array",
            "description" : "List of marks to apply with this media rule",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/device-mark"
            }
          },
          "speed-reduction" : {
            "type" : "string",
            "description" : "Speed reduction specified as a number where 1.0 represents no change"
          },
          "content" : {
            "$ref" : "#/components/schemas/margins"
          },
          "image" : {
            "$ref" : "#/components/schemas/margins"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Media rule",
        "xml" : {
          "name" : "media-rule"
        }
      },
      "media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Media rules",
        "xml" : {
          "name" : "media-rules"
        }
      },
      "message" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "type" : {
            "type" : "string",
            "description" : "Status type",
            "readOnly" : true,
            "enum" : [ "Progress", "Success", "Info", "Warning", "Error" ]
          },
          "text" : {
            "type" : "string",
            "description" : "Message text",
            "readOnly" : true
          }
        },
        "description" : "Message",
        "xml" : {
          "name" : "message"
        }
      },
      "motion-specs" : {
        "required" : [ "acceleration", "velocity" ],
        "type" : "object",
        "properties" : {
          "velocity" : {
            "$ref" : "#/components/schemas/velocity"
          },
          "acceleration" : {
            "$ref" : "#/components/schemas/acceleration"
          }
        },
        "description" : "Motion specs",
        "xml" : {
          "name" : "motion-specs"
        }
      },
      "offcut" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "margin" : {
            "type" : "string",
            "description" : "Single margin setting"
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "None", "Contour", "Margins" ]
          }
        },
        "description" : "Offcut settings",
        "xml" : {
          "name" : "offcut"
        }
      },
      "offset-press-placement" : {
        "required" : [ "rule", "sheet-position", "type" ],
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/rule"
          },
          "default-sheet" : {
            "$ref" : "#/components/schemas/sheet-ref"
          },
          "default-plate" : {
            "$ref" : "#/components/schemas/reference"
          },
          "sheet-position" : {
            "$ref" : "#/components/schemas/sheet-position"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Placement", "PressPlacement", "OffsetPressPlacement", "FlexoPressPlacement" ]
          }
        },
        "description" : "Offset Press Placement",
        "xml" : {
          "name" : "offset-press-placement"
        }
      },
      "operation-mode" : {
        "required" : [ "ink-cost", "speed", "type" ],
        "type" : "object",
        "properties" : {
          "speed" : {
            "$ref" : "#/components/schemas/speed"
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/ink-cost"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Operation Mode",
        "xml" : {
          "name" : "operation-mode"
        }
      },
      "operation-modes" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/operation-mode"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/operation-mode"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Operation Modes",
        "xml" : {
          "name" : "operation-modes"
        }
      },
      "overlap-tile-edge" : {
        "required" : [ "overlap", "type" ],
        "type" : "object",
        "properties" : {
          "overlap" : {
            "type" : "number",
            "description" : "Distance beyond tile edge to extend the tile to create overlap in the given direction",
            "format" : "double"
          },
          "no-image" : {
            "type" : "number",
            "description" : "Distance of the section at the end of the overlap where artwork content is to be clipped",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "GapEdge", "OverlapEdge" ]
          }
        },
        "description" : "Overlap-based tile edge defines overlap from tile edge and optionally no image area within the overlap",
        "xml" : {
          "name" : "overlap-tile-edge"
        }
      },
      "overlap-tiling" : {
        "required" : [ "overlap", "type" ],
        "type" : "object",
        "properties" : {
          "overlap-rule" : {
            "type" : "string",
            "enum" : [ "Top", "Bottom", "Both" ]
          },
          "overlap" : {
            "type" : "number",
            "description" : "Distance beyond tile edge to extend the tile to create overlap in the given direction",
            "format" : "double"
          },
          "no-image" : {
            "type" : "number",
            "description" : "Distance of the section at the end of the overlap where artwork content is to be clipped",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "Gap", "Overlap" ]
          }
        },
        "description" : "Overlap tiling method creates overlaps between tiles in the given direction",
        "xml" : {
          "name" : "overlap-tiling"
        }
      },
      "page" : {
        "required" : [ "file" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "file" : {
            "$ref" : "#/components/schemas/page-file"
          },
          "page-clip" : {
            "type" : "boolean",
            "description" : "Part page clip"
          },
          "locked" : {
            "type" : "boolean",
            "description" : "Page artwork locked"
          },
          "visible" : {
            "type" : "boolean",
            "description" : "Page visible"
          }
        },
        "description" : "Page object",
        "xml" : {
          "name" : "page"
        }
      },
      "page-file" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "Full path to the file"
          },
          "number" : {
            "type" : "integer",
            "description" : "Page number used from the file",
            "format" : "int32"
          },
          "width" : {
            "type" : "number",
            "description" : "Artwork page width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Artwork page height",
            "format" : "double"
          },
          "checksum" : {
            "type" : "string",
            "description" : "File checksum"
          },
          "timestamp" : {
            "type" : "integer",
            "description" : "Timestamp recorded for file",
            "format" : "int64"
          }
        },
        "description" : "Page assignment state for the page",
        "xml" : {
          "name" : "page-file"
        }
      },
      "page-mappings" : {
        "type" : "object",
        "description" : "Folding pattern custom page mappings",
        "xml" : {
          "name" : "page-mappings"
        }
      },
      "partObject" : {
        "required" : [ "grain", "name", "pages", "process-settings", "rotation", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Part - base object for product 2.0 part model",
        "xml" : {
          "name" : "part"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Flat" : "#/components/schemas/flat-part",
            "Bound" : "#/components/schemas/bound-part",
            "Folded" : "#/components/schemas/folded-part",
            "Tiled" : "#/components/schemas/tiled-part"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/flat-part"
        }, {
          "$ref" : "#/components/schemas/bound-part"
        }, {
          "$ref" : "#/components/schemas/folded-part"
        }, {
          "$ref" : "#/components/schemas/tiled-part"
        } ]
      },
      "path" : {
        "type" : "object",
        "description" : "Path",
        "xml" : {
          "name" : "path"
        }
      },
      "placement" : {
        "required" : [ "rule", "type" ],
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/rule"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Placement", "PressPlacement", "OffsetPressPlacement", "FlexoPressPlacement" ]
          }
        },
        "description" : "Placement",
        "xml" : {
          "name" : "placement"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Placement" : "#/components/schemas/placement",
            "PressPlacement" : "#/components/schemas/press-placement",
            "OffsetPressPlacement" : "#/components/schemas/offset-press-placement",
            "FlexoPressPlacement" : "#/components/schemas/flexo-press-placement"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/placement"
        }, {
          "$ref" : "#/components/schemas/press-placement"
        }, {
          "$ref" : "#/components/schemas/offset-press-placement"
        }, {
          "$ref" : "#/components/schemas/flexo-press-placement"
        } ]
      },
      "press-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Press Capabilities",
        "xml" : {
          "name" : "press-capabilities"
        }
      },
      "press-color" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Color name"
          },
          "process" : {
            "type" : "string",
            "description" : "Color process"
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back" ]
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          }
        },
        "description" : "Press color",
        "xml" : {
          "name" : "press-color"
        }
      },
      "press-media-rule" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "marks" : {
            "type" : "array",
            "description" : "List of marks to apply with this media rule",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/device-mark"
            }
          },
          "speed-reduction" : {
            "type" : "string",
            "description" : "Speed reduction specified as a number where 1.0 represents no change"
          },
          "content" : {
            "$ref" : "#/components/schemas/margins"
          },
          "image" : {
            "$ref" : "#/components/schemas/margins"
          },
          "regions" : {
            "type" : "array",
            "description" : "Regions",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/region"
            }
          },
          "ink-adjustment" : {
            "type" : "string",
            "description" : "Ink adjustment"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Press media rule",
        "xml" : {
          "name" : "press-media-rule"
        }
      },
      "press-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/press-media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/press-media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Press media rules",
        "xml" : {
          "name" : "press-media-rules"
        }
      },
      "press-placement" : {
        "required" : [ "rule", "type" ],
        "type" : "object",
        "properties" : {
          "rule" : {
            "$ref" : "#/components/schemas/rule"
          },
          "default-sheet" : {
            "$ref" : "#/components/schemas/sheet-ref"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Placement", "PressPlacement", "OffsetPressPlacement", "FlexoPressPlacement" ]
          }
        },
        "description" : "Press Placement",
        "xml" : {
          "name" : "press-placement"
        }
      },
      "press-units" : {
        "required" : [ "coatings", "foils", "units" ],
        "type" : "object",
        "properties" : {
          "units" : {
            "type" : "integer",
            "description" : "Units",
            "format" : "int32"
          },
          "coatings" : {
            "type" : "integer",
            "description" : "Coatings",
            "format" : "int32"
          },
          "foils" : {
            "type" : "integer",
            "description" : "Foils",
            "format" : "int32"
          }
        },
        "description" : "Press Units",
        "xml" : {
          "name" : "press-units"
        }
      },
      "process" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Process",
        "xml" : {
          "name" : "process"
        }
      },
      "process-setting" : {
        "required" : [ "process" ],
        "type" : "object",
        "properties" : {
          "process" : {
            "type" : "string",
            "description" : "Process setting process"
          },
          "mode" : {
            "type" : "string",
            "description" : "Process setting mode"
          },
          "mode-value" : {
            "type" : "number",
            "description" : "Process setting mode value",
            "format" : "double"
          },
          "things" : {
            "type" : "array",
            "description" : "Process setting things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Process setting things",
              "xml" : {
                "name" : "thing"
              }
            }
          },
          "process-types" : {
            "type" : "array",
            "description" : "Process setting types",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Process setting types",
              "xml" : {
                "name" : "process-type"
              }
            }
          }
        },
        "description" : "Process setting",
        "xml" : {
          "name" : "process-setting"
        }
      },
      "process-stats" : {
        "required" : [ "cost", "process", "time" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "process" : {
            "type" : "string",
            "description" : "Process"
          },
          "inline" : {
            "type" : "array",
            "description" : "Inline processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Inline processes",
              "xml" : {
                "name" : "inline"
              }
            }
          }
        },
        "description" : "Per-process aggregate stats",
        "xml" : {
          "name" : "process-stats"
        }
      },
      "process-type" : {
        "required" : [ "name", "process" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "process" : {
            "$ref" : "#/components/schemas/reference"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Process Type",
        "xml" : {
          "name" : "process-type"
        }
      },
      "product" : {
        "required" : [ "color", "name", "overruns", "parts", "quantity" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Product order quantity",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Product group"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Product priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "integer",
            "description" : "Product color in RGB",
            "format" : "int32"
          },
          "parts" : {
            "type" : "array",
            "description" : "Product parts that make up this product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/partObject"
            }
          },
          "messages" : {
            "type" : "array",
            "description" : "All warning and error messages related to this product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "index" : {
            "type" : "integer",
            "description" : "Product index number",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantities of all components in this product have been fulfilled"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Product 2.0",
        "xml" : {
          "name" : "product"
        }
      },
      "rate" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "description" : "Value",
            "format" : "double"
          },
          "units" : {
            "type" : "string",
            "enum" : [ "Milliseconds", "Seconds", "Minutes", "Hours", "Days" ]
          }
        },
        "description" : "Rate",
        "xml" : {
          "name" : "rate"
        }
      },
      "rdc-capabilities" : {
        "required" : [ "caliper-range", "height-range", "limit", "limit-logic", "sheet-handling", "type", "weight-range", "width-range" ],
        "type" : "object",
        "properties" : {
          "width-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "height-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "caliper-range" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "weight-range" : {
            "$ref" : "#/components/schemas/stock-weight-range"
          },
          "sheet-handling" : {
            "type" : "string",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "PressCapabilities", "GcCapabilities", "FdcCapabilities", "RdcCapabilities", "DctCapabilities", "CorrugatorCapabilities", "DmCapabilities" ]
          }
        },
        "description" : "Rotary die cutter capabilities",
        "xml" : {
          "name" : "rdc-capabilities"
        }
      },
      "rdc-costing" : {
        "required" : [ "currency", "rate", "setup", "speed", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/rdc-setup"
          },
          "run-length-range" : {
            "$ref" : "#/components/schemas/integer-range"
          },
          "speed" : {
            "$ref" : "#/components/schemas/speed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Rotary die cutter costing",
        "xml" : {
          "name" : "rdc-costing"
        }
      },
      "rdc-media-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/media-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/media-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Rotary die cutter media rules",
        "xml" : {
          "name" : "rdc-media-rules"
        }
      },
      "rdc-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "cutting-time" : {
            "type" : "number",
            "description" : "Cutting time",
            "format" : "double"
          },
          "die-name" : {
            "type" : "string",
            "description" : "Die name"
          },
          "die-id" : {
            "type" : "string",
            "description" : "Die ID"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Rotary die cutter processing results",
        "xml" : {
          "name" : "rdc-result"
        }
      },
      "rdc-setup" : {
        "required" : [ "layouts", "time", "type" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "layouts" : {
            "type" : "integer",
            "description" : "Setup Layouts",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Setup", "SetupLayouts", "GcSetup", "FdcSetup", "RdcSetup" ]
          }
        },
        "description" : "Rotary die cutter setup",
        "xml" : {
          "name" : "rdc-setup"
        }
      },
      "rect" : {
        "required" : [ "height", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          }
        },
        "description" : "Rectangle object",
        "xml" : {
          "name" : "rect"
        }
      },
      "reference" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "region" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Rectangle" ]
          },
          "alignX" : {
            "type" : "string",
            "enum" : [ "Left", "Right", "Center" ]
          },
          "alignY" : {
            "type" : "string",
            "enum" : [ "Top", "Center", "Bottom", "Punch" ]
          },
          "offset-x" : {
            "type" : "string",
            "description" : "Offset X"
          },
          "offset-y" : {
            "type" : "string",
            "description" : "Offset Y"
          },
          "size-x" : {
            "type" : "string",
            "description" : "Size X"
          },
          "size-y" : {
            "type" : "string",
            "description" : "Size Y"
          },
          "applied" : {
            "type" : "string",
            "enum" : [ "Always", "Perfecting" ]
          }
        },
        "description" : "Region",
        "xml" : {
          "name" : "region"
        }
      },
      "result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Thing processing result",
        "xml" : {
          "name" : "result"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SheetFedDigitalPress" : "#/components/schemas/sfdp-result",
            "WebFedDigitalPress" : "#/components/schemas/wfdp-result",
            "SheetFedOffsetPress" : "#/components/schemas/sfop-result",
            "WebFedOffsetPress" : "#/components/schemas/wfop-result",
            "WebFedFlexoPress" : "#/components/schemas/wffp-result",
            "FlatbedWideFormatPress" : "#/components/schemas/fwfp-result",
            "RollFedWideFormatPress" : "#/components/schemas/rfwfp-result",
            "GuillotineCutter" : "#/components/schemas/gc-result",
            "FlatbedDieCutter" : "#/components/schemas/fdc-result",
            "RotaryDieCutter" : "#/components/schemas/rdc-result",
            "DigitalCuttingTable" : "#/components/schemas/dct-result",
            "DieMaking" : "#/components/schemas/dm-result",
            "Corrugator" : "#/components/schemas/corrugator-result"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/sfdp-result"
        }, {
          "$ref" : "#/components/schemas/wfdp-result"
        }, {
          "$ref" : "#/components/schemas/sfop-result"
        }, {
          "$ref" : "#/components/schemas/wfop-result"
        }, {
          "$ref" : "#/components/schemas/fwfp-result"
        }, {
          "$ref" : "#/components/schemas/rfwfp-result"
        }, {
          "$ref" : "#/components/schemas/fdc-result"
        }, {
          "$ref" : "#/components/schemas/rdc-result"
        }, {
          "$ref" : "#/components/schemas/dct-result"
        }, {
          "$ref" : "#/components/schemas/gc-result"
        }, {
          "$ref" : "#/components/schemas/dm-result"
        }, {
          "$ref" : "#/components/schemas/corrugator-result"
        }, {
          "$ref" : "#/components/schemas/wffp-result"
        } ]
      },
      "rfwfp-costing" : {
        "required" : [ "currency", "rate", "running-waste", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Roll-fed Wide Format Press Costing",
        "xml" : {
          "name" : "rfwfp-costing"
        }
      },
      "rfwfp-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "roll-length" : {
            "type" : "string",
            "description" : "Total length of roll being processed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Roll-fed Wide Format Press Result",
        "xml" : {
          "name" : "rfwfp-result"
        }
      },
      "ribbon" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "gutter" : {
            "type" : "number",
            "description" : "Gutter distance between child regions of this region",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Ribbon within a roll",
        "xml" : {
          "name" : "ribbon"
        }
      },
      "roll" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "children" : {
            "type" : "array",
            "description" : "Child regions",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/roll-region"
            }
          },
          "frames" : {
            "type" : "array",
            "description" : "Roll frames in this region",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/frame"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          }
        },
        "description" : "Single continuous roll in the project",
        "xml" : {
          "name" : "roll"
        }
      },
      "roll-component" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "repeats" : {
            "type" : "integer",
            "description" : "Number of times this component repeats sequentially within its parent region",
            "format" : "int32"
          },
          "rotation" : {
            "type" : "number",
            "description" : "Rotation of this component in degrees",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Component item placed on the roll",
        "xml" : {
          "name" : "component"
        }
      },
      "roll-fed-wide-format-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/rfwfp-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Roll-fed Wide Format Press",
        "xml" : {
          "name" : "roll-fed-wide-format-press"
        }
      },
      "roll-region" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Base object for all roll-based regions",
        "xml" : {
          "name" : "region"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Roll" : "#/components/schemas/roll",
            "Segment" : "#/components/schemas/segment",
            "Lane" : "#/components/schemas/lane",
            "Ribbon" : "#/components/schemas/ribbon",
            "Blank" : "#/components/schemas/blank",
            "Frame" : "#/components/schemas/frame",
            "Strip" : "#/components/schemas/strip",
            "LeadIn" : "#/components/schemas/lead-in",
            "LeadOut" : "#/components/schemas/lead-out",
            "Component" : "#/components/schemas/roll-component"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/roll"
        }, {
          "$ref" : "#/components/schemas/segment"
        }, {
          "$ref" : "#/components/schemas/lane"
        }, {
          "$ref" : "#/components/schemas/ribbon"
        }, {
          "$ref" : "#/components/schemas/roll-component"
        }, {
          "$ref" : "#/components/schemas/blank"
        }, {
          "$ref" : "#/components/schemas/frame"
        }, {
          "$ref" : "#/components/schemas/strip"
        }, {
          "$ref" : "#/components/schemas/lead-in"
        }, {
          "$ref" : "#/components/schemas/lead-out"
        } ]
      },
      "rotary-die-cutter" : {
        "required" : [ "capabilities", "costing", "feed-type", "manufacturer", "media-rules", "name", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/rdc-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/rdc-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/rdc-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/placement"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Rotary die cutter",
        "xml" : {
          "name" : "rotary-die-cutter"
        }
      },
      "rotation" : {
        "type" : "object",
        "properties" : {
          "rotation-type" : {
            "type" : "string",
            "enum" : [ "Any", "Orthogonal", "None", "Custom" ]
          },
          "custom-values" : {
            "type" : "array",
            "description" : "Custom rotation values",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "integer",
              "description" : "Custom rotation values",
              "format" : "int32",
              "xml" : {
                "name" : "value"
              }
            }
          }
        },
        "description" : "Rotation settings",
        "xml" : {
          "name" : "rotation"
        }
      },
      "rule" : {
        "type" : "object",
        "properties" : {
          "anchor" : {
            "type" : "string",
            "description" : "Reference anchor in the layout to base placement on",
            "enum" : [ "Content", "Sheet", "Plate" ]
          },
          "reference-point" : {
            "type" : "string",
            "description" : "Reference point in the anchor to align placement to",
            "enum" : [ "TopLeft", "TopCenter", "TopRight", "CenterLeft", "Center", "CenterRight", "BottomLeft", "BottomCenter", "BottomRight" ]
          },
          "placement" : {
            "type" : "string",
            "description" : "Reference point within parent to place this mark's reference point",
            "enum" : [ "TopLeft", "TopCenter", "TopRight", "CenterLeft", "Center", "CenterRight", "BottomLeft", "BottomCenter", "BottomRight" ]
          },
          "horizontal-offset" : {
            "type" : "string",
            "description" : "Additional horizontal offset to apply from horizontal placement location.  Positive scalar values move the mark to the right while negative values move the mark to the left within the parent item."
          },
          "vertical-offset" : {
            "type" : "string",
            "description" : "Additional vertical offset to apply from vertical placement location.  Positive scalar values move the mark up while negative values move the mark downward within the parent item."
          },
          "resize-sheet" : {
            "type" : "boolean",
            "description" : "Use die template specification for sheet size and placement"
          }
        },
        "description" : "Placement Rule",
        "xml" : {
          "name" : "placement-rule"
        }
      },
      "scalar-range" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "type" : "string",
            "description" : "Start"
          },
          "end" : {
            "type" : "string",
            "description" : "End"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "IntegerRange", "DoubleRange", "ScalarRange", "StockWeightRange", "DateRange" ]
          }
        },
        "description" : "Scalar Range",
        "xml" : {
          "name" : "scalar-range"
        }
      },
      "segment" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          }
        },
        "description" : "Segment within a roll",
        "xml" : {
          "name" : "segment"
        }
      },
      "setup" : {
        "required" : [ "time", "type" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Setup", "SetupLayouts", "GcSetup", "FdcSetup", "RdcSetup" ]
          }
        },
        "description" : "Setup",
        "xml" : {
          "name" : "setup"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Setup" : "#/components/schemas/setup",
            "SetupLayouts" : "#/components/schemas/setup-layouts",
            "GcSetup" : "#/components/schemas/gc-setup",
            "FdcSetup" : "#/components/schemas/fdc-setup",
            "RdcSetup" : "#/components/schemas/rdc-setup"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/setup"
        }, {
          "$ref" : "#/components/schemas/setup-layouts"
        }, {
          "$ref" : "#/components/schemas/gc-setup"
        }, {
          "$ref" : "#/components/schemas/fdc-setup"
        }, {
          "$ref" : "#/components/schemas/rdc-setup"
        } ]
      },
      "setup-layouts" : {
        "required" : [ "layouts", "time", "type" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-value"
          },
          "layouts" : {
            "type" : "integer",
            "description" : "Setup Layouts",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Setup", "SetupLayouts", "GcSetup", "FdcSetup", "RdcSetup" ]
          }
        },
        "description" : "Setup Layouts",
        "xml" : {
          "name" : "setup-layouts"
        }
      },
      "sfdp-costing" : {
        "required" : [ "currency", "rate", "running-waste", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Sheet-fed Digital Press Costing",
        "xml" : {
          "name" : "sfdp-costing"
        }
      },
      "sfdp-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Sheet-fed Digital Press Result",
        "xml" : {
          "name" : "sfdp-result"
        }
      },
      "sfop-costing" : {
        "required" : [ "currency", "minimum-cost-per-layout", "rate", "run-length-range", "running-waste", "setup", "setup-per-color", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "setup-per-color" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "minimum-cost-per-layout" : {
            "type" : "number",
            "description" : "Minimum Cost Per Layout",
            "format" : "double"
          },
          "run-length-range" : {
            "$ref" : "#/components/schemas/integer-range"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Sheet-fed Offset Press Costing",
        "xml" : {
          "name" : "sfop-costing"
        }
      },
      "sfop-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plate-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plates" : {
            "type" : "integer",
            "description" : "Plate count",
            "format" : "int32"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Sheet-fed Offset Press Result",
        "xml" : {
          "name" : "sfop-result"
        }
      },
      "sheet-fed-digital-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "sheetTurn", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/sfdp-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "sheetTurn" : {
            "type" : "string",
            "enum" : [ "Turn", "Tumble" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Sheet-fed Digital Press",
        "xml" : {
          "name" : "sheet-fed-digital-press"
        }
      },
      "sheet-fed-offset-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "sheetTurn", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/sfop-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/offset-press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "sheetTurn" : {
            "type" : "string",
            "enum" : [ "Turn", "Tumble" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Sheet-fed Offset Press",
        "xml" : {
          "name" : "sheet-fed-offset-press"
        }
      },
      "sheet-position" : {
        "required" : [ "align-x", "align-y" ],
        "type" : "object",
        "properties" : {
          "align-x" : {
            "type" : "string",
            "enum" : [ "Left", "Right", "Center" ]
          },
          "align-y" : {
            "type" : "string",
            "enum" : [ "Top", "Center", "Bottom", "Punch" ]
          },
          "offset-x" : {
            "type" : "string",
            "description" : "Offset X"
          },
          "offset-y" : {
            "type" : "string",
            "description" : "Offset Y"
          }
        },
        "description" : "Sheet position",
        "xml" : {
          "name" : "sheet-position"
        }
      },
      "sheet-ref" : {
        "required" : [ "media", "sheet-id" ],
        "type" : "object",
        "properties" : {
          "media" : {
            "$ref" : "#/components/schemas/material-ref"
          },
          "sheet-id" : {
            "type" : "string",
            "description" : "Sheet ID"
          }
        },
        "description" : "Sheet Reference",
        "xml" : {
          "name" : "sheet-ref"
        }
      },
      "size" : {
        "required" : [ "height", "name", "width" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "width" : {
            "type" : "string",
            "description" : "Size width"
          },
          "height" : {
            "type" : "string",
            "description" : "Size height"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Size object",
        "xml" : {
          "name" : "size"
        }
      },
      "sleeve-cylinder" : {
        "required" : [ "circumference", "type" ],
        "type" : "object",
        "properties" : {
          "circumference" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Gear", "Sleeve" ]
          }
        },
        "description" : "Sleeve Cylinder",
        "xml" : {
          "name" : "sleeve-cylinder"
        }
      },
      "spacing" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "margin" : {
            "type" : "string",
            "description" : "Single margin setting"
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Margins", "Uniform", "Bleed", "Tool" ]
          }
        },
        "description" : "Spacing settings",
        "xml" : {
          "name" : "spacing"
        }
      },
      "speed" : {
        "required" : [ "fixed-speed", "speed-units", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Fixed", "Stepped" ]
          },
          "speed-units" : {
            "$ref" : "#/components/schemas/speed-units"
          },
          "fixed-speed" : {
            "type" : "number",
            "description" : "Fixed Speed",
            "format" : "double"
          },
          "stepped-speed" : {
            "$ref" : "#/components/schemas/stepped-speed"
          }
        },
        "description" : "Speed",
        "xml" : {
          "name" : "speed"
        }
      },
      "speed-units" : {
        "required" : [ "time", "units" ],
        "type" : "object",
        "properties" : {
          "units" : {
            "type" : "string",
            "enum" : [ "Sheets", "Feet", "Inches", "Meters", "Centimeters", "Millimeters", "MSI", "MSF", "SquareFeet", "SquareInches", "SquareMeters", "SquareCentimeters", "SquareMillimeters" ]
          },
          "time" : {
            "type" : "string",
            "enum" : [ "Milliseconds", "Seconds", "Minutes", "Hours", "Days" ]
          }
        },
        "description" : "Speed Units",
        "xml" : {
          "name" : "speed-units"
        }
      },
      "standard-tiling" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "start" : {
            "type" : "string",
            "enum" : [ "TopLeft", "TopRight", "BottomLeft", "BottomRight" ]
          },
          "order" : {
            "type" : "string",
            "enum" : [ "SnakingVertical", "SnakingHorizontal", "ZigzagVertical", "ZigzagHorizontal" ]
          },
          "horizontal-rule" : {
            "$ref" : "#/components/schemas/tiling-rule"
          },
          "horizontal-method" : {
            "$ref" : "#/components/schemas/tiling-method"
          },
          "vertical-rule" : {
            "$ref" : "#/components/schemas/tiling-rule"
          },
          "vertical-method" : {
            "$ref" : "#/components/schemas/tiling-method"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Standard", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Standard rule-based tiling",
        "xml" : {
          "name" : "standard-tiling"
        }
      },
      "steel-rule" : {
        "required" : [ "cost", "type", "units" ],
        "type" : "object",
        "properties" : {
          "cost" : {
            "type" : "number",
            "description" : "Cost",
            "format" : "double"
          },
          "units" : {
            "type" : "string",
            "description" : "Units",
            "enum" : [ "Feet", "Inches", "Meters", "Centimeters", "Millimeters", "Micrometers", "Thou", "Points" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationMode", "MediaRule", "PressMediaRule", "DctRuleValue", "CorrugatorMode", "CorrugatorMediaRule", "SteelRule" ]
          }
        },
        "description" : "Steel rule",
        "xml" : {
          "name" : "steel-rule"
        }
      },
      "steel-rules" : {
        "required" : [ "default", "type" ],
        "type" : "object",
        "properties" : {
          "default" : {
            "$ref" : "#/components/schemas/steel-rule"
          },
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/steel-rule"
            },
            "description" : "Map containing key/values",
            "xml" : {
              "wrapped" : true
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "OperationModes", "DctOperation", "CorrugatorOperation", "PressMediaRules", "GcMediaRules", "FdcMediaRules", "RdcMediaRules", "DctMediaRules", "CorrugatorMediaRules", "SteelRules" ]
          }
        },
        "description" : "Steel rules",
        "xml" : {
          "name" : "steel-rules"
        }
      },
      "stepped-speed" : {
        "type" : "object",
        "properties" : {
          "entries" : {
            "type" : "array",
            "description" : "Stepped speed entries",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/stepped-speed-entry"
            }
          }
        },
        "description" : "Stepped Speed",
        "xml" : {
          "name" : "stepped-speed"
        }
      },
      "stepped-speed-entry" : {
        "required" : [ "range", "speed" ],
        "type" : "object",
        "properties" : {
          "range" : {
            "type" : "number",
            "description" : "Range",
            "format" : "double"
          },
          "speed" : {
            "type" : "number",
            "description" : "Speed",
            "format" : "double"
          }
        },
        "description" : "Stepped Speed Entry",
        "xml" : {
          "name" : "stepped-speed-entry"
        }
      },
      "stock-capabilities" : {
        "required" : [ "limit", "limit-logic" ],
        "type" : "object",
        "properties" : {
          "limit" : {
            "type" : "boolean",
            "description" : "Limit"
          },
          "limit-logic" : {
            "type" : "string",
            "enum" : [ "Inclusively", "Exclusively" ]
          },
          "stock-types" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          },
          "specific-stocks" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique ID of asset"
              },
              "path" : {
                "type" : "string",
                "description" : "Path to asset"
              }
            },
            "description" : "Library reference",
            "xml" : {
              "name" : "reference",
              "wrapped" : true
            }
          }
        },
        "description" : "Stock capabilities",
        "xml" : {
          "name" : "stock-capabilities"
        }
      },
      "stock-weight" : {
        "required" : [ "units", "weight" ],
        "type" : "object",
        "properties" : {
          "weight" : {
            "type" : "number",
            "description" : "Weight",
            "format" : "double"
          },
          "units" : {
            "type" : "string",
            "enum" : [ "GSM", "Lb" ]
          }
        },
        "description" : "Stock weight value and units",
        "xml" : {
          "name" : "stock-weight"
        }
      },
      "stock-weight-range" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "$ref" : "#/components/schemas/stock-weight"
          },
          "end" : {
            "$ref" : "#/components/schemas/stock-weight"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "IntegerRange", "DoubleRange", "ScalarRange", "StockWeightRange", "DateRange" ]
          }
        },
        "description" : "Stock Weight Range",
        "xml" : {
          "name" : "stock-weight-range"
        }
      },
      "strip" : {
        "required" : [ "height", "type", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "name" : "strip-type"
            },
            "enum" : [ "Roll", "Segment", "Lane", "Ribbon", "Component", "Blank", "Frame", "Strip", "LeadIn", "LeadOut" ]
          },
          "alignment" : {
            "type" : "string",
            "enum" : [ "Left", "Right", "Center" ]
          }
        },
        "description" : "Strip in the roll where no components can be placed",
        "xml" : {
          "name" : "strip"
        }
      },
      "thing" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Thing - base object for IoT model",
        "xml" : {
          "name" : "thing"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SheetFedDigitalPress" : "#/components/schemas/sheet-fed-digital-press",
            "WebFedDigitalPress" : "#/components/schemas/web-fed-digital-press",
            "SheetFedOffsetPress" : "#/components/schemas/sheet-fed-offset-press",
            "WebFedOffsetPress" : "#/components/schemas/web-fed-offset-press",
            "WebFedFlexoPress" : "#/components/schemas/web-fed-flexo-press",
            "FlatbedWideFormatPress" : "#/components/schemas/flatbed-wide-format-press",
            "RollFedWideFormatPress" : "#/components/schemas/roll-fed-wide-format-press",
            "GuillotineCutter" : "#/components/schemas/guillotine-cutter",
            "FlatbedDieCutter" : "#/components/schemas/flatbed-die-cutter",
            "RotaryDieCutter" : "#/components/schemas/rotary-die-cutter",
            "DigitalCuttingTable" : "#/components/schemas/digital-cutting-table",
            "DieMaking" : "#/components/schemas/die-making",
            "Corrugator" : "#/components/schemas/corrugator"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/sheet-fed-digital-press"
        }, {
          "$ref" : "#/components/schemas/web-fed-digital-press"
        }, {
          "$ref" : "#/components/schemas/sheet-fed-offset-press"
        }, {
          "$ref" : "#/components/schemas/web-fed-offset-press"
        }, {
          "$ref" : "#/components/schemas/web-fed-flexo-press"
        }, {
          "$ref" : "#/components/schemas/flatbed-wide-format-press"
        }, {
          "$ref" : "#/components/schemas/roll-fed-wide-format-press"
        }, {
          "$ref" : "#/components/schemas/guillotine-cutter"
        }, {
          "$ref" : "#/components/schemas/flatbed-die-cutter"
        }, {
          "$ref" : "#/components/schemas/rotary-die-cutter"
        }, {
          "$ref" : "#/components/schemas/digital-cutting-table"
        }, {
          "$ref" : "#/components/schemas/die-making"
        }, {
          "$ref" : "#/components/schemas/corrugator"
        } ]
      },
      "thing-job" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "result" : {
            "$ref" : "#/components/schemas/result"
          },
          "trail" : {
            "type" : "string",
            "description" : "Job trail ID"
          }
        },
        "description" : "Thing job",
        "xml" : {
          "name" : "thing-job"
        }
      },
      "tile" : {
        "required" : [ "bleed", "height", "width", "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          },
          "width" : {
            "type" : "number",
            "description" : "Width",
            "format" : "double"
          },
          "height" : {
            "type" : "number",
            "description" : "Height",
            "format" : "double"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/margins"
          },
          "left-edge" : {
            "$ref" : "#/components/schemas/tile-edge"
          },
          "top-edge" : {
            "$ref" : "#/components/schemas/tile-edge"
          },
          "right-edge" : {
            "$ref" : "#/components/schemas/tile-edge"
          },
          "bottom-edge" : {
            "$ref" : "#/components/schemas/tile-edge"
          }
        },
        "description" : "Single tile definition",
        "xml" : {
          "name" : "tile"
        }
      },
      "tile-edge" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "GapEdge", "OverlapEdge" ]
          }
        },
        "description" : "Tile edge",
        "xml" : {
          "name" : "tile-edge"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "GapEdge" : "#/components/schemas/gap-tile-edge",
            "OverlapEdge" : "#/components/schemas/overlap-tile-edge"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/gap-tile-edge"
        }, {
          "$ref" : "#/components/schemas/overlap-tile-edge"
        } ]
      },
      "tile-flat" : {
        "required" : [ "die-design", "index", "name", "spacing", "tile", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "tile" : {
            "$ref" : "#/components/schemas/tile"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "index" : {
            "type" : "integer",
            "description" : "Tile index",
            "format" : "int32"
          },
          "layouts" : {
            "$ref" : "#/components/schemas/layouts"
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Tile component",
        "xml" : {
          "name" : "tile-flat"
        }
      },
      "tiled-part" : {
        "required" : [ "die-design", "grain", "name", "pages", "process-settings", "rotation", "tiles", "tiling", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "tiling" : {
            "$ref" : "#/components/schemas/tiling"
          },
          "tiles" : {
            "type" : "array",
            "description" : "Tiled components for this tiled part",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/tile-flat"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Tiled part for creating tiled work",
        "xml" : {
          "name" : "tiled-part"
        }
      },
      "tiling" : {
        "required" : [ "name", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Standard", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Tiling preset defining how tiling is performed",
        "xml" : {
          "name" : "tiling"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "StandardTiling" : "#/components/schemas/standard-tiling",
            "CustomTiling" : "#/components/schemas/custom-tiling"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/standard-tiling"
        }, {
          "$ref" : "#/components/schemas/custom-tiling"
        } ]
      },
      "tiling-method" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "Gap", "Overlap" ]
          }
        },
        "description" : "Tiling method",
        "xml" : {
          "name" : "tiling-method"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Gap" : "#/components/schemas/gap-tiling",
            "Overlap" : "#/components/schemas/overlap-tiling"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/gap-tiling"
        }, {
          "$ref" : "#/components/schemas/overlap-tiling"
        } ]
      },
      "tiling-rule" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "FixedNumber", "FixedSize", "VariableSizes" ]
          }
        },
        "description" : "Tiling rule",
        "xml" : {
          "name" : "tiling-rule"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "FixedNumber" : "#/components/schemas/fixed-number-rule",
            "FixedSize" : "#/components/schemas/fixed-size-rule",
            "VariableSizes" : "#/components/schemas/variable-sizes-rule"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/fixed-number-rule"
        }, {
          "$ref" : "#/components/schemas/fixed-size-rule"
        }, {
          "$ref" : "#/components/schemas/variable-sizes-rule"
        } ]
      },
      "time-info" : {
        "type" : "object",
        "properties" : {
          "seconds" : {
            "type" : "number",
            "description" : "Time in seconds",
            "format" : "double"
          },
          "display" : {
            "type" : "string",
            "description" : "Time in display format with hours, minutes, and seconds"
          }
        },
        "description" : "Time info",
        "xml" : {
          "name" : "time-info"
        }
      },
      "time-value" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "units" : {
            "type" : "string",
            "enum" : [ "Milliseconds", "Seconds", "Minutes", "Hours", "Days" ]
          },
          "value" : {
            "type" : "number",
            "description" : "Value",
            "format" : "double"
          }
        },
        "description" : "Time value",
        "xml" : {
          "name" : "time-value"
        }
      },
      "trail-stats" : {
        "required" : [ "cost", "time" ],
        "type" : "object",
        "properties" : {
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "process-stats" : {
            "type" : "array",
            "description" : "Per-process stats",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-stats"
            }
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts needed including ordered run lengths, setup layouts, and waste layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Total number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Total number of waste layouts during processing",
            "format" : "int32"
          }
        },
        "description" : "Trail-level aggregate stats",
        "readOnly" : true,
        "xml" : {
          "name" : "trail-stats"
        }
      },
      "trim" : {
        "type" : "object",
        "properties" : {
          "spine-trim" : {
            "type" : "string",
            "description" : "Spine trim"
          },
          "jog-trim" : {
            "type" : "string",
            "description" : "Jog trim"
          },
          "face-trim" : {
            "type" : "string",
            "description" : "Face trim"
          },
          "non-jog-trim" : {
            "type" : "string",
            "description" : "Non-jog trim"
          },
          "lip-type" : {
            "type" : "string",
            "enum" : [ "Auto", "Front", "Back" ]
          },
          "lip" : {
            "type" : "string",
            "description" : "Lip"
          }
        },
        "description" : "Trim settings",
        "xml" : {
          "name" : "trim"
        }
      },
      "variable-sizes-rule" : {
        "required" : [ "sizes", "type" ],
        "type" : "object",
        "properties" : {
          "sizes" : {
            "type" : "array",
            "description" : "Custom sizes to use to create tiles in the given dimension",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "number",
              "description" : "Custom sizes to use to create tiles in the given dimension",
              "format" : "double",
              "xml" : {
                "name" : "size"
              }
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "None", "FixedNumber", "FixedSize", "VariableSizes" ]
          }
        },
        "description" : "Variable sizes tiling rule",
        "xml" : {
          "name" : "variable-sizes-rule"
        }
      },
      "velocity" : {
        "required" : [ "units", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number",
            "description" : "Value",
            "format" : "double"
          },
          "units" : {
            "type" : "string",
            "enum" : [ "MetersPerSecond", "CentimetersPerSecond", "MillimetersPerSecond", "FeetPerSecond", "InchesPerSecond" ]
          }
        },
        "description" : "Velocity",
        "xml" : {
          "name" : "velocity"
        }
      },
      "web-fed-digital-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/wfdp-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Web-fed Digital Press",
        "xml" : {
          "name" : "web-fed-digital-press"
        }
      },
      "web-fed-flexo-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/wffp-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/flexo-press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "cylinders" : {
            "type" : "array",
            "description" : "Cylinders this press can use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/cylinder"
            }
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Web-fed Flexo Press",
        "xml" : {
          "name" : "web-fed-flexo-press"
        }
      },
      "web-fed-offset-press" : {
        "required" : [ "capabilities", "costing", "feed-type", "front-units", "manufacturer", "media-rules", "name", "operation", "placement", "process-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "allow-pass-through" : {
            "type" : "boolean",
            "description" : "Allow pass-through"
          },
          "connections" : {
            "type" : "array",
            "description" : "Direct connections to other things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/connector"
            }
          },
          "costing" : {
            "$ref" : "#/components/schemas/wfop-costing"
          },
          "capabilities" : {
            "$ref" : "#/components/schemas/press-capabilities"
          },
          "script" : {
            "$ref" : "#/components/schemas/reference"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Manufacturer"
          },
          "media-rules" : {
            "$ref" : "#/components/schemas/press-media-rules"
          },
          "placement" : {
            "$ref" : "#/components/schemas/offset-press-placement"
          },
          "operation" : {
            "$ref" : "#/components/schemas/operation-modes"
          },
          "front-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "single-pass-double-sided" : {
            "type" : "boolean",
            "description" : "Single Pass Double Sided"
          },
          "back-units" : {
            "$ref" : "#/components/schemas/press-units"
          },
          "double-sided-speed-reduction" : {
            "type" : "string",
            "description" : "Double Sided Speed Reduction"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          },
          "feed-type" : {
            "type" : "string",
            "enum" : [ "Roll", "Sheet" ]
          },
          "process-type" : {
            "$ref" : "#/components/schemas/process-type"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Web-fed Offset Press",
        "xml" : {
          "name" : "web-fed-offset-press"
        }
      },
      "wfdp-costing" : {
        "required" : [ "currency", "rate", "running-waste", "setup", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Web-fed Digital Press Costing",
        "xml" : {
          "name" : "wfdp-costing"
        }
      },
      "wfdp-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "roll-length" : {
            "type" : "string",
            "description" : "Total length of roll being processed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Web-fed Digital Press Result",
        "xml" : {
          "name" : "wfdp-result"
        }
      },
      "wffp-costing" : {
        "required" : [ "currency", "rate", "running-waste", "setup", "setup-per-color", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "setup-per-color" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Web-fed Flexo Press Costing",
        "xml" : {
          "name" : "wffp-costing"
        }
      },
      "wffp-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plate-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plates" : {
            "type" : "integer",
            "description" : "Plate count",
            "format" : "int32"
          },
          "roll-length" : {
            "type" : "string",
            "description" : "Total length of roll being processed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Web-fed Flexo Press Result",
        "xml" : {
          "name" : "wffp-result"
        }
      },
      "wfop-costing" : {
        "required" : [ "currency", "minimum-cost-per-layout", "rate", "run-length-range", "running-waste", "setup", "setup-per-color", "type" ],
        "type" : "object",
        "properties" : {
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            },
            "description" : "Currency"
          },
          "rate" : {
            "$ref" : "#/components/schemas/rate"
          },
          "setup" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "running-waste" : {
            "type" : "number",
            "description" : "Running Waste",
            "format" : "double"
          },
          "setup-per-color" : {
            "$ref" : "#/components/schemas/setup-layouts"
          },
          "minimum-cost-per-layout" : {
            "type" : "number",
            "description" : "Minimum Cost Per Layout",
            "format" : "double"
          },
          "run-length-range" : {
            "$ref" : "#/components/schemas/integer-range"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SfdpCosting", "WfdpCosting", "SfopCosting", "WfopCosting", "FwfpCosting", "WffpCosting", "RfwfpCosting", "GcCosting", "FdcCosting", "RdcCosting", "DctCosting", "CorrugatorCosting", "DmCosting" ]
          }
        },
        "description" : "Web-fed Offset Press Costing",
        "xml" : {
          "name" : "wfop-costing"
        }
      },
      "wfop-result" : {
        "required" : [ "status", "type" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status",
            "enum" : [ "Pending", "Success", "Error" ]
          },
          "processes" : {
            "type" : "array",
            "description" : "Processes involved",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Processes involved",
              "xml" : {
                "name" : "process"
              }
            }
          },
          "time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "messages" : {
            "type" : "array",
            "description" : "Messages reported during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "external-messages" : {
            "type" : "array",
            "description" : "Messages reported by a third-party external estimation engine during processing",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/message"
            }
          },
          "process-type" : {
            "type" : "string",
            "description" : "Process type"
          },
          "setup-time" : {
            "$ref" : "#/components/schemas/time-info"
          },
          "total-layouts" : {
            "type" : "integer",
            "description" : "Total number of layouts being processed by this device including setup, waste, and produced layouts",
            "format" : "int32"
          },
          "setup-layouts" : {
            "type" : "integer",
            "description" : "Number of setup layouts",
            "format" : "int32"
          },
          "waste-layouts" : {
            "type" : "integer",
            "description" : "Layouts wasted during the device run",
            "format" : "int32"
          },
          "colors" : {
            "type" : "array",
            "description" : "Colors being processed",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/press-color"
            }
          },
          "side" : {
            "type" : "string",
            "enum" : [ "Front", "Back", "Both" ]
          },
          "ink-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plate-cost" : {
            "$ref" : "#/components/schemas/cost-info"
          },
          "plates" : {
            "type" : "integer",
            "description" : "Plate count",
            "format" : "int32"
          },
          "roll-length" : {
            "type" : "string",
            "description" : "Total length of roll being processed"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "SheetFedDigitalPress", "WebFedDigitalPress", "SheetFedOffsetPress", "WebFedOffsetPress", "WebFedFlexoPress", "FlatbedWideFormatPress", "RollFedWideFormatPress", "GuillotineCutter", "FlatbedDieCutter", "RotaryDieCutter", "DigitalCuttingTable", "Corrugator", "DieMaking" ]
          }
        },
        "description" : "Web-fed Offset Press Result",
        "xml" : {
          "name" : "wfop-result"
        }
      },
      "zcc-connection-settings" : {
        "required" : [ "hostname", "port", "timeout" ],
        "type" : "object",
        "properties" : {
          "hostname" : {
            "type" : "string",
            "description" : "Hostname"
          },
          "port" : {
            "type" : "integer",
            "description" : "Port",
            "format" : "int32"
          },
          "timeout" : {
            "type" : "integer",
            "description" : "Timeout",
            "format" : "int32"
          },
          "zccVersion" : {
            "type" : "integer",
            "description" : "ZccVersion",
            "format" : "int32"
          },
          "processName" : {
            "type" : "string",
            "description" : "ProcessName"
          },
          "processGUID" : {
            "type" : "string",
            "description" : "ProcessGUID"
          }
        },
        "description" : "ZCC connection settings",
        "xml" : {
          "name" : "zcc-connection-settings"
        }
      },
      "FormDataContentDisposition" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "fileName" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "modificationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "readDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "EditProjectResource" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Job ID"
          },
          "name" : {
            "type" : "string",
            "description" : "Job name"
          },
          "contact" : {
            "type" : "string",
            "description" : "Job contact person"
          },
          "phone" : {
            "type" : "string",
            "description" : "Job phone number"
          },
          "client" : {
            "type" : "string",
            "description" : "Job client name"
          },
          "notes" : {
            "type" : "string",
            "description" : "Job notes"
          },
          "units" : {
            "type" : "string",
            "description" : "Job units"
          },
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Edit project action resource",
        "xml" : {
          "name" : "edit-project-resource"
        }
      },
      "ExportJsonReportResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export JSON report action resource",
        "xml" : {
          "name" : "export-json-report-resource"
        }
      },
      "ExportXmlReportResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export XML report action resource",
        "xml" : {
          "name" : "export-xml-report-resource"
        }
      },
      "ExportCoverSheetResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export Cover Sheet action resource",
        "xml" : {
          "name" : "export-cover-sheet-resource"
        }
      },
      "ExportCsvReportResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export CSV report action resource",
        "xml" : {
          "name" : "export-csv-report-resource"
        }
      },
      "ExportCff2LayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export CFF2 layout action resource",
        "xml" : {
          "name" : "export-cff2-layout-resource"
        }
      },
      "ExportDxfLayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export DXF layout action resource",
        "xml" : {
          "name" : "export-dxf-layout-resource"
        }
      },
      "ExportMfgLayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export MFG layout action resource",
        "xml" : {
          "name" : "export-mfg-layout-resource"
        }
      },
      "ExportPdfLayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export PDF layout action resource",
        "xml" : {
          "name" : "export-pdf-layout-resource"
        }
      },
      "ExportZccLayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export Zund Cut Center layout action resource",
        "xml" : {
          "name" : "export-zcc-layout-resource"
        }
      },
      "ExportHpJdfResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export JDF HP action resource",
        "xml" : {
          "name" : "export-hp-jdf-resource"
        }
      },
      "ExportJdfResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export JDF action resource",
        "xml" : {
          "name" : "export-jdf-resource"
        }
      },
      "ExportCuttingJdfResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export cutting JDF action resource",
        "xml" : {
          "name" : "export-cutting-jdf-resource"
        }
      },
      "ExportKongsbergJdfResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export Kongsberg JDF action resource",
        "xml" : {
          "name" : "export-kongsberg-jdf-resource"
        }
      },
      "ExportPdfResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export PDF action resource",
        "xml" : {
          "name" : "export-pdf-resource"
        }
      },
      "ExportPdfReportResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export PDF report action resource",
        "xml" : {
          "name" : "export-pdf-report-resource"
        }
      },
      "ExportVectorSeparationResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export Vector separation action resource",
        "xml" : {
          "name" : "export-vector-separation-resource"
        }
      },
      "ExportTilingReportResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use"
          }
        },
        "description" : "Export Tiling report action resource",
        "xml" : {
          "name" : "export-tiling-report-resource"
        }
      },
      "ImportDieTemplateResource" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of file name"
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of die template preset to use"
          }
        },
        "description" : "Import die template action resource",
        "xml" : {
          "name" : "import-die-template-resource"
        }
      },
      "ApplyingResultsEntity" : {
        "type" : "object",
        "properties" : {
          "split-overlaps-on-apply" : {
            "type" : "boolean",
            "description" : "Split bleed overlaps on apply"
          },
          "group-products-on-apply" : {
            "type" : "boolean",
            "description" : "Group products on apply"
          },
          "ensure-margins-placement" : {
            "type" : "boolean",
            "description" : "Ensure margins placement"
          }
        },
        "description" : "Actions to apply after Imposition AI results are applied to the job",
        "xml" : {
          "name" : "applying-results"
        }
      },
      "ImposeResource" : {
        "required" : [ "templates" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "products" : {
            "type" : "array",
            "description" : "Names of products to include.  When not specified all products in the job are included",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of products to include.  When not specified all products in the job are included",
              "xml" : {
                "name" : "product"
              }
            }
          },
          "profiles" : {
            "type" : "array",
            "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
              "xml" : {
                "name" : "profile"
              }
            }
          },
          "profiles-inline" : {
            "type" : "array",
            "description" : "Optional inline fully defined profiles to use when running Imposition AI.",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
            }
          },
          "stop-minutes" : {
            "type" : "integer",
            "description" : "Number of minutes to allow this action to run before stopping.  Default is 60 minutes when not specified.",
            "format" : "int32"
          },
          "templates" : {
            "type" : "array",
            "description" : "Names of templates to use during Impose",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of templates to use during Impose",
              "xml" : {
                "name" : "template"
              }
            }
          }
        },
        "description" : "Impose action resource",
        "xml" : {
          "name" : "impose-resource"
        }
      },
      "ImpositionAiProfileEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "strategies" : {
            "$ref" : "#/components/schemas/StrategiesEntity"
          },
          "strip-options" : {
            "$ref" : "#/components/schemas/StripOptionsEntity"
          },
          "layout-options" : {
            "$ref" : "#/components/schemas/LayoutOptionsEntity"
          },
          "plan-options" : {
            "$ref" : "#/components/schemas/PlanOptionsEntity"
          },
          "web-options" : {
            "$ref" : "#/components/schemas/WebOptionsEntity"
          },
          "applying-options" : {
            "$ref" : "#/components/schemas/ApplyingResultsEntity"
          },
          "plan-rules" : {
            "$ref" : "#/components/schemas/RuleGroupEntity"
          },
          "scripts" : {
            "type" : "array",
            "description" : "Scripts",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LibraryItemEntity"
            }
          }
        },
        "description" : "Imposition AI Profile preset",
        "xml" : {
          "name" : "imposition-ai-profile"
        }
      },
      "LayoutOptionsEntity" : {
        "type" : "object",
        "properties" : {
          "sheet-fill" : {
            "type" : "string",
            "description" : "Sheet fill",
            "enum" : [ "Balanced", "Min", "Max" ]
          },
          "limit-unique-products" : {
            "type" : "integer",
            "description" : "Limit number of unique products per layout",
            "format" : "int32"
          },
          "allow-multiple-dies-per-layout" : {
            "type" : "boolean",
            "description" : "Allow multiple dies per layout"
          },
          "die-name-matching" : {
            "type" : "boolean",
            "description" : "Require product die name to match when populating die templates"
          },
          "allow-bleed-in-gripper" : {
            "type" : "boolean",
            "description" : "Allow bleed in gripper"
          },
          "allow-work-and-turn" : {
            "type" : "boolean",
            "description" : "Allow use of work and turn"
          },
          "allow-work-and-tumble" : {
            "type" : "boolean",
            "description" : "Allow use of work and tumble"
          },
          "use-derived-sheets" : {
            "type" : "boolean",
            "description" : "Use derived sheets"
          },
          "ordered-placement" : {
            "$ref" : "#/components/schemas/OrderedPlacementEntity"
          }
        },
        "description" : "Settings used for creating each layout",
        "xml" : {
          "name" : "layout-options"
        }
      },
      "OrderedPlacementEntity" : {
        "type" : "object",
        "properties" : {
          "favor-ordered-placement" : {
            "type" : "boolean",
            "description" : "Favor placing products in order in each layout"
          },
          "start-corner" : {
            "type" : "string",
            "description" : "The starting corner for placement order",
            "enum" : [ "TopLeft", "TopCenter", "TopRight", "CenterLeft", "Center", "CenterRight", "BottomLeft", "BottomCenter", "BottomRight" ]
          },
          "order-method" : {
            "type" : "string",
            "description" : "The order method to use for placement",
            "enum" : [ "VerticalZigzag", "HorizontalZigzag", "VerticalSnake", "HorizontalSnake" ]
          }
        },
        "description" : "Settings for ordered placement in each layout",
        "xml" : {
          "name" : "ordered-placement"
        }
      },
      "PlanOptionsEntity" : {
        "type" : "object",
        "properties" : {
          "plan-mode" : {
            "type" : "string",
            "description" : "Plan mode",
            "enum" : [ "Standard", "LayoutByLayout", "Sequential", "CutAndStack", "Lanes" ]
          },
          "stack-size" : {
            "type" : "integer",
            "description" : "Stack size",
            "format" : "int32"
          },
          "finishing" : {
            "type" : "string",
            "description" : "Finishing",
            "enum" : [ "Inline", "Nearline" ]
          },
          "stacking-order" : {
            "type" : "string",
            "description" : "Stacking order",
            "enum" : [ "Normal", "Reverse" ]
          },
          "allow-product-spanning" : {
            "type" : "boolean",
            "description" : "Allow product spanning"
          },
          "allow-multiple-press-passes" : {
            "type" : "boolean",
            "description" : "Allow multiple passes through press devices during printing"
          },
          "fixed-run-length" : {
            "type" : "integer",
            "description" : "Fixed run length",
            "format" : "int32"
          }
        },
        "description" : "Settings used for plans",
        "xml" : {
          "name" : "plan-options"
        }
      },
      "RuleEntity" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Rule type.  'Item' for item rules and 'Group' for group rules",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Item", "Group" ]
          }
        },
        "description" : "Rule defining matching criteria for on one or more properties",
        "xml" : {
          "name" : "rule"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Item" : "#/components/schemas/RuleItemEntity",
            "Group" : "#/components/schemas/RuleGroupEntity"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RuleItemEntity"
        }, {
          "$ref" : "#/components/schemas/RuleGroupEntity"
        } ]
      },
      "RuleGroupEntity" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "logic" : {
            "type" : "string",
            "description" : "Logic operation to apply when evaluating all rules in this group",
            "enum" : [ "And", "Or" ]
          },
          "rules" : {
            "type" : "array",
            "description" : "Rules in this group",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RuleEntity"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "Rule type.  'Item' for item rules and 'Group' for group rules",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Item", "Group" ]
          }
        },
        "description" : "Group of rules",
        "xml" : {
          "name" : "rule"
        }
      },
      "RuleItemEntity" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of item being evaluated"
          },
          "value-type" : {
            "type" : "string",
            "description" : "Value type of item being evaluated",
            "enum" : [ "String", "Integer", "Double", "Boolean", "Scalar", "Size", "Date", "IntegerRange", "DoubleRange", "ScalarRange", "DateRange", "Margins", "PlacementRule", "Enum", "Matcher", "TextList", "List", "AssetRef" ]
          },
          "operator" : {
            "type" : "string",
            "description" : "Rule operator",
            "enum" : [ "Equals", "NotEquals", "Within", "NotWithin", "CommonItems", "NoCommonItems", "IsBlank", "IsTrue", "IsFalse" ]
          },
          "value-number" : {
            "type" : "number",
            "description" : "Value number used in comparison operators",
            "format" : "double"
          },
          "value-scalar" : {
            "type" : "string",
            "description" : "Value scalar used in comparison operators"
          },
          "type" : {
            "type" : "string",
            "description" : "Rule type.  'Item' for item rules and 'Group' for group rules",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Item", "Group" ]
          }
        },
        "description" : "Rule item",
        "xml" : {
          "name" : "rule"
        }
      },
      "StrategiesEntity" : {
        "type" : "object",
        "properties" : {
          "horizontal-cut" : {
            "type" : "boolean",
            "description" : "Horizontal cut"
          },
          "vertical-cut" : {
            "type" : "boolean",
            "description" : "Vertical cut"
          },
          "nesting" : {
            "type" : "boolean",
            "description" : "Nesting strategies"
          },
          "free-nesting" : {
            "type" : "boolean",
            "description" : "Free nesting"
          },
          "grid-nesting" : {
            "type" : "boolean",
            "description" : "Grid nesting"
          },
          "strip-nesting" : {
            "type" : "boolean",
            "description" : "Strip nesting"
          },
          "horizontal-strip" : {
            "type" : "boolean",
            "description" : "Horizontal strip"
          },
          "vertical-strip" : {
            "type" : "boolean",
            "description" : "Vertical strip"
          },
          "templates" : {
            "type" : "boolean",
            "description" : "Templates"
          }
        },
        "description" : "Setting to specify which layout strategies are used",
        "xml" : {
          "name" : "strategies"
        }
      },
      "StripOptionsEntity" : {
        "type" : "object",
        "properties" : {
          "strip-rule" : {
            "type" : "string",
            "description" : "Strip rule",
            "enum" : [ "None", "SameProduct", "SameDimensions", "SameWidth", "SameHeight", "SameShape", "SameColors", "SameVarnish", "SameFoil", "HasVarnish", "HasFoil", "SameProperty" ]
          },
          "template-rule" : {
            "type" : "string",
            "description" : "Template rule",
            "enum" : [ "None", "Vertical", "Horizontal" ]
          },
          "property" : {
            "type" : "string",
            "description" : "Product property to compare when using the \"SameProperty\" strip rule"
          },
          "alignment" : {
            "type" : "string",
            "description" : "Strip alignment",
            "enum" : [ "TopLeft", "TopCenter", "TopRight", "CenterLeft", "Center", "CenterRight", "BottomLeft", "BottomCenter", "BottomRight" ]
          },
          "gutter" : {
            "type" : "string",
            "description" : "Gutter value"
          },
          "gutter-rule" : {
            "type" : "string",
            "description" : "Gutter rule",
            "enum" : [ "Always", "ProductsDiffer", "DimensionsDiffer", "PropertiesDiffer", "WidthsDiffer", "HeightsDiffer", "ColorsDiffer", "VarnishesDiffer", "FoilsDiffer", "HasVarnish", "HasFoil" ]
          },
          "gutter-property" : {
            "type" : "string",
            "description" : "Product property to compare when using the \"PropertiesDiffer\" strip gutter rule"
          }
        },
        "description" : "Settings used for vertical/horizontal/template strategies",
        "xml" : {
          "name" : "strip-options"
        }
      },
      "WebOptionsEntity" : {
        "type" : "object",
        "properties" : {
          "web-spanning" : {
            "type" : "string",
            "description" : "Web spanning to allow pages to span frames or items to seamlessly span frames",
            "enum" : [ "None", "Pages", "Items" ]
          },
          "allow-signature-frame-spanning" : {
            "type" : "boolean",
            "description" : "(Deprecated) Allow signatures to span frames"
          },
          "allow-transition-frames" : {
            "type" : "boolean",
            "description" : "Allow lanes to transition from one product to another within a frame",
            "xml" : {
              "name" : "allow-transition-frames"
            }
          },
          "allow-product-sequence-changes" : {
            "type" : "boolean",
            "description" : "Allow Product Sequence Changes"
          }
        },
        "description" : "Settings used for web-based plans",
        "xml" : {
          "name" : "web-options"
        }
      },
      "LayoutResultEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of result",
            "format" : "int32"
          },
          "timestamp" : {
            "type" : "number",
            "description" : "Time this result was generated as measured in seconds since the start of this run",
            "format" : "float"
          },
          "pending-estimations" : {
            "type" : "boolean",
            "description" : "Whether this result has one or more pending estimations that have not been performed and could lead to more accurate cost and time estimates"
          },
          "layout-type" : {
            "type" : "string",
            "description" : "Type of layout generated"
          },
          "sheet" : {
            "type" : "string",
            "description" : "Sheet size used in layout result"
          },
          "stock" : {
            "type" : "string",
            "description" : "Stock used in layout result"
          },
          "grade" : {
            "type" : "string",
            "description" : "Grade used in layout result"
          },
          "things" : {
            "type" : "array",
            "description" : "Things used to process this layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Things used to process this layout",
              "xml" : {
                "name" : "thing"
              }
            }
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Required run length of layout",
            "format" : "int32"
          },
          "press-minutes" : {
            "type" : "number",
            "description" : "Estimated press time in minutes",
            "format" : "float"
          },
          "cutting-time" : {
            "type" : "number",
            "description" : "Estimated cutting time in seconds",
            "format" : "float"
          },
          "total-cost" : {
            "type" : "number",
            "description" : "Total estimated cost for the layout including all material and device costs",
            "format" : "float"
          },
          "plate-cost" : {
            "type" : "number",
            "description" : "Estimated plate cost",
            "format" : "float"
          },
          "stock-cost" : {
            "type" : "number",
            "description" : "Estimated stock cost",
            "format" : "float"
          },
          "press-cost" : {
            "type" : "number",
            "description" : "Estimated press run cost",
            "format" : "float"
          },
          "cutting-cost" : {
            "type" : "number",
            "description" : "Estimated cutting cost",
            "format" : "float"
          },
          "waste" : {
            "type" : "number",
            "description" : "Total sheet waste percentage",
            "format" : "float"
          },
          "sheet-usage" : {
            "type" : "number",
            "description" : "Sheet usage percentage per sheet",
            "format" : "float"
          },
          "max-overrun" : {
            "type" : "number",
            "description" : "Maximum overrun percentage across products in the layout",
            "format" : "float"
          },
          "total-overruns" : {
            "type" : "integer",
            "description" : "Total number of overrun items",
            "format" : "int32"
          },
          "placed" : {
            "type" : "integer",
            "description" : "(Deprecated, use items.count) Total number of component items placed in layout",
            "format" : "int32"
          },
          "items" : {
            "$ref" : "#/components/schemas/ItemStatsEntity"
          },
          "cut-complexity" : {
            "type" : "integer",
            "description" : "Estimated cutting complexity of layout",
            "format" : "int32"
          },
          "templates" : {
            "type" : "array",
            "description" : "All templates being used in layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PlacedTemplateEntity"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          },
          "press" : {
            "type" : "string",
            "description" : "(Deprecated) Press used in layout result"
          }
        },
        "description" : "Imposition AI layout result",
        "xml" : {
          "name" : "layout-result"
        }
      },
      "EditLayoutSurfaceResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Edit layout surface action resource",
        "xml" : {
          "name" : "edit-layout-surface-resource"
        }
      },
      "EditLayoutResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Layout name, when specified edits current layout name"
          },
          "workstyle" : {
            "type" : "string",
            "description" : "Workstyle of layout, when specified changes workstyle",
            "enum" : [ "FlatWork", "Sheetwise", "Perfecting", "WorkAndTurn", "WorkAndTumble" ]
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Layout run length, when specified overrides current layout run length",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Edit layout action resource",
        "xml" : {
          "name" : "edit-layout-resource"
        }
      },
      "PlaceComponentResource" : {
        "required" : [ "component-index", "part-index", "product-name", "rotation", "x", "y" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "product-name" : {
            "type" : "string",
            "description" : "Name of product to place and repeat"
          },
          "component-index" : {
            "type" : "integer",
            "description" : "index of component",
            "format" : "int32"
          },
          "part-index" : {
            "type" : "integer",
            "description" : "index of part",
            "format" : "int32"
          },
          "x" : {
            "type" : "string",
            "description" : "Optional X position to place component in sheet"
          },
          "y" : {
            "type" : "string",
            "description" : "Optional Y position to place component in sheet."
          },
          "rotation" : {
            "type" : "number",
            "description" : "Rotation to apply to product",
            "format" : "double"
          }
        },
        "description" : "Place Component action resource",
        "xml" : {
          "name" : "place-component-resource"
        }
      },
      "PlaceDieTemplateResource" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of die template to place in layout"
          },
          "x" : {
            "type" : "string",
            "description" : "Optional X position to place layout in sheet"
          },
          "y" : {
            "type" : "string",
            "description" : "Optional Y position to place layout in sheet"
          }
        },
        "description" : "Place die template action resource",
        "xml" : {
          "name" : "place-die-template-resource"
        }
      },
      "PlateEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "width" : {
            "type" : "string",
            "description" : "Plate width"
          },
          "height" : {
            "type" : "string",
            "description" : "Plate height"
          },
          "punch-height" : {
            "type" : "string",
            "description" : "Punch height of plate"
          },
          "h-distortion" : {
            "type" : "number",
            "description" : "Horizontal distortion of plate",
            "format" : "double"
          },
          "v-distortion" : {
            "type" : "number",
            "description" : "Vertical distortion of plate",
            "format" : "double"
          },
          "price" : {
            "type" : "number",
            "description" : "Price of one plate",
            "format" : "double"
          }
        },
        "description" : "Plate library item",
        "xml" : {
          "name" : "plate"
        }
      },
      "MarginsEntity" : {
        "required" : [ "bottom", "left", "right", "top" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of margins, inside or outside",
            "enum" : [ "Inside", "Outside" ]
          },
          "left" : {
            "type" : "string",
            "description" : "Left margin"
          },
          "top" : {
            "type" : "string",
            "description" : "Top margin"
          },
          "right" : {
            "type" : "string",
            "description" : "Right margin"
          },
          "bottom" : {
            "type" : "string",
            "description" : "Bottom margin"
          },
          "linked" : {
            "type" : "boolean",
            "description" : "Specify whether all margins are the same"
          }
        },
        "description" : "Left, top, right and bottom scalar margins entity",
        "xml" : {
          "name" : "margins"
        }
      },
      "PressEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Press description"
          },
          "manufacturer" : {
            "type" : "string",
            "description" : "Press manufacturer"
          },
          "speed" : {
            "type" : "number",
            "description" : "Speed of press in speed units",
            "format" : "double"
          },
          "speed-units" : {
            "type" : "string",
            "description" : "Speed units",
            "enum" : [ "SheetsPerMinute", "SheetsPerHour", "FeetPerMinute", "MetersPerMinute", "FeetPerHour", "MetersPerHour", "SquareFeetPerHour", "SquareMetersPerHour" ]
          },
          "cost-per-hour" : {
            "type" : "number",
            "description" : "Cost to operate this press per hour",
            "format" : "double"
          },
          "make-ready-time" : {
            "type" : "number",
            "description" : "Per-color make ready time in minutes",
            "format" : "double"
          },
          "number-of-colors" : {
            "type" : "integer",
            "description" : "Maximum number of colors supported on this press",
            "format" : "int32"
          },
          "min-run-length" : {
            "type" : "integer",
            "description" : "Minimum run length allowed for layouts",
            "format" : "int32"
          },
          "back-single-pass" : {
            "type" : "boolean",
            "description" : "Whether this press supports single-pass double sided printing"
          },
          "workstyle" : {
            "type" : "string",
            "description" : "Workstyle of single-pass double sided printing unit",
            "enum" : [ "FlatWork", "Sheetwise", "Perfecting", "WorkAndTurn", "WorkAndTumble" ]
          },
          "back-number-of-colors" : {
            "type" : "integer",
            "description" : "Maximum number of colors supported on back side when doing single-pass double sided printing",
            "format" : "int32"
          },
          "back-speed-reduction" : {
            "type" : "number",
            "description" : "Percentage of speed reduction when doing single-pass double sided printing",
            "format" : "double"
          },
          "multi-pass" : {
            "type" : "boolean",
            "description" : "Whether to allow multiple passes through this press"
          },
          "min-sheet-width" : {
            "type" : "string",
            "description" : "Minumum sheet width supported by this press"
          },
          "max-sheet-width" : {
            "type" : "string",
            "description" : "Maximum sheet width supported by this press"
          },
          "min-sheet-height" : {
            "type" : "string",
            "description" : "Minumum sheet height supported by this press"
          },
          "max-sheet-height" : {
            "type" : "string",
            "description" : "Minumum sheet width supported by this press"
          },
          "min-stock-thickness" : {
            "type" : "string",
            "description" : "Minimum stock thickness supported by this press"
          },
          "max-stock-thickness" : {
            "type" : "string",
            "description" : "Maximum stock thickness supported by this press"
          },
          "min-stock-weight" : {
            "type" : "number",
            "description" : "Minimum stock weight supported by this press",
            "format" : "double"
          },
          "max-stock-weight" : {
            "type" : "number",
            "description" : "Maximum stock weight supported by this press",
            "format" : "double"
          },
          "weight-units" : {
            "type" : "string",
            "description" : "Units of min/max stock weight defined for this press.  Defaults to GSM when not specified.",
            "enum" : [ "GSM", "Lb" ]
          },
          "weight-type" : {
            "type" : "string",
            "description" : "Weight type for American standard stock weight system for min/max stock weight defined for this press.  Defaults to Text when not specified.",
            "enum" : [ "Text", "Book", "Bond", "Offset", "Cover", "Bristol", "Index", "Tag", "Card" ]
          },
          "sheet-handling" : {
            "type" : "string",
            "description" : "Sheet handling option for sheet orientation on this press.  Defaults to None when not specified.",
            "enum" : [ "None", "LongEdgeHorizontal", "LongEdgeVertical" ]
          },
          "image-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "content-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "gripper" : {
            "type" : "string",
            "description" : "Gripper distance from bottom of sheet"
          },
          "default-plate" : {
            "type" : "string",
            "description" : "Optional default plate to use when applying this press to a layout"
          }
        },
        "description" : "Press library item",
        "xml" : {
          "name" : "press"
        }
      },
      "ResizeSheetResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "width" : {
            "type" : "string",
            "description" : "New width of current layout sheet"
          },
          "height" : {
            "type" : "string",
            "description" : "New height of current layout sheet"
          }
        },
        "description" : "Resize layout sheet action resource",
        "xml" : {
          "name" : "resize-sheet-resource"
        }
      },
      "SetPlateResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of library item to use"
          }
        },
        "description" : "Set plate action resource",
        "xml" : {
          "name" : "set-plate-resource"
        }
      },
      "SetPressResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of library item to use"
          }
        },
        "description" : "Set press action resource",
        "xml" : {
          "name" : "set-press-resource"
        }
      },
      "SetSheetResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "stock" : {
            "type" : "string",
            "description" : "Name of sheet stock"
          },
          "grade" : {
            "type" : "string",
            "description" : "Name of sheet grade"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of sheet within stock to use"
          }
        },
        "description" : "Set sheet action resource",
        "xml" : {
          "name" : "set-sheet-resource"
        }
      },
      "SheetEntity" : {
        "required" : [ "dimension1", "dimension2", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "stock-id" : {
            "type" : "string",
            "description" : "ID of the stock of this sheet"
          },
          "grade-id" : {
            "type" : "string",
            "description" : "ID of the grade of this sheet"
          },
          "dimension1" : {
            "type" : "string",
            "description" : "First dimension of this sheet"
          },
          "dimension2" : {
            "type" : "string",
            "description" : "Second dimension of this sheet"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of this sheet when cost not defined from grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "description" : "Cost unit type of this sheet when not defined from grade",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "grain" : {
            "type" : "string",
            "description" : "The grain of this sheet.  Grain is inferred by dimension2 when not specified.",
            "enum" : [ "Long", "Short", "None" ]
          }
        },
        "description" : "Sheet library item",
        "xml" : {
          "name" : "sheet"
        }
      },
      "StepRepeatEntity" : {
        "required" : [ "horizontal-gap", "vertical-gap" ],
        "type" : "object",
        "properties" : {
          "rows" : {
            "type" : "integer",
            "description" : "Number of rows in step and repeat grid when vertical-fill is not set or is None",
            "format" : "int32"
          },
          "columns" : {
            "type" : "integer",
            "description" : "Number of columns in step and repeat grid when horizontal-fill is not set or is None",
            "format" : "int32"
          },
          "head-turn" : {
            "type" : "string",
            "description" : "Head turn rotation to apply on every other row and/or column",
            "enum" : [ "None", "Column", "Row", "ColumnRow" ]
          },
          "initial-rotation" : {
            "type" : "number",
            "description" : "Initial rotation to apply to product when building step and repeat grid",
            "format" : "double"
          },
          "horizontal-gap-type" : {
            "type" : "string",
            "description" : "Horizontal gap type defining how horizontal gap(s) are interpreted.  Default: Edge",
            "enum" : [ "Center", "Edge", "Smart" ]
          },
          "vertical-gap-type" : {
            "type" : "string",
            "description" : "Vertical gap type defining how vertical gap(s) are interpreted.  Default: Edge",
            "enum" : [ "Center", "Edge", "Smart" ]
          },
          "horizontal-gap" : {
            "type" : "string",
            "description" : "Horizontal gap scalar value"
          },
          "vertical-gap" : {
            "type" : "string",
            "description" : "Vertical gap scalar value"
          },
          "even-horizontal-gap" : {
            "type" : "string",
            "description" : "Optional even horizontal gap scalar value.  When set, horizontal-gap is used for odd horizontal gap spacing while this gap value is used for even rows"
          },
          "even-vertical-gap" : {
            "type" : "string",
            "description" : "Optional even vertical gap scalar value.  When set, vertical-gap is used for odd vertical gap spacing while this gap value is used for even rows"
          },
          "stagger" : {
            "type" : "string",
            "description" : "Type of stagger to apply to rows or columns.  If not specified no stagger is applied.",
            "enum" : [ "None", "Horizontal", "Vertical" ]
          },
          "stagger-amount" : {
            "type" : "string",
            "description" : "Stagger amount when stagger is not None"
          },
          "stagger-restart" : {
            "type" : "integer",
            "description" : "Number of rows or columns before stagger amount is restarted back to 0.  If not defined, stagger value continues to be applied to each subsequent row or column indefinitely.",
            "format" : "int32"
          },
          "horizontal-fill" : {
            "type" : "string",
            "description" : "Whether to automatically fill the sheet as much as possible in the horizontal direction.  By default horizontal-fill is off (None) in which case the columns field needs to be defined.",
            "enum" : [ "None", "Pack", "Expand", "Wrap" ]
          },
          "vertical-fill" : {
            "type" : "string",
            "description" : "Whether to automatically fill the sheet as much as possible in the vertical direction.  By default horizontal-fill is off (None) in which case the rows field needs to be defined.",
            "enum" : [ "None", "Pack", "Expand", "Wrap" ]
          },
          "sheet-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "bleed-offset" : {
            "type" : "string",
            "description" : "When set, a bleed offset is applied to each product in the step and repeat group and rectangular bleeds are automatically resolved.  If not set, product bleed masks are used."
          }
        },
        "description" : "Step and Repeat parameters",
        "xml" : {
          "name" : "step-repeat"
        }
      },
      "StepRepeatResource" : {
        "required" : [ "product-name", "settings" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "product-name" : {
            "type" : "string",
            "description" : "Name of product to step and repeat"
          },
          "x" : {
            "type" : "string",
            "description" : "Optional X position to place repeat group in sheet.  This value is ignored if an auto-fill option is defined in settings in horizontal direction."
          },
          "y" : {
            "type" : "string",
            "description" : "Optional Y position to place repeat group in sheet.  This value is ignored if an auto-fill option is defined in settings in vertical direction."
          },
          "settings" : {
            "$ref" : "#/components/schemas/StepRepeatEntity"
          }
        },
        "description" : "Step and Repeat action resource",
        "xml" : {
          "name" : "step-repeat-resource"
        }
      },
      "OptimizeResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "products" : {
            "type" : "array",
            "description" : "Names of products to include.  When not specified all products in the job are included",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of products to include.  When not specified all products in the job are included",
              "xml" : {
                "name" : "product"
              }
            }
          },
          "profiles" : {
            "type" : "array",
            "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
              "xml" : {
                "name" : "profile"
              }
            }
          },
          "profiles-inline" : {
            "type" : "array",
            "description" : "Optional inline fully defined profiles to use when running Imposition AI.",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
            }
          },
          "stop-minutes" : {
            "type" : "integer",
            "description" : "Number of minutes to allow this action to run before stopping.  Default is 60 minutes when not specified.",
            "format" : "int32"
          },
          "things" : {
            "type" : "array",
            "description" : "Names of things to use during Optimize",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of things to use during Optimize",
              "xml" : {
                "name" : "thing"
              }
            }
          },
          "sheets" : {
            "type" : "array",
            "description" : "Sheets to use during Optimize",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SheetRefEntity"
            }
          },
          "rolls" : {
            "type" : "array",
            "description" : "Rolls to use during Optimize",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SheetRefEntity"
            }
          },
          "templates" : {
            "type" : "array",
            "description" : "Names of templates to use during Optimize",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of templates to use during Optimize",
              "xml" : {
                "name" : "template"
              }
            }
          },
          "presses" : {
            "type" : "array",
            "description" : "(Deprecated) Names of presses to use during Optimize",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "(Deprecated) Names of presses to use during Optimize",
              "xml" : {
                "name" : "press"
              }
            }
          }
        },
        "description" : "Optimize tool settings Define the devices, sheets, rolls, templates, and profiles to use during Optimize",
        "xml" : {
          "name" : "optimize-resource"
        }
      },
      "SheetRefEntity" : {
        "type" : "object",
        "properties" : {
          "stock" : {
            "type" : "string",
            "description" : "Name of sheet stock"
          },
          "grade" : {
            "type" : "string",
            "description" : "Name of sheet grade"
          },
          "name" : {
            "type" : "string",
            "description" : "Name of sheet or roll within stock to use"
          }
        },
        "description" : "Reference to sheet or roll",
        "xml" : {
          "name" : "sheet-ref"
        }
      },
      "JobFilesEntity" : {
        "required" : [ "action", "files", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "ID of this job files entity"
          },
          "action" : {
            "type" : "string",
            "description" : "Action that was performed to create these file(s)"
          },
          "time" : {
            "type" : "string",
            "description" : "Time file(s) were created"
          },
          "files" : {
            "type" : "array",
            "description" : "Downloadable URIs of all files in this group",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Downloadable URIs of all files in this group",
              "xml" : {
                "name" : "file"
              }
            }
          }
        },
        "description" : "Grouping of files in a job that were created as a result of a single action",
        "xml" : {
          "name" : "job-files"
        }
      },
      "PlanResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "products" : {
            "type" : "array",
            "description" : "Names of products to include.  When not specified all products in the job are included",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of products to include.  When not specified all products in the job are included",
              "xml" : {
                "name" : "product"
              }
            }
          },
          "profiles" : {
            "type" : "array",
            "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
              "xml" : {
                "name" : "profile"
              }
            }
          },
          "profiles-inline" : {
            "type" : "array",
            "description" : "Optional inline fully defined profiles to use when running Imposition AI.",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
            }
          },
          "stop-minutes" : {
            "type" : "integer",
            "description" : "Number of minutes to allow this action to run before stopping.  Default is 60 minutes when not specified.",
            "format" : "int32"
          },
          "things" : {
            "type" : "array",
            "description" : "Names of things to use during Plan",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of things to use during Plan",
              "xml" : {
                "name" : "thing"
              }
            }
          },
          "sheets" : {
            "type" : "array",
            "description" : "Sheets to use during Plan",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SheetRefEntity"
            }
          },
          "rolls" : {
            "type" : "array",
            "description" : "Rolls to use during Plan",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SheetRefEntity"
            }
          },
          "templates" : {
            "type" : "array",
            "description" : "Names of templates to use during Plan",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of templates to use during Plan",
              "xml" : {
                "name" : "template"
              }
            }
          },
          "apply-result" : {
            "type" : "boolean",
            "description" : "Apply lowest cost Plan result automatically.  If not specified, no results are applied."
          },
          "presses" : {
            "type" : "array",
            "description" : "(Deprecated) Names of presses to use during Plan",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "(Deprecated) Names of presses to use during Plan",
              "xml" : {
                "name" : "press"
              }
            }
          }
        },
        "description" : "Plan tool settings including devices, sheets, rolls, and profiles to use during planning",
        "xml" : {
          "name" : "plan-resource"
        }
      },
      "PlanResultEntity" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "ID of result",
            "format" : "int32"
          },
          "timestamp" : {
            "type" : "number",
            "description" : "Time this result was generated as measured in seconds since the start of this run",
            "format" : "float"
          },
          "pending-estimations" : {
            "type" : "boolean",
            "description" : "Whether this result has one or more pending estimations that have not been performed and could lead to more accurate cost and time estimates"
          },
          "press-minutes" : {
            "type" : "number",
            "description" : "Total estimated press time in minutes",
            "format" : "float"
          },
          "cutting-time" : {
            "type" : "number",
            "description" : "Estimated total cutting time in seconds",
            "format" : "float"
          },
          "run-length" : {
            "type" : "integer",
            "description" : "Total run lengths across all layouts in this plan",
            "format" : "int32"
          },
          "roll-length" : {
            "type" : "string",
            "description" : "Total roll length of all roll-based layouts in this plan"
          },
          "total-cost" : {
            "type" : "number",
            "description" : "Total estimated cost for the job including all material and device costs",
            "format" : "float"
          },
          "plate-cost" : {
            "type" : "number",
            "description" : "Estimated total plate cost",
            "format" : "float"
          },
          "stock-cost" : {
            "type" : "number",
            "description" : "Estimated total stock cost",
            "format" : "float"
          },
          "press-cost" : {
            "type" : "number",
            "description" : "Estimated total press run cost",
            "format" : "float"
          },
          "cutting-cost" : {
            "type" : "number",
            "description" : "Estimated total cutting cost",
            "format" : "float"
          },
          "waste" : {
            "type" : "number",
            "description" : "Total sheet waste percentage",
            "format" : "float"
          },
          "sheet-usage" : {
            "type" : "number",
            "description" : "Sheet usage percentage per sheet",
            "format" : "float"
          },
          "total-underruns" : {
            "type" : "integer",
            "description" : "Total number of underrun items",
            "format" : "int32"
          },
          "total-overruns" : {
            "type" : "integer",
            "description" : "Total number of overrun items",
            "format" : "int32"
          },
          "layout-count" : {
            "type" : "integer",
            "description" : "Number of layouts in this plan result",
            "format" : "int32"
          },
          "layouts" : {
            "type" : "array",
            "description" : "Optional results for each layout",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/LayoutResultEntity"
            }
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          }
        },
        "description" : "Imposition AI Plan result",
        "xml" : {
          "name" : "plan-result"
        }
      },
      "PlanStatusEntity" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string",
            "description" : "Current state of the given tool in the job",
            "enum" : [ "NotStarted", "Running", "Stopping", "Stopped", "Finished", "Error" ]
          },
          "running-time" : {
            "type" : "number",
            "description" : "Number of seconds the given tool has been running or was last run",
            "format" : "float"
          },
          "errors" : {
            "type" : "array",
            "description" : "Any errors that have occurred during the current or last run of the given tool",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MessageEntity"
            }
          },
          "warnings" : {
            "type" : "array",
            "description" : "Any warnings that have occurred during the current or last run of the given tool",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MessageEntity"
            }
          },
          "results" : {
            "type" : "integer",
            "description" : "Number of results generated",
            "format" : "int32"
          },
          "lowest-cost" : {
            "type" : "number",
            "description" : "Lowest total cost across all plan results so far",
            "format" : "float"
          },
          "lowest-waste" : {
            "type" : "number",
            "description" : "Lowest overall waste across all plan results so far",
            "format" : "float"
          },
          "lowest-layouts" : {
            "type" : "integer",
            "description" : "Lowest number of layouts across all plan results so far",
            "format" : "int32"
          }
        },
        "description" : "Live stats on current or most recent plan run performed on the current job",
        "xml" : {
          "name" : "nesting-status"
        }
      },
      "PopulateResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "products" : {
            "type" : "array",
            "description" : "Names of products to include.  When not specified all products in the job are included",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of products to include.  When not specified all products in the job are included",
              "xml" : {
                "name" : "product"
              }
            }
          },
          "profiles" : {
            "type" : "array",
            "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional profiles to use when running Imposition AI.  The default profile is used when this field is not set",
              "xml" : {
                "name" : "profile"
              }
            }
          },
          "profiles-inline" : {
            "type" : "array",
            "description" : "Optional inline fully defined profiles to use when running Imposition AI.",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ImpositionAiProfileEntity"
            }
          },
          "stop-minutes" : {
            "type" : "integer",
            "description" : "Number of minutes to allow this action to run before stopping.  Default is 60 minutes when not specified.",
            "format" : "int32"
          }
        },
        "description" : "Populate action resource",
        "xml" : {
          "name" : "populate-resource"
        }
      },
      "AddProductEntity" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "type" : {
            "type" : "string",
            "description" : "Optional type of product: flat, tiled, bound, folded",
            "enum" : [ "Flat", "Tiled", "Folded", "Bound" ]
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "ordered" : {
            "type" : "integer",
            "description" : "Number of product ordered in the job",
            "format" : "int32"
          },
          "stock" : {
            "type" : "string",
            "description" : "Stock of product"
          },
          "grade" : {
            "type" : "string",
            "description" : "Grade of product stock"
          },
          "colors" : {
            "type" : "array",
            "description" : "Page colors for front side of flat products or all pages of bound and folded products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorEntity"
            }
          },
          "back-colors" : {
            "type" : "array",
            "description" : "Page back colors for back side of flat products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorEntity"
            }
          },
          "color-source" : {
            "type" : "string",
            "description" : "Setting to specify how toset up colors for each page",
            "enum" : [ "Artwork", "Specified" ]
          },
          "color-analysis" : {
            "type" : "string",
            "description" : "Mode to use when analyzing artwork colors when color source is set to Artwork",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "description" : "Color detection region to use when determining which colors are present in artwork during raster color analysis",
            "enum" : [ "Cut", "Bleed" ]
          },
          "grain" : {
            "type" : "string",
            "description" : "Grain direction of product",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "width" : {
            "type" : "string",
            "description" : "Width of product when creating a custom size product or the desired scaled width or scale percentage when creating the product die from a die design or artwork"
          },
          "height" : {
            "type" : "string",
            "description" : "Height of product when creating a custom size product or the desired scaled height or scale percentage when creating the product die from a die design or artwork"
          },
          "rotation" : {
            "type" : "string",
            "description" : "Rotation type to allow in product, defaults to Product settings defaults unless allowed-rotations is defined in which case 'Custom' rotation type is assumed",
            "enum" : [ "Any", "Orthogonal", "None", "Custom" ]
          },
          "allowed-rotations" : {
            "type" : "string",
            "description" : "Allowed rotations of product when rotation type is 'Custom'"
          },
          "templates" : {
            "type" : "array",
            "description" : "List of templates this product can be used with",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "List of templates this product can be used with",
              "xml" : {
                "name" : "template"
              }
            }
          },
          "scale-proportionally" : {
            "type" : "boolean",
            "description" : "Whether to scale proportionally when either width or height are not specified.  When false, only the dimension that is specified is scaled.  Defaults to false."
          },
          "artwork" : {
            "type" : "string",
            "description" : "Path to artwork file when creating product from artwork or snapping artwork into die"
          },
          "page" : {
            "type" : "integer",
            "description" : "Page of artwork to use, defaults to page 1 when not defined",
            "format" : "int32"
          },
          "back-artwork" : {
            "type" : "string",
            "description" : "Path to artwork file for back side of product when creating product from artwork or snapping artwork into die"
          },
          "back-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use for back side of product",
            "format" : "int32"
          },
          "dieshape-source" : {
            "type" : "string",
            "description" : "Source type to use when creating dieshape for product.  If not defined, cad-file die takes priority, followed by dieshape library name, then height and width fields, and finally artwork Trimbox or artwork path line mappings depending on whether product settings automatically take dieshape from line mappings",
            "enum" : [ "CAD", "ArtworkPaths", "ArtworkTrimbox", "CustomSize", "DieDesignLibrary", "PdfPlus" ]
          },
          "die-design" : {
            "type" : "string",
            "description" : "Path to die in Die Design Library when using library die design for 1-up die of the product"
          },
          "autosnap-ink" : {
            "type" : "string",
            "description" : "PDF ink color to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "back-autosnap-ink" : {
            "type" : "string",
            "description" : "PDF ink color to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "back-autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "shape-handling" : {
            "type" : "string",
            "description" : "Shape handling mode to use when finding closed path shapes from the dielines in the artwork.  'Multiple' mode will create a new product for each closed path shape detected in the artwork.",
            "enum" : [ "Largest", "Multiple" ]
          },
          "page-handling" : {
            "type" : "string",
            "description" : "Multi-page artwork handling options for flat and tiled products",
            "enum" : [ "OnePerFile", "OnePerPage", "OnePerTwoPages" ]
          },
          "front-to-back" : {
            "type" : "string",
            "description" : "Action to perform to copy or mirror artwork on the front side of the flat product to the back side",
            "enum" : [ "None", "Copy", "Mirror" ]
          },
          "cad-file" : {
            "type" : "string",
            "description" : "Path of CAD file to use when defining product based on 1-up design in a CAD file"
          },
          "cad-design" : {
            "type" : "string",
            "description" : "Design name of 1-up CAD design in the CAD file, defaults to first 1-up in the CAD file when not defined"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date"
          },
          "bleed-type" : {
            "type" : "string",
            "description" : "Product bleed type = [Margins, Contour, Cad, or None]",
            "enum" : [ "Margins", "Contour", "CAD", "None" ]
          },
          "bleed-margin" : {
            "type" : "string",
            "description" : "Scalar offset from die design to generate bleed"
          },
          "bleed-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "page-bleed" : {
            "type" : "string",
            "description" : "Bleed margins of individual pages in bound and folded products"
          },
          "spacing-type" : {
            "type" : "string",
            "description" : "Product spacing type = [Margins, Uniform, or Bleed]",
            "enum" : [ "Margins", "Uniform", "Bleed", "Tool" ]
          },
          "spacing-margin" : {
            "type" : "string",
            "description" : "Single scalar spacing offset when spacing type is Uniform"
          },
          "spacing-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "offcut-margins" : {
            "$ref" : "#/components/schemas/MarginsEntity"
          },
          "min-overruns" : {
            "type" : "string",
            "description" : "Minimum overrun percentage allowed for the product"
          },
          "max-overruns" : {
            "type" : "string",
            "description" : "Maximum overrun percentage allowed for the product"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          },
          "process-settings" : {
            "type" : "array",
            "description" : "List of process settings to use to control process-specific behavior",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProcessSettingEntity"
            }
          },
          "marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the front side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional product marks to apply to the front side of the product",
              "xml" : {
                "name" : "mark"
              }
            }
          },
          "back-marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the back side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Optional product marks to apply to the back side of the product",
              "xml" : {
                "name" : "mark"
              }
            }
          },
          "folding-patterns" : {
            "type" : "array",
            "description" : "Optional folding bound work",
            "items" : {
              "type" : "string",
              "description" : "Optional folding bound work",
              "xml" : {
                "name" : "folding-patterns"
              }
            }
          },
          "binding-method" : {
            "type" : "string",
            "description" : "Optional binding method for bound work ",
            "enum" : [ "PerfectBound", "SaddleStitch", "None" ]
          },
          "binding-edge" : {
            "type" : "string",
            "description" : "Page binding edge for bound work",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "jog-edge" : {
            "type" : "string",
            "description" : "Jog edge for bound work.  When set, this edge must be perpendicular to the binding edge.  Setting jog to Bottom for left- or right-bound work results in 'Foot to Foot' page orientation.",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "reading-order" : {
            "type" : "string",
            "description" : "Reading order of pages in bound work",
            "enum" : [ "Normal", "Calendar" ]
          },
          "pages" : {
            "type" : "integer",
            "description" : "Total number of pages field for bound and folded work",
            "format" : "int32"
          },
          "pages-per-section" : {
            "type" : "integer",
            "description" : "Number of pages per section for multi-section bound work",
            "format" : "int32"
          },
          "self-cover" : {
            "type" : "boolean",
            "description" : "Whether bound part includes cover or not"
          },
          "trim" : {
            "$ref" : "#/components/schemas/TrimEntity"
          },
          "n-up" : {
            "$ref" : "#/components/schemas/NUpEntity"
          },
          "creep" : {
            "$ref" : "#/components/schemas/CreepEntity"
          },
          "bundle-size" : {
            "type" : "integer",
            "description" : "Bundle size needed for product.  When set, Imposition AI tools will ensure layouts including this product will have run length multiples of this bundle size",
            "format" : "int32"
          },
          "max-bundle-splits" : {
            "type" : "integer",
            "description" : "Max Bundle Splits allowed when bundle size is set.  When set, this property controls whether a given full bundle can to be broken into smaller bundle sizes for optimization reasons with default value of 0 signifying no splitting allowed",
            "format" : "int32",
            "xml" : {
              "name" : "max-bundles-splits"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Optional custom properties to apply to the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PropertyEntity"
            }
          },
          "tiling" : {
            "$ref" : "#/components/schemas/tiling"
          },
          "front-inks" : {
            "type" : "array",
            "description" : "(Deprecated) Printing inks on front side of product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "(Deprecated) Printing inks on front side of product",
              "xml" : {
                "name" : "ink"
              }
            }
          },
          "back-inks" : {
            "type" : "array",
            "description" : "(Deprecated) Printing inks on back side of product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "(Deprecated) Printing inks on back side of product",
              "xml" : {
                "name" : "ink"
              }
            }
          },
          "cut-ink" : {
            "type" : "string",
            "description" : "(Deprecated) Spot ink color used to define cut lines in the artwork"
          },
          "crease-ink" : {
            "type" : "string",
            "description" : "(Deprecated) Spot ink color used to define crease lines in the artwork"
          },
          "bleed-ink" : {
            "type" : "string",
            "description" : "(Deprecated) Spot ink color used to define bleed lines in the artwork"
          },
          "cut-layer" : {
            "type" : "string",
            "description" : "(Deprecated) PDF layer name used to define cut lines in the artwork"
          },
          "crease-layer" : {
            "type" : "string",
            "description" : "(Deprecated) PDF layer name used to define crease lines in the artwork"
          },
          "bleed-layer" : {
            "type" : "string",
            "description" : "(Deprecated) PDF layer name used to define bleed lines in the artwork"
          }
        },
        "description" : "Add product parameters",
        "xml" : {
          "name" : "add-product"
        }
      },
      "CreepEntity" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Type of creep to apply to bound signatures",
            "enum" : [ "None", "Inward", "Outward", "Both", "Custom" ]
          },
          "transition" : {
            "type" : "string",
            "description" : "Percentage from the inner most signatures towards the spine when to change creep direction from inward to outward when using 'Custom' creep type"
          },
          "method" : {
            "type" : "string",
            "description" : "Creep method to use for performing creep on bound signatures",
            "enum" : [ "Offset", "Scale" ]
          },
          "calculation" : {
            "type" : "string",
            "description" : "Creep calculation mode to use to determine creep amount to apply",
            "enum" : [ "FromStock", "PerPage", "Total" ]
          },
          "amount" : {
            "type" : "string",
            "description" : "Amount of creep to apply which can be total or per-page amount based on the calculation mode"
          }
        },
        "description" : "Creep settings",
        "xml" : {
          "name" : "creep"
        }
      },
      "NUpEntity" : {
        "required" : [ "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "maximum" : 50,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of N-ups which can be a value of 1, 2, or 3 with 1 signifying normal non N-up repeated signatures",
            "format" : "int32"
          },
          "gap" : {
            "type" : "string",
            "description" : "Gap spacing to apply between N-up repeat pages"
          }
        },
        "description" : "N-up settings for bound part signatures",
        "xml" : {
          "name" : "n-up"
        }
      },
      "PageColorEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Color name"
          },
          "type" : {
            "type" : "string",
            "description" : "Color type",
            "enum" : [ "CMYK", "Lab", "RGB" ]
          },
          "values" : {
            "type" : "array",
            "description" : "Color values",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "number",
              "description" : "Color values",
              "format" : "double",
              "xml" : {
                "name" : "value"
              }
            }
          },
          "coverage" : {
            "type" : "number",
            "description" : "Color coverage in the page ranging from 0.0 to 100.0",
            "format" : "double"
          },
          "process" : {
            "type" : "string",
            "description" : "Process the color represents. Default is 'Printing'."
          }
        },
        "description" : "Page color for specifying colors in products",
        "xml" : {
          "name" : "page-color"
        }
      },
      "ProcessSettingEntity" : {
        "required" : [ "process" ],
        "type" : "object",
        "properties" : {
          "process" : {
            "type" : "string",
            "description" : "Name of process"
          },
          "mode" : {
            "type" : "string",
            "description" : "name of Mode to run the given process at"
          },
          "mode-value" : {
            "type" : "number",
            "description" : "Specific mode value to run the given process at",
            "format" : "double"
          },
          "things" : {
            "type" : "array",
            "description" : "List of things this process can use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "List of things this process can use",
              "xml" : {
                "name" : "thing"
              }
            }
          },
          "process-types" : {
            "type" : "array",
            "description" : "List of process types this product can use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "List of process types this product can use",
              "xml" : {
                "name" : "process-type"
              }
            }
          }
        },
        "description" : "Process settings",
        "xml" : {
          "name" : "process-settings"
        }
      },
      "TrimEntity" : {
        "type" : "object",
        "properties" : {
          "spine-trim" : {
            "type" : "string",
            "description" : "Spine trim amount in bound signatures"
          },
          "jog-trim" : {
            "type" : "string",
            "description" : "Jog trim amount in bound signatures"
          },
          "face-trim" : {
            "type" : "string",
            "description" : "Face trim amount in bound signatures"
          },
          "non-jog-trim" : {
            "type" : "string",
            "description" : "Non-jog trim amount in bound signatures"
          },
          "lip-type" : {
            "type" : "string",
            "description" : "Lip type for determining where lip gets added to bound signatures",
            "enum" : [ "Auto", "Front", "Back" ]
          },
          "lip" : {
            "type" : "string",
            "description" : "Lip amount to add to bound signatures"
          }
        },
        "description" : "Trim margin settings for bound part signatures",
        "xml" : {
          "name" : "trim"
        }
      },
      "ImportProductCsvResource" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of file name"
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of CSV import preset to use"
          },
          "base-folder" : {
            "type" : "string",
            "description" : "Optional base folder to use for relative paths"
          }
        },
        "description" : "Import product CSV action resource",
        "xml" : {
          "name" : "import-product-csv-resource"
        }
      },
      "ImageTracingResource" : {
        "required" : [ "tool-type" ],
        "type" : "object",
        "properties" : {
          "tool-type" : {
            "type" : "string",
            "description" : "Cutting tool type to use for the generated cut tool path"
          },
          "quality" : {
            "type" : "number",
            "description" : "Quality of the raster image to use for generating the cut tool path.  A value of 100% will rasterize the image at full size up to a limit of 10 megapixels.  Lower values will scale the image down for faster processing and in some case preferred results as less detail is used for tracing.",
            "format" : "double"
          },
          "tolerance" : {
            "type" : "number",
            "description" : "Amount of color difference to allow before adjacent colors are considered different.  A value of 0% means no tolerance in color differences is allowed while 100% is the maximum allowed tolerance in color differences.",
            "format" : "double"
          },
          "blur-radius" : {
            "type" : "number",
            "description" : "The amount of blurring to apply to edges that are encountered during edge detection.  A higher blur radius means more blurring is applied during edge detection which can lead to less jagged paths.",
            "format" : "double"
          },
          "simplify" : {
            "type" : "number",
            "description" : "The amount of simplification to apply to the generated path.  Simplify works by removing points on the path that are within a certain tolerance.  A value of 0% disables path simplification while a value of 100% will use the highest allowed tolerance when removing points.",
            "format" : "double"
          },
          "smoothing" : {
            "type" : "number",
            "description" : "Smoothing converts individual points on the generated path to Bezier curves to produce smoother paths.  A value of 0% disables path smoothing while a value of 100% will perform the most aggressive path curve smoothing.",
            "format" : "double"
          },
          "offset" : {
            "type" : "string",
            "description" : "Additional offset distance to expand the generated path."
          },
          "idref" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Arguments used to control image tracing behavior",
        "xml" : {
          "name" : "image-tracing-resource"
        }
      },
      "ApplyMarkResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of library item to use"
          },
          "side" : {
            "type" : "string",
            "description" : "Which side to apply to mark to",
            "enum" : [ "Front", "Back" ]
          }
        },
        "description" : "Apply mark action resource",
        "xml" : {
          "name" : "apply-mark-resource"
        }
      },
      "AutosnapArtworkEntity" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "Local path of artwork file"
          },
          "front-page" : {
            "type" : "integer",
            "description" : "Page number of front artwork.  When not specified defaults to page 1 unless back page is defined in which case only back side of die is snapped",
            "format" : "int32"
          },
          "back-page" : {
            "type" : "integer",
            "description" : "Page number of back artwork.  Default: none",
            "format" : "int32"
          },
          "cut-ink" : {
            "type" : "string",
            "description" : "Name if spot cut line ink.  Ink automatically detected when not specified"
          }
        },
        "description" : "Information describing artwork being autosnapped",
        "xml" : {
          "name" : "autosnap-artwork"
        }
      },
      "SaveJobResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          },
          "embed-artwork" : {
            "type" : "boolean",
            "description" : "Whether or not to embed artwork files in the saved job, defaults to current job preferences"
          }
        },
        "description" : "Arguments used to control job save behavior",
        "xml" : {
          "name" : "save-job-resource"
        }
      },
      "SaveJobTemplateResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Full path to store output file(s).  When not set, the output file(s) will be stored on the server and download link(s) will be provided in the response."
          }
        },
        "description" : "Arguments used to control job template save behavior",
        "xml" : {
          "name" : "save-job-template-resource"
        }
      },
      "RunScriptResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Name of script in Scripts library including folder name(s)"
          },
          "inputs" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "description" : "Run script action resource (Tech Preview)",
        "xml" : {
          "name" : "run-script-resource"
        }
      },
      "AutosnapProductDiesEntity" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "Local path of artwork file"
          },
          "front-page" : {
            "type" : "integer",
            "description" : "Page number of front artwork.  When not specified defaults to page 1 unless back page is defined in which case only back side of die is snapped",
            "format" : "int32"
          },
          "back-page" : {
            "type" : "integer",
            "description" : "Page number of back artwork.  Default: none",
            "format" : "int32"
          },
          "cut-ink" : {
            "type" : "string",
            "description" : "Name if spot cut line ink.  Ink automatically detected when not specified"
          },
          "products" : {
            "type" : "array",
            "description" : "Names of products to snap artwork into",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "string",
              "description" : "Names of products to snap artwork into",
              "xml" : {
                "name" : "product"
              }
            }
          },
          "dies" : {
            "type" : "array",
            "description" : "Current layout dies to snap artwork into",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/DieEntity"
            }
          }
        },
        "description" : "Lists of products and/or specific layout dies to snap artwork into",
        "xml" : {
          "name" : "autosnap-product-dies"
        }
      },
      "AutosnapResource" : {
        "type" : "object",
        "properties" : {
          "idref" : {
            "type" : "integer",
            "description" : "ID of action resource is being applied to (Hot Folders only)",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          },
          "artworks" : {
            "type" : "array",
            "description" : "List of artworks and autosnap targets",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/AutosnapProductDiesEntity"
            }
          }
        },
        "description" : "Autosnap artwork action resource",
        "xml" : {
          "name" : "autosnap-resource"
        }
      },
      "DieEntity" : {
        "required" : [ "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string",
            "description" : "Die number in layout",
            "xml" : {
              "attribute" : true
            }
          },
          "layout" : {
            "type" : "integer",
            "description" : "Layout number. Default: 1",
            "format" : "int32",
            "xml" : {
              "attribute" : true
            }
          }
        },
        "description" : "Single die position in a layout",
        "xml" : {
          "name" : "die"
        }
      },
      "referenceDie-design" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "repeat-template-settings" : {
        "required" : [ "column-space", "columns", "name", "row-space", "rows" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the repeat template"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/referenceDie-design"
          },
          "product" : {
            "type" : "string",
            "description" : "Name of the product in project to use for the die design"
          },
          "rows" : {
            "type" : "integer",
            "description" : "Rows",
            "format" : "int32"
          },
          "columns" : {
            "type" : "integer",
            "description" : "Columns",
            "format" : "int32"
          },
          "row-space" : {
            "type" : "string",
            "description" : "Row space"
          },
          "column-space" : {
            "type" : "string",
            "description" : "Column space"
          },
          "rotation" : {
            "type" : "number",
            "description" : "Rotation",
            "format" : "double"
          }
        },
        "description" : "Repeat template settings",
        "xml" : {
          "name" : "repeat-template-settings"
        }
      },
      "Asset" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Directly specified asset"
      },
      "FoldingPatternRef" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Folding patterns to use",
        "xml" : {
          "name" : "reference"
        }
      },
      "MarkAssetRef" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Optional product marks to apply to the back side of the product",
        "xml" : {
          "name" : "reference"
        }
      },
      "PageColorResource" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Color name"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CMYK", "Lab", "RGB" ]
          },
          "coverage" : {
            "type" : "number",
            "description" : "Color coverage",
            "format" : "double"
          },
          "process" : {
            "$ref" : "#/components/schemas/process"
          },
          "values" : {
            "type" : "array",
            "description" : "Color values",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "number",
              "description" : "Color values",
              "format" : "double",
              "xml" : {
                "name" : "value"
              }
            }
          }
        },
        "description" : "Page back colors for back side of flat products"
      },
      "ProcessSettingResource" : {
        "required" : [ "process" ],
        "type" : "object",
        "properties" : {
          "process-types" : {
            "type" : "array",
            "description" : "Process setting types",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/referenceProcess-type"
            }
          },
          "mode-value" : {
            "type" : "number",
            "description" : "Process setting mode value",
            "format" : "double"
          },
          "things" : {
            "type" : "array",
            "description" : "Process setting things",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/referenceThing"
            }
          },
          "process" : {
            "$ref" : "#/components/schemas/referenceProcess"
          },
          "mode" : {
            "$ref" : "#/components/schemas/referenceMode"
          }
        },
        "description" : "Process settings"
      },
      "bleed" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "margin" : {
            "type" : "string",
            "description" : "Single margin setting"
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Margins", "Contour", "CAD", "None" ]
          }
        },
        "description" : "Bleed settings",
        "xml" : {
          "name" : "bleed"
        }
      },
      "create-bound-product-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of this product that needs to be produced",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the front side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "back-marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the back side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "size" : {
            "$ref" : "#/components/schemas/size"
          },
          "artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file when creating product from artwork or snapping artwork into die"
          },
          "artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use, defaults to page 1 when not defined",
            "format" : "int32"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "color-source" : {
            "type" : "string",
            "enum" : [ "Artwork", "Specified" ]
          },
          "color-analysis" : {
            "type" : "string",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "enum" : [ "Cut", "Bleed" ]
          },
          "colors" : {
            "type" : "array",
            "description" : "Page colors for front side of flat products or all pages of bound and folded products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProcessSettingResource"
            }
          },
          "folding-patterns" : {
            "type" : "array",
            "description" : "Folding patterns to use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/FoldingPatternRef"
            }
          },
          "binding-method" : {
            "type" : "string",
            "enum" : [ "PerfectBound", "SaddleStitch", "None" ]
          },
          "pages" : {
            "type" : "integer",
            "description" : "Total number of pages field for bound and folded work",
            "format" : "int32"
          },
          "pages-per-section" : {
            "type" : "integer",
            "description" : "Number of pages per section for multi-section bound work",
            "format" : "int32"
          },
          "binding-edge" : {
            "type" : "string",
            "description" : "Page binding edge for bound work",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "jog-edge" : {
            "type" : "string",
            "description" : "Jog edge for bound work.  When set, this edge must be perpendicular to the binding edge.  Setting jog to Bottom for left- or right-bound work results in 'Foot to Foot' page orientation.",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "reading-order" : {
            "type" : "string",
            "description" : "Reading order of pages",
            "enum" : [ "Normal", "Calendar" ]
          },
          "self-cover" : {
            "type" : "boolean",
            "description" : "Whether bound part includes cover or not"
          },
          "trim" : {
            "$ref" : "#/components/schemas/trim"
          },
          "creep" : {
            "$ref" : "#/components/schemas/creep"
          }
        },
        "description" : "Create bound product resource",
        "xml" : {
          "name" : "create-bound-product-resource"
        }
      },
      "referenceMode" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "referenceProcess" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "referenceProcess-type" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "referenceThing" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          }
        },
        "description" : "Library reference",
        "xml" : {
          "name" : "reference"
        }
      },
      "resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          },
          "asset" : {
            "$ref" : "#/components/schemas/Asset"
          }
        },
        "description" : "Library resource",
        "xml" : {
          "name" : "resource"
        }
      },
      "create-flat-product-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of this product that needs to be produced",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the front side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "back-marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the back side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "size" : {
            "$ref" : "#/components/schemas/size"
          },
          "artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file when creating product from artwork or snapping artwork into die"
          },
          "artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use, defaults to page 1 when not defined",
            "format" : "int32"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "color-source" : {
            "type" : "string",
            "enum" : [ "Artwork", "Specified" ]
          },
          "color-analysis" : {
            "type" : "string",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "enum" : [ "Cut", "Bleed" ]
          },
          "colors" : {
            "type" : "array",
            "description" : "Page colors for front side of flat products or all pages of bound and folded products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProcessSettingResource"
            }
          },
          "page-handling" : {
            "type" : "string",
            "enum" : [ "OnePerFile", "OnePerPage", "OnePerTwoPages" ]
          },
          "front-to-back" : {
            "type" : "string",
            "enum" : [ "None", "Copy", "Mirror" ]
          },
          "die-design-source" : {
            "type" : "string",
            "enum" : [ "CAD", "ArtworkPaths", "ArtworkTrimbox", "CustomSize", "DieDesignLibrary", "PdfPlus" ]
          },
          "scale-proportionally" : {
            "type" : "boolean",
            "description" : "Whether to scale proportionally when either width or height are not specified.  When false, only the dimension that is specified is scaled.  Defaults to false."
          },
          "back-artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file for back side of product when creating product from artwork or snapping artwork into die"
          },
          "back-artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use for back side of product",
            "format" : "int32"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/resource"
          },
          "cad-file" : {
            "type" : "string",
            "description" : "Path of CAD file to use when defining product based on 1-up design in a CAD file"
          },
          "cad-design" : {
            "type" : "string",
            "description" : "Design name of 1-up CAD design in the CAD file, defaults to first 1-up in the CAD file when not defined"
          },
          "die-import-preset" : {
            "$ref" : "#/components/schemas/resource"
          },
          "autosnap-color" : {
            "type" : "string",
            "description" : "PDF color to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "back-autosnap-color" : {
            "type" : "string",
            "description" : "PDF color to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "back-autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "back-colors" : {
            "type" : "array",
            "description" : "Page back colors for back side of flat products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "shape-handling" : {
            "type" : "string",
            "enum" : [ "Largest", "Multiple" ]
          },
          "bundle-size" : {
            "type" : "integer",
            "description" : "Bundle size needed for product.  When set, Imposition AI tools will ensure layouts including this product will have run length multiples of this bundle size",
            "format" : "int32"
          },
          "max-bundle-splits" : {
            "type" : "integer",
            "description" : "Max Bundle Splits allowed when bundle size is set.  When set, this property controls whether a given full bundle can to be broken into smaller bundle sizes for optimization reasons with default value of 0 signifying no splitting allowed",
            "format" : "int32",
            "xml" : {
              "name" : "max-bundles-splits"
            }
          },
          "templates" : {
            "$ref" : "#/components/schemas/reference"
          }
        },
        "description" : "Create flat product resource",
        "xml" : {
          "name" : "create-flat-product-resource"
        }
      },
      "create-folded-product-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of this product that needs to be produced",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the front side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "back-marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the back side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "size" : {
            "$ref" : "#/components/schemas/size"
          },
          "artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file when creating product from artwork or snapping artwork into die"
          },
          "artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use, defaults to page 1 when not defined",
            "format" : "int32"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "color-source" : {
            "type" : "string",
            "enum" : [ "Artwork", "Specified" ]
          },
          "color-analysis" : {
            "type" : "string",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "enum" : [ "Cut", "Bleed" ]
          },
          "colors" : {
            "type" : "array",
            "description" : "Page colors for front side of flat products or all pages of bound and folded products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProcessSettingResource"
            }
          },
          "folding-patterns" : {
            "type" : "array",
            "description" : "Folding patterns to use",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/FoldingPatternRef"
            }
          }
        },
        "description" : "Create folded product resource",
        "xml" : {
          "name" : "create-folded-product-resource"
        }
      },
      "create-tiled-product-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of this product that needs to be produced",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the front side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "back-marks" : {
            "type" : "array",
            "description" : "Optional product marks to apply to the back side of the product",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/MarkAssetRef"
            }
          },
          "size" : {
            "$ref" : "#/components/schemas/size"
          },
          "artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file when creating product from artwork or snapping artwork into die"
          },
          "artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use, defaults to page 1 when not defined",
            "format" : "int32"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "color-source" : {
            "type" : "string",
            "enum" : [ "Artwork", "Specified" ]
          },
          "color-analysis" : {
            "type" : "string",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "enum" : [ "Cut", "Bleed" ]
          },
          "colors" : {
            "type" : "array",
            "description" : "Page colors for front side of flat products or all pages of bound and folded products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ProcessSettingResource"
            }
          },
          "page-handling" : {
            "type" : "string",
            "enum" : [ "OnePerFile", "OnePerPage", "OnePerTwoPages" ]
          },
          "front-to-back" : {
            "type" : "string",
            "enum" : [ "None", "Copy", "Mirror" ]
          },
          "die-design-source" : {
            "type" : "string",
            "enum" : [ "CAD", "ArtworkPaths", "ArtworkTrimbox", "CustomSize", "DieDesignLibrary", "PdfPlus" ]
          },
          "scale-proportionally" : {
            "type" : "boolean",
            "description" : "Whether to scale proportionally when either width or height are not specified.  When false, only the dimension that is specified is scaled.  Defaults to false."
          },
          "back-artwork-file" : {
            "type" : "string",
            "description" : "Path to artwork file for back side of product when creating product from artwork or snapping artwork into die"
          },
          "back-artwork-page" : {
            "type" : "integer",
            "description" : "Page of artwork to use for back side of product",
            "format" : "int32"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/resource"
          },
          "cad-file" : {
            "type" : "string",
            "description" : "Path of CAD file to use when defining product based on 1-up design in a CAD file"
          },
          "cad-design" : {
            "type" : "string",
            "description" : "Design name of 1-up CAD design in the CAD file, defaults to first 1-up in the CAD file when not defined"
          },
          "die-import-preset" : {
            "$ref" : "#/components/schemas/resource"
          },
          "autosnap-color" : {
            "type" : "string",
            "description" : "PDF color to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the front side of the product"
          },
          "back-autosnap-color" : {
            "type" : "string",
            "description" : "PDF color to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "back-autosnap-layer" : {
            "type" : "string",
            "description" : "PDF layer to use for autosnapping artwork into 1-up die on the back side of the product"
          },
          "back-colors" : {
            "type" : "array",
            "description" : "Page back colors for back side of flat products",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/PageColorResource"
            }
          },
          "tiling" : {
            "$ref" : "#/components/schemas/resource"
          }
        },
        "description" : "Create tiled product resource",
        "xml" : {
          "name" : "create-tiled-product-resource"
        }
      },
      "edit-bound-part-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "page-size" : {
            "$ref" : "#/components/schemas/resource"
          },
          "binding-method" : {
            "type" : "string",
            "enum" : [ "PerfectBound", "SaddleStitch", "None" ]
          },
          "binding-edge" : {
            "type" : "string",
            "description" : "Binding edge of this part",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "jog-edge" : {
            "type" : "string",
            "description" : "Jog edge of this part",
            "enum" : [ "Top", "Bottom", "Right", "Left" ]
          },
          "reading-order" : {
            "type" : "string",
            "description" : "Reading order of this part",
            "enum" : [ "Normal", "Calendar" ]
          },
          "self-cover" : {
            "type" : "boolean",
            "description" : "Whether this part has a self cover or not"
          },
          "trim" : {
            "$ref" : "#/components/schemas/trim"
          },
          "n-up" : {
            "$ref" : "#/components/schemas/n-up"
          },
          "creep" : {
            "$ref" : "#/components/schemas/creep"
          }
        },
        "description" : "Edit bound part resource",
        "xml" : {
          "name" : "edit-bound-part-resource"
        }
      },
      "n-up" : {
        "required" : [ "gap", "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "integer",
            "description" : "N-up number",
            "format" : "int32"
          },
          "gap" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "N-up settings",
        "xml" : {
          "name" : "n-up"
        }
      },
      "edit-section-resource" : {
        "type" : "object",
        "description" : "Edit section resource",
        "xml" : {
          "name" : "edit-section-resource"
        }
      },
      "AddSignaturesResource" : {
        "required" : [ "pattern" ],
        "type" : "object",
        "properties" : {
          "index" : {
            "type" : "integer",
            "description" : "Index to insert new signatures at. Indexes start from 1. If this is null or out of range, signatures will be added to the end",
            "format" : "int32"
          },
          "pattern" : {
            "$ref" : "#/components/schemas/reference"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of signatures to add",
            "format" : "int32"
          }
        }
      },
      "edit-product-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "Unique name of the product"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of this product that needs to be produced",
            "format" : "int32"
          },
          "due-date" : {
            "type" : "string",
            "description" : "Product due date",
            "format" : "date-time"
          },
          "group" : {
            "type" : "string",
            "description" : "Optional product group used in Imposition AI"
          },
          "priority" : {
            "type" : "integer",
            "description" : "Optional priority of product starting from 1 as highest priority",
            "format" : "int32"
          },
          "overruns" : {
            "$ref" : "#/components/schemas/scalar-range"
          },
          "color" : {
            "type" : "string",
            "description" : "Product color specified as RGB or ARGB hex value with optional leading hex ('#') symbol"
          },
          "description" : {
            "type" : "string",
            "description" : "Optional product description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Optional notes to associate with product"
          }
        },
        "description" : "Edit product resource",
        "xml" : {
          "name" : "edit-product-resource"
        }
      },
      "edit-flat-resource" : {
        "required" : [ "spacing" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "x-scale" : {
            "type" : "number",
            "description" : "Component x-scale",
            "format" : "double"
          },
          "y-scale" : {
            "type" : "number",
            "description" : "Component y-scale",
            "format" : "double"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/resource"
          },
          "bundle-size" : {
            "type" : "integer",
            "description" : "Bundle size",
            "format" : "int32"
          },
          "max-bundle-splits" : {
            "type" : "integer",
            "description" : "Max Bundle Splits",
            "format" : "int32"
          }
        },
        "description" : "Edit flat resource",
        "xml" : {
          "name" : "edit-flat-resource"
        }
      },
      "edit-flat-part-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "templates" : {
            "$ref" : "#/components/schemas/reference"
          }
        },
        "description" : "Edit flat part resource",
        "xml" : {
          "name" : "edit-flat-part-resource"
        }
      },
      "edit-folded-part-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "page-size" : {
            "$ref" : "#/components/schemas/resource"
          }
        },
        "description" : "Edit folded part resource",
        "xml" : {
          "name" : "edit-folded-part-resource"
        }
      },
      "componentObjectObjectObject" : {
        "required" : [ "die-design", "name", "spacing", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "layouts" : {
            "$ref" : "#/components/schemas/layouts"
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Component - base object for product 2.0 component model",
        "xml" : {
          "name" : "component"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Flat" : "#/components/schemas/flat",
            "Bound" : "#/components/schemas/bound-signature",
            "Folded" : "#/components/schemas/folded-signature",
            "Tiled" : "#/components/schemas/tile-flat"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/flat"
        }, {
          "$ref" : "#/components/schemas/bound-signature"
        }, {
          "$ref" : "#/components/schemas/folded-signature"
        }, {
          "$ref" : "#/components/schemas/tile-flat"
        } ]
      },
      "component" : {
        "required" : [ "die-design", "name", "spacing", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/die-design"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "layouts" : {
            "$ref" : "#/components/schemas/layouts"
          },
          "placed" : {
            "type" : "integer",
            "description" : "Total placed count of this component across all layouts in the project",
            "format" : "int32"
          },
          "overrun" : {
            "type" : "integer",
            "description" : "Total number of overruns above ordered quantity",
            "format" : "int32"
          },
          "fulfilled" : {
            "type" : "boolean",
            "description" : "Whether order quantity of this component has been fulfilled"
          },
          "total" : {
            "type" : "integer",
            "description" : "Total number of copies of this component being produced in the project",
            "format" : "int32"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Component - base object for product 2.0 component model",
        "xml" : {
          "name" : "component"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Flat" : "#/components/schemas/flat",
            "Bound" : "#/components/schemas/bound-signature",
            "Folded" : "#/components/schemas/folded-signature",
            "Tiled" : "#/components/schemas/tile-flat"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/flat"
        }, {
          "$ref" : "#/components/schemas/bound-signature"
        }, {
          "$ref" : "#/components/schemas/folded-signature"
        }, {
          "$ref" : "#/components/schemas/tile-flat"
        } ]
      },
      "edit-component-resource" : {
        "required" : [ "spacing" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "x-scale" : {
            "type" : "number",
            "description" : "Component x-scale",
            "format" : "double"
          },
          "y-scale" : {
            "type" : "number",
            "description" : "Component y-scale",
            "format" : "double"
          }
        },
        "description" : "Edit component resource",
        "xml" : {
          "name" : "edit-component-resource"
        }
      },
      "props-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Props resource",
        "xml" : {
          "name" : "props-resource"
        }
      },
      "part" : {
        "required" : [ "grain", "name", "pages", "process-settings", "rotation", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "pages" : {
            "type" : "array",
            "description" : "Part pages",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/page"
            }
          },
          "process-settings" : {
            "type" : "array",
            "description" : "Part process settings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process-setting"
            }
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Flat", "Bound", "Folded", "Tiled" ]
          },
          "material" : {
            "$ref" : "#/components/schemas/material"
          },
          "processes" : {
            "type" : "array",
            "description" : "Part processes",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/process"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Part - base object for product 2.0 part model",
        "xml" : {
          "name" : "part"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "Flat" : "#/components/schemas/flat-part",
            "Bound" : "#/components/schemas/bound-part",
            "Folded" : "#/components/schemas/folded-part",
            "Tiled" : "#/components/schemas/tiled-part"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/flat-part"
        }, {
          "$ref" : "#/components/schemas/bound-part"
        }, {
          "$ref" : "#/components/schemas/folded-part"
        }, {
          "$ref" : "#/components/schemas/tiled-part"
        } ]
      },
      "CreatePagesResource" : {
        "type" : "object",
        "properties" : {
          "size" : {
            "$ref" : "#/components/schemas/resource"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/margins"
          },
          "count" : {
            "type" : "integer",
            "description" : "Number of pages to add",
            "format" : "int32"
          }
        }
      },
      "path-resource" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "Path to file"
          }
        },
        "description" : "Path resource",
        "xml" : {
          "name" : "path-resource"
        }
      },
      "page-color" : {
        "required" : [ "name", "process" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Color (spot) name"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "CMYK", "Lab", "RGB" ]
          },
          "values" : {
            "type" : "array",
            "description" : "Color values",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "type" : "number",
              "description" : "Color values",
              "format" : "double",
              "xml" : {
                "name" : "value"
              }
            }
          },
          "coverage" : {
            "type" : "number",
            "description" : "Color coverage",
            "format" : "double"
          },
          "process" : {
            "$ref" : "#/components/schemas/process"
          }
        },
        "description" : "Page color object",
        "xml" : {
          "name" : "page-color"
        }
      },
      "edit-page-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "color-analysis" : {
            "type" : "string",
            "enum" : [ "Fast", "Raster" ]
          },
          "color-detection" : {
            "type" : "string",
            "enum" : [ "Cut", "Bleed" ]
          },
          "color-source" : {
            "type" : "string",
            "enum" : [ "Artwork", "Specified" ]
          },
          "mark-color-source" : {
            "type" : "string",
            "enum" : [ "PageColors", "ArtworkColors" ]
          },
          "autosnap" : {
            "type" : "boolean",
            "description" : "Autosnap"
          },
          "autosnap-color" : {
            "type" : "string",
            "description" : "Autosnap Color"
          },
          "autosnap-layer" : {
            "type" : "string",
            "description" : "Autosnap Layer"
          },
          "size" : {
            "$ref" : "#/components/schemas/resource"
          },
          "position" : {
            "$ref" : "#/components/schemas/point"
          },
          "rotation" : {
            "type" : "number",
            "description" : "Rotation",
            "format" : "double"
          },
          "x-scale" : {
            "type" : "number",
            "description" : "X-Scale",
            "format" : "double"
          },
          "y-scale" : {
            "type" : "number",
            "description" : "Y-Scale",
            "format" : "double"
          },
          "visible" : {
            "type" : "boolean",
            "description" : "Visible"
          },
          "locked" : {
            "type" : "boolean",
            "description" : "Locked"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/margins"
          },
          "creep" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Edit page resource",
        "xml" : {
          "name" : "edit-page-resource"
        }
      },
      "point" : {
        "required" : [ "x", "y" ],
        "type" : "object",
        "properties" : {
          "x" : {
            "type" : "number",
            "description" : "X coordinate",
            "format" : "double"
          },
          "y" : {
            "type" : "number",
            "description" : "Y coordinate",
            "format" : "double"
          }
        },
        "description" : "Point (x,y coordinates)",
        "xml" : {
          "name" : "point"
        }
      },
      "edit-page-file" : {
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string",
            "description" : "File path"
          },
          "number" : {
            "type" : "integer",
            "description" : "File page number",
            "format" : "int32"
          }
        },
        "description" : "Edit page file",
        "xml" : {
          "name" : "edit-page-file"
        }
      },
      "page-layer" : {
        "type" : "object",
        "properties" : {
          "visible" : {
            "type" : "boolean",
            "description" : "Visible"
          },
          "name" : {
            "type" : "string",
            "description" : "Layer name"
          },
          "language" : {
            "type" : "string",
            "description" : "Language of layer"
          },
          "locked" : {
            "type" : "boolean",
            "description" : "Locked state of layer"
          }
        },
        "description" : "Page Layer",
        "xml" : {
          "name" : "page-layer"
        }
      },
      "edit-page-layer" : {
        "type" : "object",
        "properties" : {
          "visible" : {
            "type" : "boolean",
            "description" : "Layer visibility"
          }
        },
        "description" : "Edit page layer",
        "xml" : {
          "name" : "edit-page-layer"
        }
      },
      "edit-tiled-part-resource" : {
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "stock" : {
            "$ref" : "#/components/schemas/resource"
          },
          "grade" : {
            "type" : "string",
            "description" : "Part stock grade"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Horizontal", "Vertical", "Consistent", "None" ]
          },
          "rotation" : {
            "$ref" : "#/components/schemas/rotation"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/resource"
          },
          "x-scale" : {
            "type" : "number",
            "description" : "X-scale of this tiled part",
            "format" : "double"
          },
          "y-scale" : {
            "type" : "number",
            "description" : "Y-scale of this tiled part",
            "format" : "double"
          },
          "tiling-preset" : {
            "$ref" : "#/components/schemas/resource"
          }
        },
        "description" : "Edit tiled part resource",
        "xml" : {
          "name" : "edit-tiled-part-resource"
        }
      },
      "edit-tile-resource" : {
        "required" : [ "spacing" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed"
          },
          "spacing" : {
            "$ref" : "#/components/schemas/spacing"
          },
          "offcut" : {
            "$ref" : "#/components/schemas/offcut"
          },
          "x-scale" : {
            "type" : "number",
            "description" : "Component x-scale",
            "format" : "double"
          },
          "y-scale" : {
            "type" : "number",
            "description" : "Component y-scale",
            "format" : "double"
          },
          "die-design" : {
            "$ref" : "#/components/schemas/resource"
          },
          "tile" : {
            "$ref" : "#/components/schemas/tile"
          }
        },
        "description" : "Edit tile resource",
        "xml" : {
          "name" : "edit-tile-resource"
        }
      },
      "repeat-template" : {
        "required" : [ "column-space", "columns", "name", "row-space", "rows" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "rows" : {
            "type" : "integer",
            "description" : "Rows",
            "format" : "int32"
          },
          "columns" : {
            "type" : "integer",
            "description" : "Columns",
            "format" : "int32"
          },
          "row-space" : {
            "type" : "string",
            "description" : "Row space"
          },
          "column-space" : {
            "type" : "string",
            "description" : "Column space"
          },
          "rotation" : {
            "type" : "number",
            "description" : "Rotation",
            "format" : "double"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Repeat Template",
        "xml" : {
          "name" : "repeat-template"
        }
      },
      "RestScriptContext" : {
        "type" : "object",
        "properties" : {
          "script" : {
            "$ref" : "#/components/schemas/resourceScriptAsset"
          },
          "data" : {
            "type" : "string",
            "description" : "Optional data to pass into the script (for example a json blob)"
          }
        },
        "description" : "REST Script Context",
        "xml" : {
          "name" : "rest-script-context"
        }
      },
      "ScriptAsset" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "code" : {
            "type" : "string",
            "description" : "The script code"
          },
          "script-file" : {
            "type" : "string",
            "description" : "The file the script came from (if any)"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        }
      },
      "resourceScriptAsset" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID of asset"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to asset"
          },
          "asset" : {
            "$ref" : "#/components/schemas/ScriptAsset"
          }
        },
        "description" : "Library resource",
        "xml" : {
          "name" : "resource"
        }
      },
      "DieDesignEntity" : {
        "required" : [ "height", "name", "width" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of CAD file used during import"
          },
          "width" : {
            "type" : "string",
            "description" : "Width of die design cut lines in default units"
          },
          "height" : {
            "type" : "string",
            "description" : "Height of die design cut lines in default units"
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          }
        },
        "description" : "Die Design entity",
        "xml" : {
          "name" : "die-design"
        }
      },
      "ImportDieDesignEntity" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of template asset to create including folders if desired.  If name is not specified, file name minus extension will be used as the name."
          },
          "id" : {
            "type" : "string",
            "description" : "ID of asset to use.  If not specified a unique ID will be generated."
          },
          "create-folder" : {
            "type" : "boolean",
            "description" : "Boolean controlling whether to create a folder when folder or parent folder(s) does not exist.  By default non-existent folders are not created automatically."
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of template file to import"
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use during import"
          },
          "die-name" : {
            "type" : "string",
            "description" : "Name of die in CAD file to import.  By default if die name is not specified and the CAD file contains multiple dies, the first die listed in the CAD data is used."
          }
        },
        "description" : "Import die design from a CAD file into Die Design Library",
        "xml" : {
          "name" : "import-die-design"
        }
      },
      "mode" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Mode",
        "xml" : {
          "name" : "mode"
        }
      },
      "stock-type" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Stock Type",
        "xml" : {
          "name" : "stock-type"
        }
      },
      "Roll" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Read-only roll name derived from the width of the roll",
            "readOnly" : true
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of this sheet when cost not defined from grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Sheet", "Roll" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "List of rolls specified for this grade",
        "xml" : {
          "name" : "placement"
        }
      },
      "grade" : {
        "required" : [ "caliper", "weight" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Read-only grade name derived from weight and/or caliper of the grade depending on grade display",
            "readOnly" : true
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "grade-display" : {
            "type" : "string",
            "enum" : [ "Weight", "Caliper", "Both" ]
          },
          "weight" : {
            "type" : "number",
            "description" : "Grade weight value",
            "format" : "double"
          },
          "weight-units" : {
            "type" : "string",
            "enum" : [ "GSM", "Lb" ]
          },
          "weight-type" : {
            "type" : "string",
            "enum" : [ "Text", "Book", "Bond", "Offset", "Cover", "Bristol", "Index", "Tag", "Card" ]
          },
          "caliper" : {
            "type" : "string",
            "description" : "Caliper value"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "any-sheet-size" : {
            "type" : "boolean",
            "description" : "When true, any sheet size that can fit on a given press is assumed available via a sheet converter, custom order, etc."
          },
          "sheets" : {
            "type" : "array",
            "description" : "List of sheets specified for this grade",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/sheet"
            }
          },
          "rolls" : {
            "type" : "array",
            "description" : "List of rolls specified for this grade",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/Roll"
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Grade library item",
        "xml" : {
          "name" : "grade"
        }
      },
      "sheet" : {
        "required" : [ "dimension1", "dimension2", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Read-only sheet name derived from the sheet dimensions",
            "readOnly" : true
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "dimension1" : {
            "type" : "string",
            "description" : "First dimension of this sheet"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of this sheet when cost not defined from grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "dimension2" : {
            "type" : "string",
            "description" : "Second dimension of this sheet"
          },
          "grain" : {
            "type" : "string",
            "enum" : [ "Long", "Short", "None" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Sheet", "Roll" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Sheet library item",
        "xml" : {
          "name" : "sheet"
        }
      },
      "stock" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "stock-type" : {
            "$ref" : "#/components/schemas/reference"
          },
          "vendor" : {
            "type" : "string",
            "description" : "Stock vendor name"
          },
          "grades" : {
            "type" : "array",
            "description" : "List of grades specified for this stock",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/grade"
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Stock library item",
        "xml" : {
          "name" : "stock"
        }
      },
      "TemplateEntity" : {
        "required" : [ "height", "name", "width" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of template file used during import"
          },
          "width" : {
            "type" : "string",
            "description" : "Width of template in default units"
          },
          "height" : {
            "type" : "string",
            "description" : "Height of template in default units"
          },
          "thumbnail" : {
            "$ref" : "#/components/schemas/ThumbnailEntity"
          }
        },
        "description" : "Template entity",
        "xml" : {
          "name" : "template"
        }
      },
      "ImportTemplateEntity" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of template asset to create including folders if desired.  If name is not specified, file name minus extension will be used as the name."
          },
          "id" : {
            "type" : "string",
            "description" : "ID of asset to use.  If not specified a unique ID will be generated."
          },
          "create-folder" : {
            "type" : "boolean",
            "description" : "Boolean controlling whether to create a folder when folder or parent folder(s) does not exist.  By default non-existent folders are not created automatically."
          },
          "path" : {
            "type" : "string",
            "description" : "Full path of template file to import"
          },
          "preset" : {
            "type" : "string",
            "description" : "Name of preset to use during import"
          },
          "import-die-designs" : {
            "type" : "boolean",
            "description" : "Whether or not to import individual die designs from this template into the Die Designs library"
          },
          "die-designs-folder" : {
            "type" : "string",
            "description" : "Optional folder in Die Designs library to import die designs from this template into.  Ignored if import die designs is disabled and defaults to root folder if not set."
          }
        },
        "description" : "Import template into Template Library",
        "xml" : {
          "name" : "import-template"
        }
      },
      "FoldingPatternEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          }
        },
        "description" : "Folding pattern library item",
        "xml" : {
          "name" : "folding-pattern"
        }
      },
      "MarkSetEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          }
        },
        "description" : "Mark set library item",
        "xml" : {
          "name" : "markset"
        }
      },
      "MarkEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "smart" : {
            "type" : "boolean",
            "description" : "Whether mark is smart or manual"
          },
          "anchor" : {
            "type" : "string",
            "description" : "Smart mark anchor",
            "enum" : [ "Plate", "Sheet", "Group", "Product" ]
          }
        },
        "description" : "Mark library item",
        "xml" : {
          "name" : "mark"
        }
      },
      "MarkAsset" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        }
      },
      "PropertyRuleGroup" : {
        "type" : "object",
        "properties" : {
          "logic" : {
            "type" : "string",
            "writeOnly" : true,
            "enum" : [ "And", "Or" ]
          },
          "empty" : {
            "type" : "boolean"
          }
        },
        "description" : "Mark conditional rules"
      },
      "advanced-placement" : {
        "type" : "object",
        "properties" : {
          "rotation" : {
            "type" : "number",
            "description" : "Mark rotation",
            "format" : "double"
          },
          "mirror" : {
            "type" : "boolean",
            "description" : "Mark mirroring"
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          },
          "horizontal-placement" : {
            "$ref" : "#/components/schemas/horizontal-placement"
          },
          "vertical-placement" : {
            "$ref" : "#/components/schemas/vertical-placement"
          }
        },
        "description" : "Advanced placement settings",
        "xml" : {
          "name" : "advanced-placement"
        }
      },
      "barcode-mark" : {
        "required" : [ "conditions", "mark-appearance", "name", "placement", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "placement" : {
            "$ref" : "#/components/schemas/mark-placement"
          },
          "conditions" : {
            "$ref" : "#/components/schemas/PropertyRuleGroup"
          },
          "mark-appearance" : {
            "$ref" : "#/components/schemas/barcode-mark-props"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Shape", "Barcode", "Collation", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Barcode Mark",
        "xml" : {
          "name" : "barcode-mark"
        }
      },
      "barcode-mark-props" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/barcode-size-props"
          }
        },
        "description" : "Barcode mark props",
        "xml" : {
          "name" : "barcode-mark-props"
        }
      },
      "barcode-size-props" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/length"
          },
          "height" : {
            "$ref" : "#/components/schemas/length"
          }
        },
        "description" : "Barcode size props",
        "xml" : {
          "name" : "barcode-size-props"
        }
      },
      "basic-placement" : {
        "type" : "object",
        "properties" : {
          "rules" : {
            "type" : "array",
            "description" : "Mark placement rules",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/mark-rule"
            }
          },
          "rules-are-global" : {
            "type" : "boolean",
            "description" : "Specify whether mark rules apply to the anchor global rect or local orientation"
          }
        },
        "description" : "Basic placement settings",
        "xml" : {
          "name" : "basic-placement"
        }
      },
      "bleed-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Bleed rule",
        "xml" : {
          "name" : "bleed-rule"
        }
      },
      "collation-mark-props" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/collation-size-props"
          }
        },
        "description" : "Collation mark props",
        "xml" : {
          "name" : "collation-mark-props"
        }
      },
      "collation-size-props" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/length"
          },
          "height" : {
            "$ref" : "#/components/schemas/length"
          }
        },
        "description" : "Collation size props",
        "xml" : {
          "name" : "collation-size-props"
        }
      },
      "custom-mark-props" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/custom-size-props"
          }
        },
        "description" : "Custom mark props",
        "xml" : {
          "name" : "custom-mark-props"
        }
      },
      "custom-size-props" : {
        "required" : [ "pdf-box-type" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/length"
          },
          "height" : {
            "$ref" : "#/components/schemas/length"
          },
          "pdf-box-type" : {
            "type" : "string",
            "description" : "PDF Box type",
            "enum" : [ "MediaBox", "BleedBox", "CropBox", "TrimBox", "ArtBox" ]
          }
        },
        "description" : "Custom size props",
        "xml" : {
          "name" : "custom-size-props"
        }
      },
      "dielines-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "tool-type" : {
            "$ref" : "#/components/schemas/tool-type"
          }
        },
        "description" : "Dielines rule",
        "xml" : {
          "name" : "dielines-rule"
        }
      },
      "dynamic-length" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "operand" : {
            "type" : "string",
            "enum" : [ "Plate", "PlatePunch", "Sheet", "ContentMargins", "ImageMargins", "Gripper", "Group", "DieTemplate", "StepAndRepeat", "Component", "Flat", "Signature", "BoundSignature", "FoldedSignature", "Tile", "Page" ]
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "Percent", "Adjustment" ]
          }
        },
        "description" : "Dynamic length",
        "xml" : {
          "name" : "dynamic-length"
        }
      },
      "fill" : {
        "required" : [ "color" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "$ref" : "#/components/schemas/mark-color"
          }
        },
        "description" : "Fill",
        "xml" : {
          "name" : "fill"
        }
      },
      "fixed-length" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Fixed length",
        "xml" : {
          "name" : "fixed-length"
        }
      },
      "folds-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Folds rule",
        "xml" : {
          "name" : "folds-rule"
        }
      },
      "general-props" : {
        "required" : [ "clipping", "overprint-mode", "underprint" ],
        "type" : "object",
        "properties" : {
          "layer" : {
            "type" : "string",
            "description" : "Layer"
          },
          "stroke" : {
            "$ref" : "#/components/schemas/stroke"
          },
          "fill" : {
            "$ref" : "#/components/schemas/fill"
          },
          "underprint" : {
            "$ref" : "#/components/schemas/underprint"
          },
          "clipping" : {
            "$ref" : "#/components/schemas/underprint"
          },
          "overprint-mode" : {
            "type" : "string",
            "enum" : [ "None", "Standard", "Illustrator" ]
          }
        },
        "description" : "General props",
        "xml" : {
          "name" : "general-props"
        }
      },
      "gutters-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Gutters rule",
        "xml" : {
          "name" : "gutters-rule"
        }
      },
      "horizontal-placement" : {
        "required" : [ "repeat-settings" ],
        "type" : "object",
        "properties" : {
          "anchor-option" : {
            "type" : "string",
            "enum" : [ "Rules", "MaxSpacing", "Quantity", "Gutters", "Folds", "Bleed", "Dielines" ]
          },
          "repeat-settings" : {
            "$ref" : "#/components/schemas/repeat-settings"
          },
          "rules" : {
            "type" : "array",
            "description" : "rules",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/x-rule"
            }
          },
          "max-spacing" : {
            "$ref" : "#/components/schemas/max-spacing-rule"
          },
          "quantity" : {
            "$ref" : "#/components/schemas/quantity-rule"
          },
          "gutters" : {
            "$ref" : "#/components/schemas/gutters-rule"
          },
          "folds" : {
            "$ref" : "#/components/schemas/folds-rule"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed-rule"
          },
          "dielines" : {
            "$ref" : "#/components/schemas/dielines-rule"
          }
        },
        "description" : "Horizontal placement",
        "xml" : {
          "name" : "horizontal-placement"
        }
      },
      "length" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Length",
        "xml" : {
          "name" : "length"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "FixedLength" : "#/components/schemas/fixed-length",
            "DynamicLength" : "#/components/schemas/dynamic-length"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/shape-mark"
        } ]
      },
      "mapping" : {
        "required" : [ "source", "text", "text-match" ],
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string",
            "enum" : [ "Spot", "Layer" ]
          },
          "paint-type" : {
            "type" : "string",
            "enum" : [ "Filled", "Stroked", "FilledOrStroked", "FilledAndStroked" ]
          },
          "text-match" : {
            "type" : "string",
            "enum" : [ "Equals", "StartsWith", "Contains" ]
          },
          "text" : {
            "type" : "string",
            "description" : "Mapping text"
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "join-style" : {
            "type" : "string",
            "enum" : [ "None", "Miter", "Bevel", "Round" ]
          },
          "miter-limit" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Mapping",
        "xml" : {
          "name" : "mapping"
        }
      },
      "mark" : {
        "required" : [ "conditions", "mark-appearance", "name", "placement", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "placement" : {
            "$ref" : "#/components/schemas/mark-placement"
          },
          "conditions" : {
            "$ref" : "#/components/schemas/PropertyRuleGroup"
          },
          "mark-appearance" : {
            "$ref" : "#/components/schemas/mark-appearance"
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Shape", "Barcode", "Collation", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Mark - base object marks",
        "xml" : {
          "name" : "mark"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "ShapeMark" : "#/components/schemas/shape-mark",
            "BarcodeMark" : "#/components/schemas/barcode-mark"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/shape-mark"
        }, {
          "$ref" : "#/components/schemas/barcode-mark"
        } ]
      },
      "mark-appearance" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/size-props"
          }
        },
        "description" : "Mark appearance",
        "xml" : {
          "name" : "mark-appearance"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SimpleMarkProps" : "#/components/schemas/simple-mark-props",
            "ShapeMarkProps" : "#/components/schemas/shape-mark-props",
            "BarcodeMarkProps" : "#/components/schemas/barcode-mark-props",
            "CustomMarkProps" : "#/components/schemas/custom-mark-props",
            "CollationMarkProps" : "#/components/schemas/collation-mark-props"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/shape-mark"
        } ]
      },
      "mark-color" : {
        "type" : "object",
        "description" : "Mark color",
        "xml" : {
          "name" : "mark-color"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SimpleMarkProps" : "#/components/schemas/simple-mark-props",
            "ShapeMarkProps" : "#/components/schemas/shape-mark-props"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/shape-mark"
        } ]
      },
      "mark-placement" : {
        "required" : [ "advanced-placement", "anchor", "basic-placement", "mode", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Smart", "Manual" ]
          },
          "anchor" : {
            "type" : "string",
            "enum" : [ "Plate", "PlatePunch", "Sheet", "ContentMargins", "ImageMargins", "Gripper", "Group", "DieTemplate", "StepAndRepeat", "Component", "Flat", "Signature", "BoundSignature", "FoldedSignature", "Tile", "Page" ]
          },
          "mode" : {
            "type" : "string",
            "enum" : [ "Basic", "Advanced" ]
          },
          "basic-placement" : {
            "$ref" : "#/components/schemas/basic-placement"
          },
          "advanced-placement" : {
            "$ref" : "#/components/schemas/advanced-placement"
          },
          "both-sides" : {
            "type" : "boolean",
            "description" : "Place mark instances on bothsides"
          }
        },
        "description" : "Mark placement settings",
        "xml" : {
          "name" : "mark-placement"
        }
      },
      "mark-rule" : {
        "type" : "object",
        "properties" : {
          "rotation" : {
            "type" : "number",
            "description" : "Mark rotation",
            "format" : "double"
          }
        },
        "description" : "Mark rule",
        "xml" : {
          "name" : "mark-rule"
        }
      },
      "max-spacing-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "max-spacing" : {
            "$ref" : "#/components/schemas/ScalarValue"
          }
        },
        "description" : "Max spacing rule",
        "xml" : {
          "name" : "max-spacing-rule"
        }
      },
      "quantity-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "Quantity of marks to place",
            "format" : "int32"
          }
        },
        "description" : "Quantity rule",
        "xml" : {
          "name" : "quantity-rule"
        }
      },
      "repeat-settings" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "All", "Range", "Outer", "Inner", "First", "Last", "Odd", "Even" ]
          },
          "range" : {
            "type" : "array",
            "description" : "Repeat settings range",
            "items" : {
              "type" : "integer",
              "description" : "Repeat settings range",
              "format" : "int32",
              "xml" : {
                "name" : "range"
              }
            }
          }
        },
        "description" : "Repeat settings",
        "xml" : {
          "name" : "repeat-settings"
        }
      },
      "shape-mark" : {
        "required" : [ "conditions", "mark-appearance", "name", "placement", "shape-type", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "placement" : {
            "$ref" : "#/components/schemas/mark-placement"
          },
          "conditions" : {
            "$ref" : "#/components/schemas/PropertyRuleGroup"
          },
          "mark-appearance" : {
            "$ref" : "#/components/schemas/shape-mark-props"
          },
          "shape-type" : {
            "type" : "string",
            "enum" : [ "Line", "Rectangle", "Ellipse", "Cross", "CrossHair", "SquareCross", "CmykCross", "SquareCrossFilled", "Target", "TargetCmyk", "HalfTarget", "Corner1", "SGArrowLeft", "SGArrowRight", "SGParallelGuideLeft", "SGParallelGuideRight" ]
          },
          "type" : {
            "type" : "string",
            "xml" : {
              "attribute" : true
            },
            "enum" : [ "Shape", "Barcode", "Collation", "Custom" ]
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Shape Mark",
        "xml" : {
          "name" : "shape-mark"
        }
      },
      "shape-mark-props" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/shape-size-props"
          }
        },
        "description" : "Shape mark props",
        "xml" : {
          "name" : "shape-mark-props"
        }
      },
      "shape-size-props" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/length"
          },
          "height" : {
            "$ref" : "#/components/schemas/length"
          },
          "diameter" : {
            "$ref" : "#/components/schemas/length"
          },
          "gap-length" : {
            "$ref" : "#/components/schemas/length"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/length"
          }
        },
        "description" : "Shape size props",
        "xml" : {
          "name" : "shape-size-props"
        }
      },
      "simple-mark-props" : {
        "type" : "object",
        "properties" : {
          "general" : {
            "$ref" : "#/components/schemas/general-props"
          },
          "size" : {
            "$ref" : "#/components/schemas/size-props"
          }
        },
        "description" : "Simple mark props",
        "xml" : {
          "name" : "simple-mark-props"
        }
      },
      "size-props" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/length"
          },
          "height" : {
            "$ref" : "#/components/schemas/length"
          }
        },
        "description" : "Size props",
        "xml" : {
          "name" : "size-props"
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "SizeProps" : "#/components/schemas/size-props",
            "ShapeSizeProps" : "#/components/schemas/shape-size-props",
            "BarcodeSizeProps" : "#/components/schemas/barcode-size-props"
          }
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/shape-mark"
        } ]
      },
      "stroke" : {
        "required" : [ "color" ],
        "type" : "object",
        "properties" : {
          "color" : {
            "$ref" : "#/components/schemas/mark-color"
          },
          "width" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "cap-style" : {
            "type" : "string",
            "description" : "Cap-style",
            "enum" : [ "Butt", "Round", "None", "Square" ]
          },
          "join-style" : {
            "type" : "string",
            "description" : "Join-style",
            "enum" : [ "Miter", "Round", "Bevel" ]
          },
          "miter-limit" : {
            "type" : "number",
            "description" : "Miter-limit",
            "format" : "double"
          },
          "dash-pattern" : {
            "type" : "array",
            "description" : "Dash pattern",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/ScalarValue"
            }
          }
        },
        "description" : "Stroke",
        "xml" : {
          "name" : "stroke"
        }
      },
      "tool-type" : {
        "required" : [ "mappings", "name", "process", "width" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Unique ID",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "description" : "Name"
          },
          "created-on" : {
            "type" : "string",
            "description" : "Created On",
            "format" : "date-time",
            "readOnly" : true
          },
          "modified-on" : {
            "type" : "string",
            "description" : "Modified On",
            "format" : "date-time",
            "readOnly" : true
          },
          "version" : {
            "type" : "string",
            "description" : "Version",
            "readOnly" : true
          },
          "description" : {
            "type" : "string",
            "description" : "Description"
          },
          "notes" : {
            "type" : "string",
            "description" : "Notes"
          },
          "external-id" : {
            "type" : "string",
            "description" : "External ID"
          },
          "process" : {
            "$ref" : "#/components/schemas/reference"
          },
          "width" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "mappings" : {
            "type" : "array",
            "description" : "Tool type mappings",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/mapping"
            }
          },
          "path" : {
            "type" : "string",
            "description" : "Path"
          },
          "properties" : {
            "type" : "array",
            "description" : "Custom properties",
            "writeOnly" : true,
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/propertyObject"
            }
          }
        },
        "description" : "Tool type",
        "xml" : {
          "name" : "tool-type"
        }
      },
      "underprint" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "None", "Anchor", "AnchorShape", "AnchorBleed", "MarkBounds" ]
          },
          "margins" : {
            "$ref" : "#/components/schemas/margins"
          }
        },
        "description" : "Underprint",
        "xml" : {
          "name" : "underprint"
        }
      },
      "vertical-placement" : {
        "required" : [ "repeat-settings" ],
        "type" : "object",
        "properties" : {
          "anchor-option" : {
            "type" : "string",
            "enum" : [ "Rules", "MaxSpacing", "Quantity", "Gutters", "Folds", "Bleed", "Dielines" ]
          },
          "repeat-settings" : {
            "$ref" : "#/components/schemas/repeat-settings"
          },
          "rules" : {
            "type" : "array",
            "description" : "rules",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/y-rule"
            }
          },
          "max-spacing" : {
            "$ref" : "#/components/schemas/max-spacing-rule"
          },
          "quantity" : {
            "$ref" : "#/components/schemas/quantity-rule"
          },
          "gutters" : {
            "$ref" : "#/components/schemas/gutters-rule"
          },
          "folds" : {
            "$ref" : "#/components/schemas/folds-rule"
          },
          "bleed" : {
            "$ref" : "#/components/schemas/bleed-rule"
          },
          "dielines" : {
            "$ref" : "#/components/schemas/dielines-rule"
          }
        },
        "description" : "Vertical placement",
        "xml" : {
          "name" : "vertical-placement"
        }
      },
      "x-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "anchor" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "scale" : {
            "type" : "number",
            "description" : "Scale",
            "format" : "double"
          }
        },
        "description" : "X-rule",
        "xml" : {
          "name" : "x-rule"
        }
      },
      "y-rule" : {
        "type" : "object",
        "properties" : {
          "mark" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "offset" : {
            "$ref" : "#/components/schemas/ScalarValue"
          },
          "anchor" : {
            "type" : "string",
            "enum" : [ "Right", "Left", "Center", "Bottom", "Top" ]
          },
          "scale" : {
            "type" : "number",
            "description" : "Scale",
            "format" : "double"
          }
        },
        "description" : "Y-rule",
        "xml" : {
          "name" : "y-rule"
        }
      },
      "GradeEntity" : {
        "required" : [ "caliper", "name", "weight" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "grade-display" : {
            "type" : "string",
            "description" : "Grade display",
            "enum" : [ "Weight", "Caliper", "Both" ]
          },
          "weight" : {
            "type" : "number",
            "description" : "Grade weight value",
            "format" : "double"
          },
          "weight-units" : {
            "type" : "string",
            "description" : "Grade weight units",
            "enum" : [ "GSM", "Lb" ]
          },
          "weight-type" : {
            "type" : "string",
            "description" : "Grade weight type for pound (Lb) standard weights",
            "enum" : [ "Text", "Book", "Bond", "Offset", "Cover", "Bristol", "Index", "Tag", "Card" ]
          },
          "caliper" : {
            "type" : "string",
            "description" : "Caliper value"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "description" : "Cost unit type of grade",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "any-sheet-size" : {
            "type" : "boolean",
            "description" : "When true, any sheet size that can fit on a given press is assumed available via a sheet converter, custom order, etc."
          },
          "sheets" : {
            "type" : "array",
            "description" : "List of sheets specified for this grade",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/SheetEntity"
            }
          },
          "rolls" : {
            "type" : "array",
            "description" : "List of rolls specified for this grade",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/RollEntity"
            }
          }
        },
        "description" : "Grade library item",
        "xml" : {
          "name" : "grade"
        }
      },
      "RollEntity" : {
        "required" : [ "name", "width" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "stock-id" : {
            "type" : "string",
            "description" : "ID of the stock of this roll"
          },
          "grade-id" : {
            "type" : "string",
            "description" : "ID of the grade of this roll"
          },
          "width" : {
            "type" : "string",
            "description" : "Roll width"
          },
          "cost" : {
            "type" : "number",
            "description" : "Cost of this roll when cost not defined from grade",
            "format" : "double"
          },
          "cost-units" : {
            "type" : "string",
            "description" : "Cost unit type of this roll when not defined from grade",
            "enum" : [ "FromGrade", "PerSheet", "Per500Sheets", "Per1000Sheets", "PerLb", "Per500Lb", "Per1000Lb", "PerKg", "Per1000Kg", "PerFt2", "PerM2", "PerFt", "PerM", "PerMSF", "PerMSI" ]
          },
          "grain" : {
            "type" : "string",
            "description" : "The grain of this roll.  Grain defaults to AlongRoll when not specified.",
            "enum" : [ "AlongRoll", "AcrossRoll", "None" ]
          }
        },
        "description" : "Roll library item",
        "xml" : {
          "name" : "roll"
        }
      },
      "StockEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          },
          "stock-type" : {
            "$ref" : "#/components/schemas/LibraryItemEntity"
          },
          "vendor" : {
            "type" : "string",
            "description" : "Stock vendor name"
          },
          "grades" : {
            "type" : "array",
            "description" : "List of grades specified for this stock",
            "xml" : {
              "wrapped" : true
            },
            "items" : {
              "$ref" : "#/components/schemas/GradeEntity"
            }
          }
        },
        "description" : "Stock library item",
        "xml" : {
          "name" : "stock"
        }
      },
      "PresetEntity" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of library item"
          },
          "id" : {
            "type" : "string",
            "description" : "Unique ID of this item (auto-generated, read-only)"
          },
          "external-id" : {
            "type" : "string",
            "description" : "Optional external ID of media item"
          },
          "description" : {
            "type" : "string",
            "description" : "Asset description"
          }
        },
        "description" : "Information about a single preset",
        "xml" : {
          "name" : "preset"
        }
      }
    }
  }
}